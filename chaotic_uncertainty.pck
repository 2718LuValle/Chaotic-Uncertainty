chaotic_uncertainty.pck <-
c("chaotic_uncertainty.pck", "superloopSP", "superloop2modSP", 
"superloop2modL", "lik.sn.summary2.twomodc", "superloopL", "lik.sn.summary2newL", 
"lik.sn.summary2.twomodcSP", "lik.sn.summary2new", "Fsp.nat0full0plus", 
"Hsp.nat0full0plus", "LorenzPLUSERRORS1A1", "my.uberloop.totysp", 
"likelihood.compare.back.2mod.ecdf.by.season.rep", "my.overloopHF.totysp", 
"my.test.chaos.reg4nn.measure.orig.augH.movie.percseas.clean.toty", 
"matlag1", "matlag0", "dim.est.loop.calc", "dim.est.calc", "dim.est", 
"disjoint.delaymap.make1", "seas.adj.pred", "my.test.chaos.reg4nn.child2.toty", 
"rm.na.reg.4y", "my.cp.extract.larsnntry2a", "princompreg", "gen.inv1", 
"is.inf", "fdr", "likelihood.compare.back.2mod.ecdf", "likelihood.compare.back.ecdf1", 
"predlik.test1", "predlik.sd1", "analog.llik.ecdf", "predlik.test", 
"likelihood.compare.back.by.season.ecdf.rep", "likelihood.compare.back.ecdf", 
"analog.llik", "ecdf.wt", "my.pair.loop.toty", "my.uberloop.totyL", 
"my.overloopHF.totyL", "predlik.sd")
superloopSP <-
function(n,modvec=c(1,2,10),y=3,cvar=c(1,2,3),odat1=Fsp.nat0full0plus,odat2=Hsp.nat0full0plus){
likmat<-NULL
Pmat<-NULL
sdmat<-NULL
ldmat<-NULL
sd2mat<-NULL
fdr.list<-list()
likmatH<-NULL
PmatH<-NULL
sdmatH<-NULL
ldmatH<-NULL
sd2matH<-NULL
fdrH.list<-list()
par(mfcol=c(1,2))
for(i in 1:n){
psuedo.history.rep<-my.uberloop.totysp(modvec,odatA=odat1,odatB=odat2)
dum<-likelihood.compare.back.by.season.ecdf.rep(psuedo.history.rep,Fresno=T,xvar=y,xcvar=cvar)
likmat<-rbind(likmat,c(dum$likvec))
ldmat<-rbind(ldmat,c(dum$likdif))
sd2mat<-rbind(sd2mat,c(dum$sddif))
sdmat<-rbind(sdmat,c(dum$sdvec))
Pmat<-rbind(Pmat,c(dum$pvec))
fdr.list[[i]]<-dum$fdr.out
dumH<-likelihood.compare.back.by.season.ecdf.rep(psuedo.history.rep,Fresno=F,xvar=y,xcvar=cvar)
likmatH<-rbind(likmatH,c(dumH$likvec))
ldmatH<-rbind(ldmatH,c(dumH$likdif))
sd2matH<-rbind(sd2matH,c(dumH$sddif))
sdmatH<-rbind(sdmatH,c(dumH$sdvec))
PmatH<-rbind(PmatH,c(dumH$pvec))
fdrH.list[[i]]<-dumH$fdr.out

}
v3<-NULL
for(i in 1:n){
v1<-fdr.list[[i]]
o1<-order(v1$order)
v2<-v1$padj[o1]
v3<-cbind(v3,v2)
}
v3<-cbind(v3,1:24)

fresno<-list(lik=likmat,sd=sdmat,P=Pmat,fdrout=fdr.list,Padjmat=v3,likdif=ldmat,sddiff=sd2mat)
hawaii<-list(lik=likmatH,sd=sdmatH,P=PmatH,fdrout=fdrH.list,PadjmatH=v3,likdifH=ldmat,sddiffH=sd2mat)
list(Fresno=fresno, Hawaii=hawaii)
}
superloop2modSP <-
function(n,mvec1=c(1,2,7,8,9),mvec2=c(1:6),y1=1,y2=1,cvec1=c(1:5),cvec2=c(1:6),odat1=Fsp.nat0full0plus,odat2=Hsp.nat0full0plus){
likmat<-NULL
likmat1<-NULL
likmat2<-NULL
Pmat<-NULL
sdmat<-NULL
fdr.list<-list()
Hlikmat<-NULL
Hlikmat1<-NULL
Hlikmat2<-NULL
HPmat<-NULL
Hsdmat<-NULL
Hfdr.list<-list()

for(i in 1:n){
psuedo.history.rep1<-my.uberloop.totysp(mvec1,odatA=odat1,odatB=odat2)
psuedo.history.rep2<-my.uberloop.totysp(mvec2,odatA=odat1,odatB=odat2)
dumH<-likelihood.compare.back.2mod.ecdf.by.season.rep(psuedo.history.rep1,psuedo.history.rep2,Fresno=F,xvar1=y1,xvar2=y2,xcvar1=cvec1,xcvar2=cvec2)
dum<-likelihood.compare.back.2mod.ecdf.by.season.rep(psuedo.history.rep1,psuedo.history.rep2,Fresno=T,xvar1=y1,xvar2=y2,xcvar1=cvec1,xcvar2=cvec2)

likmat<-rbind(likmat,c(dum$likdifvec))
likmat1<-rbind(likmat1,c(dum$likvec1))
likmat2<-rbind(likmat2,c(dum$likvec2))
sdmat<-rbind(sdmat,c(dum$sdvec))
Pmat<-rbind(Pmat,c(dum$pvec))
fdr.list[[i]]<-dum$fdr.out
Hlikmat<-rbind(Hlikmat,c(dumH$likdifvec))
Hlikmat1<-rbind(Hlikmat1,c(dumH$likvec1))
Hlikmat2<-rbind(Hlikmat2,c(dumH$likvec2))
Hsdmat<-rbind(Hsdmat,c(dumH$sdvec))
HPmat<-rbind(HPmat,c(dumH$pvec))
Hfdr.list[[i]]<-dumH$fdr.out

}
v3<-NULL
for(i in 1:n){
v1<-fdr.list[[i]]
o1<-order(v1$order)
v2<-v1$padj[o1]
v3<-cbind(v3,v2)
}
v3<-cbind(v3,1:40)
Hv3<-NULL
for(i in 1:n){
Hv1<-Hfdr.list[[i]]
Ho1<-order(Hv1$order)
Hv2<-Hv1$padj[Ho1]
Hv3<-cbind(Hv3,Hv2)
}
Hv3<-cbind(Hv3,1:40)
Hawaii<-list(lik=Hlikmat,lik1=Hlikmat1,lik2=Hlikmat2,sd=Hsdmat,P=HPmat,fdrout=Hfdr.list,Padjmat=Hv3)
Fresno<-list(lik=likmat,lik1=likmat1,lik2=likmat2,sd=sdmat,P=Pmat,fdrout=fdr.list,Padjmat=v3)
list(Hawaii=Hawaii,Fresno=Fresno)
}
superloop2modL <-
function(n,zzvec1=c(3,1),zzvec2=c(3,2),y1=1,y2=1,cvar1=c(1,2),cvar2=c(1,2)){
likmat<-NULL
likmat1<-NULL
likmat2<-NULL
Pmat<-NULL
sdmat<-NULL
fdr.list<-list()
for(i in 1:n){
psuedo.history.rep1<-my.uberloop.totyL(zzvec1)
psuedo.history.rep2<-my.uberloop.totyL(zzvec2)
dum<-likelihood.compare.back.2mod.ecdf.by.season.rep(psuedo.history.rep1,psuedo.history.rep2,Fresno=F,xvar1=y1,xvar2=y2,xcvar1=cvar1,xcvar2=cvar2)
likmat<-rbind(likmat,c(dum$likdifvec))
likmat1<-rbind(likmat1,c(dum$likvec1))
likmat2<-rbind(likmat2,c(dum$likvec2))
sdmat<-rbind(sdmat,c(dum$sdvec))
Pmat<-rbind(Pmat,c(dum$pvec))
fdr.list[[i]]<-dum$fdr.out
}
v3<-NULL
for(i in 1:n){
v1<-fdr.list[[i]]
o1<-order(v1$order)
v2<-v1$padj[o1]
v3<-cbind(v3,v2)
}
v3<-cbind(v3,1:40)

list(lik=likmat,lik1=likmat1,lik2=likmat2,sd=sdmat,P=Pmat,fdrout=fdr.list,Padjmat=v3)
}
lik.sn.summary2.twomodc <-
function(vec,title="",do.plot=T,col.start=3,alpha=.05){
n1<-length(vec)
llikmat<-NULL
llikmat1<-NULL
llikmat2<-NULL
Padjmat<-NULL
sdmat<-NULL
original<-NULL
Pstar<-NULL
for(i in 1:n1){
	str0<-eval(as.name(vec[i]))
	llikmat<-rbind(llikmat,str0$lik)
	llikmat1<-rbind(llikmat1,str0$lik1)
      llikmat2<-rbind(llikmat2,str0$lik2)
	n99<-length(str0$fdrout)
	for(j in 1:n99){
	original<-rbind(original,c(str0$fdrout[[j]]$original))
	Pstar<-c(Pstar,str0$fdrout[[j]]$Pstar)
	#print(attributes(str0$fdrout[[j]]))
	}
	sdmat<-rbind(sdmat,str0$sd)
	nloc<-length(str0$Padjmat[1,])
	Padjmat<-cbind(Padjmat,str0$Padjmat[,-nloc])
}
np<-length(original[,1])
nsamp<-length(Padjmat[1,])
vv0<-c(4,4,4,4,3,3,3,2,2,1)
vv1<-rep(vv0,4)
print(dim(llikmat))
mv1<-apply(llikmat,2,mean)
mv2<-apply(llikmat1,2,mean)
mv3<-apply(llikmat2,2,mean)

zzline<-rep(0,40)
sv1a<-apply(llikmat,2,sd)
sv1b<-apply((sdmat^2),2,max)
sv1<-sqrt((sv1a^2/nsamp+sv1b))
qmul<-qt(1-alpha/2,nsamp-1)
par(mfrow=c(floor(np/2+1),2))

if(do.plot){
for(i in 1:np){
	fdr(original[i,],.1,F,do.plot,title)
}
}else{
par(mfrow=c(2,1))
plot(rep(c(1:40),2),c(mv2,mv3),type="n",xlab="sequence",ylab="likelihood",main=paste(title,"Raw likelihoods"))
lines(c(1:40),mv2)
text(c(1:40),mv2,vv1)
lines(c(1:40),mv3,col=2)
text(c(1:40),mv3,vv1,col=2)
lines(c(10.5,10.5),c(-40,40),col=3)
lines(c(20.5,20.5),c(-40,40),col=2)
lines(c(30.5,30.5),c(-40,40),col=7)


plot(rep(c(1:40),3),c(mv1,zzline+qmul*sv1,zzline-qmul*sv1),type="n",xlab="sequence",ylab="likelihood",main=paste(title,"max(P*)=",floor(1e4*max(Pstar))/1e4))
lines(c(1:40),mv1)
text(c(1:40),mv1,vv1)
lines(c(1:40),zzline+qmul*sv1,col=2)
lines(c(1:40),zzline-qmul*sv1,col=2)
lines(c(1:40),mv1,col=col.start)
text(c(1:40),mv1,vv1,col=col.start)
lines(c(1:40),zzline+qmul*sv1,col=col.start+1)
lines(c(1:40),zzline-qmul*sv1,col=col.start+1)

vv1<-c(2,3,4,6,7,9)
vv2<-c(vv1,vv1+10,vv1+20,vv1+30)
np<-length(Padjmat[1,])
for(i in 1:length(Padjmat[,1])){
	if(sum((Padjmat[i,]<.1))==np){
#print(Padjmat[i,])
		text(i,mv1[i],"X",col=2)
	}
}

lines(c(10.5,10.5),c(-20,20),col=3)
lines(c(20.5,20.5),c(-20,20),col=2)
lines(c(30.5,30.5),c(-20,20),col=7)
lines(c(0,40),c(0,0),col=4)
}

}
superloopL <-
function(n,Y=1,cvar=1:3){
likmat<-NULL
Pmat<-NULL
sdmat<-NULL
ldmat<-NULL
sd2mat<-NULL
fdr.list<-list()
likmatH<-NULL
PmatH<-NULL
sdmatH<-NULL
ldmatH<-NULL
sd2matH<-NULL
fdrH.list<-list()
par(mfcol=c(1,2))
for(i in 1:n){
psuedo.history.rep<-my.uberloop.totyL(c(1:3))
dum<-likelihood.compare.back.by.season.ecdf.rep(psuedo.history.rep,Fresno=F,xvar=Y,xcvar=cvar)
likmat<-rbind(likmat,c(dum$likvec))
ldmat<-rbind(ldmat,c(dum$likdif))
sd2mat<-rbind(sd2mat,c(dum$sddif))
sdmat<-rbind(sdmat,c(dum$sdvec))
Pmat<-rbind(Pmat,c(dum$pvec))
fdr.list[[i]]<-dum$fdr.out

}
v3<-NULL
for(i in 1:n){
v1<-fdr.list[[i]]
o1<-order(v1$order)
v2<-v1$padj[o1]
v3<-cbind(v3,v2)
}
v3<-cbind(v3,1:24)

fresno<-list(lik=likmat,sd=sdmat,P=Pmat,fdrout=fdr.list,Padjmat=v3,likdif=ldmat,sddiff=sd2mat)
list(Fresno=fresno)
}
lik.sn.summary2newL <-
function(vec,title="",do.plot=T,col.start=3,alpha=.05){
Fresno<-T
n1<-length(vec)
#Fix to reflect same calculation as in likelihood difference
n1<-length(vec)
llikmat<-NULL
Padjmat<-NULL
sdmat<-NULL
ldmat<-NULL
sd2mat<-NULL
original<-NULL
Pstar<-NULL
for(i in 1:n1){
	str0a<-eval(as.name(vec[i]))
	if(Fresno){
		str0<-str0a$Fresno
		#title<-paste(title,"Fresno")
	}else{
		str0<-str0a$Hawaii
		title<-paste(title,"Hawaii")
	}
	llikmat<-rbind(llikmat,str0$lik)
	ldmat<-rbind(ldmat,str0$likdif)
	sd2mat<-rbind(sd2mat,str0$sddif)
	sdmat<-rbind(sdmat,str0$sd)
	nm<-length(str0$Padjmat[1,])
	Padjmat<-cbind(Padjmat,str0$Padjmat[,-nm])
	n99<-length(str0$fdrout)
	for(j in 1:n99){
	original<-rbind(original,c(str0$fdrout[[j]]$original))
	Pstar<-c(Pstar,str0$fdrout[[j]]$Pstar)
	#print(attributes(str0$fdrout[[j]]))
	}

}
np<-length(original[,1])
if(do.plot){
par(mfrow=c(floor(np+1)/2,2))
Interesting<-fdr(original[1,],.1,F,do.plot,title)$Interesting
for(i in 2:np){
	Interesting<-intersect(Interesting,fdr(original[i,],.1,F,do.plot,title)$Interesting)
}
}else{
Interesting<-fdr(original[1,],.1,F,do.plot,title)$Interesting
for(i in 2:np){
	Interesting<-intersect(Interesting,fdr(original[i,],.1,F,do.plot,title)$Interesting)
}


par(mfrow=c(2,1))
nsamp<-length(Padjmat[1,])
vv0<-c(4,4,4,4,3,3,3,2,2,1)
vv1<-rep(vv0,4)
vv0a<-c(4,4,4,3,3,2)
vv1a<-rep(vv0a,4)
mv1<-apply(llikmat,2,mean)
sv1a<-apply(llikmat,2,sd)
sv1b<-apply(sdmat,2,mean)
sv1<-sqrt((sv1a^2/nsamp+sv1b^2))
mvdiff<-apply(ldmat,2,mean)
sddif1a<-apply(ldmat,2,sd)
sddif1b<-apply((sd2mat^2),2,mean)
sv2<-sqrt(sddif1a^2/(nsamp)+sddif1b)
qmul<-qt(1-alpha/2,nsamp-1)
par(mfrow=c(2,1))
plot(rep(c(1:40),3),c(mv1,mv1+2*sv1,mv1-2*sv1),type="n",xlab="sequence",ylab="likelihood",main=title)
lines(c(1:40),mv1)
text(c(1:40),mv1,vv1)
lines(c(1:40),mv1+qmul*sv1,col=2)
lines(c(1:40),mv1-qmul*sv1,col=2)
lines(c(10.5,10.5),c(-40,40),col=3)
lines(c(20.5,20.5),c(-40,40),col=2)
lines(c(30.5,30.5),c(-40,40),col=7)
plot(rep(c(1:24),3),c(mvdiff,qmul*sv2,-qmul*sv2),type="n",xlab="learning sequence",ylab="likelihood diff",main=title)
lines(c(1:24),mvdiff)
text(c(1:24),mvdiff,vv1a)
lines(c(1:24),qmul*sv2,col=2)
lines(c(1:24),-qmul*sv2,col=2)
lines(c(1:24),rep(0,24),col=3)
for(i in Interesting){
	text(i,mvdiff[i],"***",col=2)
}
lines(c(6.5,6.5),c(-40,40),col=3)
lines(c(12.5,12.5),c(-40,40),col=2)
lines(c(18.5,18.5),c(-40,40),col=7)
}
}
lik.sn.summary2.twomodcSP <-
function(vec,title="",do.plot=T,Fresno=T,col.start=3,alpha=.05){
n1<-length(vec)
llikmat<-NULL
llikmat1<-NULL
llikmat2<-NULL
Padjmat<-NULL
sdmat<-NULL
original<-NULL
Pstar<-NULL
for(i in 1:n1){
	str0a<-eval(as.name(vec[i]))
	if(Fresno){
		str0<-str0a$Fresno
		title<-paste(title,"Fresno")
	}else{
		str0<-str0a$Hawaii
		title<-paste(title,"Hawaii")
	}
	llikmat<-rbind(llikmat,str0$lik)
	llikmat1<-rbind(llikmat1,str0$lik1)
      llikmat2<-rbind(llikmat2,str0$lik2)
	n99<-length(str0$fdrout)
	for(j in 1:n99){
	original<-rbind(original,c(str0$fdrout[[j]]$original))
	Pstar<-c(Pstar,str0$fdrout[[j]]$Pstar)
	#print(attributes(str0$fdrout[[j]]))
	}
	sdmat<-rbind(sdmat,str0$sd)
	nloc<-length(str0$Padjmat[1,])
	Padjmat<-cbind(Padjmat,str0$Padjmat[,-nloc])
}
np<-length(original[,1])
nsamp<-length(Padjmat[1,])
vv0<-c(4,4,4,4,3,3,3,2,2,1)
vv1<-rep(vv0,4)
print(dim(llikmat))
mv1<-apply(llikmat,2,mean)
mv2<-apply(llikmat1,2,mean)
mv3<-apply(llikmat2,2,mean)

zzline<-rep(0,40)
sv1a<-apply(llikmat,2,sd)
sv1b<-apply((sdmat^2),2,max)
sv1<-sqrt((sv1a^2/nsamp+sv1b))
qmul<-qt(1-alpha/2,nsamp-1)
par(mfrow=c(floor(np/2+1),2))

if(do.plot){
for(i in 1:np){
	fdr(original[i,],.1,F,do.plot,title)
}
}else{
par(mfrow=c(2,1))
plot(rep(c(1:40),2),c(mv2,mv3),type="n",xlab="sequence",ylab="likelihood",main=paste(title,"Raw likelihoods"))
lines(c(1:40),mv2)
text(c(1:40),mv2,vv1)
lines(c(1:40),mv3,col=2)
text(c(1:40),mv3,vv1,col=2)
lines(c(10.5,10.5),c(-40,40),col=3)
lines(c(20.5,20.5),c(-40,40),col=2)
lines(c(30.5,30.5),c(-40,40),col=7)


plot(rep(c(1:40),3),c(mv1,zzline+qmul*sv1,zzline-qmul*sv1),type="n",xlab="sequence",ylab="likelihood",main=paste(title,"max(P*)=",floor(1e4*max(Pstar))/1e4))
lines(c(1:40),mv1)
text(c(1:40),mv1,vv1)
lines(c(1:40),zzline+qmul*sv1,col=2)
lines(c(1:40),zzline-qmul*sv1,col=2)
lines(c(1:40),mv1,col=col.start)
text(c(1:40),mv1,vv1,col=col.start)
lines(c(1:40),zzline+qmul*sv1,col=col.start+1)
lines(c(1:40),zzline-qmul*sv1,col=col.start+1)

vv1<-c(2,3,4,6,7,9)
vv2<-c(vv1,vv1+10,vv1+20,vv1+30)
np<-length(Padjmat[1,])
for(i in 1:length(Padjmat[,1])){
	if(sum((Padjmat[i,]<.1))==np){
#print(Padjmat[i,])
		text(i,mv1[i],"X",col=2)
	}
}

lines(c(10.5,10.5),c(-20,20),col=3)
lines(c(20.5,20.5),c(-20,20),col=2)
lines(c(30.5,30.5),c(-20,20),col=7)
lines(c(0,40),c(0,0),col=4)
}

}
lik.sn.summary2new <-
function(vec,title="",do.plot=T,Fresno=T,col.start=3,alpha=.05){
n1<-length(vec)
#Fix to reflect same calculation as in likelihood difference
n1<-length(vec)
llikmat<-NULL
Padjmat<-NULL
sdmat<-NULL
ldmat<-NULL
sd2mat<-NULL
original<-NULL
Pstar<-NULL
for(i in 1:n1){
	str0a<-eval(as.name(vec[i]))
	if(Fresno){
		str0<-str0a$Fresno
		title<-paste(title,"Fresno")
	}else{
		str0<-str0a$Hawaii
		title<-paste(title,"Hawaii")
	}
	llikmat<-rbind(llikmat,str0$lik)
	ldmat<-rbind(ldmat,str0$likdif)
	sd2mat<-rbind(sd2mat,str0$sddif)
	sdmat<-rbind(sdmat,str0$sd)
	nm<-length(str0$Padjmat[1,])
	Padjmat<-cbind(Padjmat,str0$Padjmat[,-nm])
	n99<-length(str0$fdrout)
	for(j in 1:n99){
	original<-rbind(original,c(str0$fdrout[[j]]$original))
	Pstar<-c(Pstar,str0$fdrout[[j]]$Pstar)
	#print(attributes(str0$fdrout[[j]]))
	}

}
np<-length(original[,1])
if(do.plot){
par(mfrow=c(floor(np+1)/2,2))
Interesting<-fdr(original[1,],.1,F,do.plot,title)$Interesting
for(i in 2:np){
	Interesting<-intersect(Interesting,fdr(original[i,],.1,F,do.plot,title)$Interesting)
}
}else{
Interesting<-fdr(original[1,],.1,F,do.plot,title)$Interesting
for(i in 2:np){
	Interesting<-intersect(Interesting,fdr(original[i,],.1,F,do.plot,title)$Interesting)
}


par(mfrow=c(2,1))
nsamp<-length(Padjmat[1,])
vv0<-c(4,4,4,4,3,3,3,2,2,1)
vv1<-rep(vv0,4)
vv0a<-c(4,4,4,3,3,2)
vv1a<-rep(vv0a,4)
mv1<-apply(llikmat,2,mean)
sv1a<-apply(llikmat,2,sd)
sv1b<-apply(sdmat,2,mean)
sv1<-sqrt((sv1a^2/nsamp+sv1b^2))
mvdiff<-apply(ldmat,2,mean)
sddif1a<-apply(ldmat,2,sd)
sddif1b<-apply((sd2mat^2),2,mean)
sv2<-sqrt(sddif1a^2/(nsamp)+sddif1b)
qmul<-qt(1-alpha/2,nsamp-1)
par(mfrow=c(2,1))
plot(rep(c(1:40),3),c(mv1,mv1+2*sv1,mv1-2*sv1),type="n",xlab="sequence",ylab="likelihood",main=title)
lines(c(1:40),mv1)
text(c(1:40),mv1,vv1)
lines(c(1:40),mv1+qmul*sv1,col=2)
lines(c(1:40),mv1-qmul*sv1,col=2)
lines(c(10.5,10.5),c(-40,40),col=3)
lines(c(20.5,20.5),c(-40,40),col=2)
lines(c(30.5,30.5),c(-40,40),col=7)
plot(rep(c(1:24),3),c(mvdiff,qmul*sv2,-qmul*sv2),type="n",xlab="learning sequence",ylab="likelihood diff",main=paste(title,"\nmax(P*)=",floor(1e4*max(Pstar))/1e4))

lines(c(1:24),mvdiff)
text(c(1:24),mvdiff,vv1a)
lines(c(1:24),qmul*sv2,col=2)
lines(c(1:24),-qmul*sv2,col=2)
for(i in Interesting){
	text(i,mvdiff[i],"***",col=2)
}
lines(c(6.5,6.5),c(-40,40),col=3)
lines(c(12.5,12.5),c(-40,40),col=2)
lines(c(18.5,18.5),c(-40,40),col=7)
}
}
Fsp.nat0full0plus <-
structure(c(1.2231403143596449, -0.98925875319732848, 0.31215246301265581, 
-0.66390594914483247, -0.23733227272044866, -0.89165291198157959, 
-0.02043040335211806, 0.48205892735118161, 0.49290402081959828, 
-0.99648881550960622, 0.08079046901976969, 0.0084898458969927277, 
-0.909728067762274, -0.96756856626049537, -0.42531389283966858, 
0.97008813342992561, 1.7979302681857212, -0.95310844163594, -0.4180838305273909, 
0.14947606098640789, -0.12526630688014459, -1.003718877821884, 
0.25431196451443427, 4.9972328413685991, 0.030180032833825816, 
-0.97479862857277311, -0.67836607376938785, 1.2556755947648943, 
-0.33132308278005868, -0.97479862857277311, -0.16864668075381076, 
0.15309109214254651, 0.088020531332047389, -1.003718877821884, 
-0.74343663457988707, 0.3013073695442392, -0.8518875692640524, 
-0.78681700845355307, 0.44590861578979296, 1.5304179626314465, 
0.059100282082936606, -1.003718877821884, -0.13249636919242211, 
0.73511110828090054, 0.15309109214254665, -1.003718877821884, 
-0.36024333202916942, 0.051870219770658907, 0.07717543786363093, 
-0.98564372204118966, -0.46507923555719594, 0.77126141984228913, 
-0.50845960943086199, -0.79043203960969199, 0.3013073695442392, 
-0.46507923555719594, -0.19395189884678263, -0.98202869088505074, 
-0.83381241348335811, 2.8245991165291531, 1.5629532430366961, 
-1.003718877821884, -0.13249636919242211, 1.1183044108316182, 
-0.13249636919242228, -0.97479862857277311, -0.46146420440105707, 
1.8413106420593874, -0.10719115109945027, -1.000103846665745, 
-0.94226334816752355, 0.60496998665990231, 0.29769233838810027, 
-1.003718877821884, -0.35301326971689179, 0.20731655948462915, 
1.0387737253965634, -0.89165291198157959, 1.1110743485193404, 
2.7667586180309316, 1.6352538661594731, -0.97118359741663429, 
0.30853743185651689, 0.062715313239075532, -0.73259154111147051, 
-0.93141825469910688, -0.049350652601228846, 0.12417084289343587, 
-0.33493811393619749, -0.86273266273246885, 0.55435955047395824, 
1.3496664048245042, 0.42060339769682115, -1.003718877821884, 
-0.86273266273246885, 1.0206985696158692, 0.20008649717235161, 
-1.000103846665745, -0.50845960943086199, 0.27961718260740609, 
0.12778587404957481, -0.98925875319732848, -0.49038445365016786, 
0.48205892735118161, 0.14586102983026897, -0.9928737843534674, 
-0.26986755312569821, 0.49651905197573704, 0.16755121676710205, 
-1.003718877821884, -0.76512682151672007, -0.34578320740461399, 
1.6316388350033344, -1.003718877821884, -0.70005626070622085, 
1.8485407043716653, -0.16503164959767166, -0.92418819238682914, 
-0.21202705462747679, 2.7197632130011269, -0.2047969923151991, 
-0.42169886168352977, -0.53376482752383403, 0.47844389619504252, 
0.14586102983026897, -1.003718877821884, -0.085500964162617168, 
1.7798551124050266, 1.9497615767435525, -0.76151179036058125, 
-1.003718877821884, 1.7907002058734436, 0.10609568711274156, 
-0.97479862857277311, 0.40975830422840465, 1.8810759847769147, 
-0.96756856626049537, -1.000103846665745, 0.041025126302242441, 
2.3618751285433812, 1.1906050339543952, -0.30601786468708675, 
-0.73620657226760922, 0.67004054747040143, -0.48315439133789018, 
-0.92780322354296818, -0.83019738232721929, 2.3582600973872423, 
-0.078270901850339469, -0.80127713307810855, 0.0012597835847151908, 
0.79295160677912213, 0.019334939365409351, -0.97479862857277311, 
-0.17949177422222723, 0.12417084289343587, -0.44700407977650169, 
-0.99648881550960622, -0.36024333202916942, 0.39529817960384928, 
0.49651905197573704, -0.98925875319732848, -0.85911763157633014, 
0.98454825805448098, -0.41085376821511321, -1.003718877821884, 
0.17478127907937976, 1.8485407043716653, 0.69173073440723432, 
-1.000103846665745, -0.909728067762274, 1.1399945977684511, 2.0256772310224687, 
-1.003718877821884, -0.89165291198157959, 0.51820923891256998, 
-0.45784917324491825, -0.99648881550960622, -0.89165291198157959, 
1.7979302681857212, -0.88803788082544088, -1.000103846665745, 
-0.42531389283966858, 0.63750526706515187, -0.49038445365016786, 
-0.93141825469910688, -0.42531389283966869, 1.6786342400331393, 
0.21093159064076808, -1.003718877821884, -0.19395189884678246, 
2.3329548792942703, 0.48928898966345918, -0.31324792699936443, 
-0.43615898630808514, -0.23371724156430987, 0.60496998665990231, 
-1.003718877821884, -0.42588382693285648, 1.1099273133884142, 
0.071591721344467049, -1.7447724898076189, -0.47794522152001767, 
1.2024809037655904, -0.032531067829856583, -1.3543120304039062, 
-0.22631514768206962, 1.0838966160948325, -0.073023263619871395, 
-1.7042802940176041, 0.033991825253738825, 1.2690037968491856, 
0.08605321984090003, -1.487357816571097, -0.45769912362501025, 
1.4483263782049645, 0.24802200300095928, -1.3976965258932077, 
-0.17714605279419501, 1.3297420905342079, -0.075915563319157997, 
-1.6175113030390018, -0.24656124557707704, 1.2082655031641634, 
-0.090377061815591589, -1.2617584400267297, -0.24366894587779045, 
1.3875880845199422, 0.0050688282608710158, -1.5047116147668178, 
-0.40563772903784906, 1.3268497908349213, -0.19160755129062862, 
-1.6088344039411415, 0.0021765285615844201, 1.3644496869256484, 
-0.20606904978706223, -1.5538807096546932, -0.20606904978706223, 
1.3268497908349213, -0.099053960913451991, -1.3687735289003398, 
-0.16846915369633461, 1.3470958887299276, 0.14679151352592223, 
-1.5567730093539798, -0.51265281791145867, 1.072327417297686, 
-0.13954615670346682, -1.5596653090532664, -0.35357633445068726, 
0.96531232842407577, -0.02674646843128339, -1.3658812292010531, 
-0.29283804076566505, 1.4570032773028243, 0.10919161743519402, 
-1.0535128616780829, -0.070130963920584793, 1.4020495830163766, 
0.094730118938761043, -1.4555425198789433, -0.0093926702355625804, 
1.4020495830163766, 0.27694499999382649, -1.2039124460409947, 
-0.25813044437422406, 1.3470958887299276, 0.19017600901522366, 
-1.2964660364181713, -0.087484762116304987, 1.7028487517421997, 
0.051345623449459636, -1.4931424159696709, -0.37093013264640806, 
1.237188500157032, -0.090377061815592213, -1.3832350273967742, 
-0.23499204677993002, 1.3268497908349202, 0.30008339758812047, 
-1.212589345138855, 0.071591721344465814, 1.6305412592600312, 
0.15836071232306986, -1.4613271192775166, -0.055669465424150584, 
1.6363258586586042, -0.049884866025577394, -1.1142511553631052, 
0.077376320743040239, 1.5611260664771491, 0.094730118938761043, 
-1.3340659325088988, 0.071591721344465814, 1.2747883962477589, 
0.18439140961665046, -1.4208349234875017, -0.18003835249348163, 
1.4685724760999719, 0.22488360540666527, -1.6030498045425676, 
0.088945519540187853, 1.3644496869256484, 0.065807121945892624, 
-1.5683422081511267, -0.012284969934849795, 1.4425417788063912, 
0.14100691412734906, -1.3687735289003404, -0.41720692783499608, 
1.3152805920377737, 0.42155998495816493, -1.3398505319074727, 
0.29140649849026068, 1.4396494791071046, 0.23645280420381165, 
-1.3658812292010531, 0.0079611279601582291, 1.2747883962477589, 
0.16703761142092965, -1.4208349234875017, -0.018069569333422988, 
1.4974954730928391, -0.099053960913451991, -1.1634202502509805, 
-0.24366894587778981, 1.2979267938420529, 0.29429879818954729, 
-1.1113588556638185, -0.023854168731996177, 1.5900490634700164, 
0.033991825253738825, -1.258866140327443, 0.20752980721094447, 
1.3355266899327811, 0.18728370931593705, -1.3832350273967742, 
-0.43456072603071627, 1.3326343902334945, 0.010853427659444826, 
-1.5654499084518401, -0.33333023655567984, 1.2487576989541782, 
0.32900639458098768, -1.1749894490481274, -0.00071577113770279267, 
1.3962649836178034, -0.11351545940988621, -1.4179426237882151, 
0.088945519540187853, 1.4946031733935525, 0.29429879818954729, 
-1.3572043301031929, -0.11930005880846002, 1.4656801764006853, 
0.20174520781237126, -1.1749894490481274, -0.15979225459847421, 
1.5784798646728688, 0.27983729969311305, -1.3080352352153182, 
0.21909900600809085, 1.459895577002112, 0.0021765285615844201, 
-1.2501892412295832, -0.1366538570041802, 1.5322030694842808, 
0.16703761142092965, -1.1402818526566858, -0.28416114166780465, 
1.6478950574557507, 0.10340701803662083, -1.4266195228860754, 
0.088945519540187853, 1.51484927128856, 0.11208391713448186, 
-1.3919119264946345, -0.075915563319157997, 1.6045105619664493, 
0.32032949548312789, -1.371665828599627, 0.051345623449459636, 
1.4714647757992585, 0.16992991112021624, -1.258866140327443, 
-0.38539163114284164, 1.4165110815128108, 0.20752980721094447, 
-1.2993583361174579, -0.29862264016423884, 1.3818034851213692, 
0.29719109788883386, -1.2733276388238772, -0.00071577113770217619, 
1.6247566598614567, -0.81842279587925715, 0.15176444688979437, 
0.6978167357403402, 0.57143482234599996, -0.86787658807704249, 
-1.5231393346976974, -1.4256054667520652, -0.76656499989407956, 
-0.062535319300608544, 1.1171436820840612, 1.2356267258912552, 
1.1343151377082921, 0.1912587948255256, -0.19715953139457959, 
-0.17724064287047162, -0.68723287491013241, -1.0303185582822678, 
-0.5295989122796918, -0.72913122663325602, -0.73703009622040216, 
-1.0852672162798072, -0.62747620933780845, 0.29222695389600395, 
0.4896986935746605, 0.44470947983917519, 0.37258936621740502, 
0.32966072715682754, 0.26406576667226511, -0.11301939883584769, 
-1.0701563353304837, -1.3109001431822023, -1.5021901588361355, 
-1.9108708026928334, -1.4626958109004042, -1.579461709145175, 
-0.82494794901646495, -0.15766518345884828, 1.4379064731446962, 
1.5526117967145594, 1.5677226776638826, 0.27024749069698822, 
-1.2253862941735318, -1.8215792334468324, -2.0489293059116505, 
-1.685237875790438, -0.86650287162710393, -1.1402158742773463, 
-0.83937197174081901, -1.0680957606555759, -1.6405920911674376, 
-2.0705653399981818, -1.7669740045617777, -1.146741027414554, 
0.39697283320381299, 0.71876591160190195, 0.3172972791073812, 
0.1881679328131641, 0.54155648955983815, 0.81389577576014172, 
0.72323049006420215, 0.09784607622970902, -0.56256810707821536, 
-0.21227041234390287, 0.32038814111974279, 0.074149467468270225, 
0.35267047769329707, 0.61608060696900058, 0.62569662211857002, 
0.72700821030153284, 0.54533420979716885, 0.11501753185394002, 
-0.2538253349545419, 0.29360067034594245, -0.19063437825737181, 
-0.048111296576254507, -0.33281403082600447, 0.03362483219508506, 
1.341402892536518, 2.018301673243704, 2.6007574480176192, 2.7109981931251825, 
1.6384690748357145, -0.0041523701782231253, -0.4990337212685606, 
0.086856344630201157, -0.23184587175552621, -0.2922893955528193, 
-0.74424210758257925, -0.80468563137987226, -0.36956094586185889, 
-0.38776268882354364, -0.41729759249722098, -0.060474744625700821, 
0.35370076503075093, 0.87502615778240422, 1.102032801134738, 
1.8026281906033628, 1.8531122701386018, 1.5117437323288896, 0.9148639348306199, 
0.21220797068708747, -1.1700942070635081, -1.6213600608682988, 
-1.4132420187026189, -0.91355266003749691, -0.54402293500404586, 
-0.38604554326112056, 0.16721875695160224, 0.55563708317170746, 
0.12463354700350936, 0.22010684027423372, 0.1867942163632256, 
0.3918213965165438, 0.92344966264273565, 0.87605644511985803, 
1.5498643638146823, 2.0244833972684271, 1.0020949294017134, 0.45192149120135222, 
0.64767608531758569, 1.3609783519481415, 1.1782740641063234, 
0.85476384014581153, 0.23350057566113391, 0.25994461732244961, 
0.70365503065257873, 1.1058105213720688, 1.0196098141384291, 
0.49107241002459895, 0.059725444743916195, -0.61820362330072376, 
-0.74183810379518689, -0.38673240148608978, -0.30224883981487333, 
-0.46640795558252168, -0.64224366117464704, 0.33481216384409679, 
2.6412820832908048, 2.6000705897926504, 2.4438103436121486, 2.468880668823525, 
0.33275158916918912, -1.002157371058529, -1.2123359878991165, 
-1.0007836546085904, -0.67727343064807832, -1.1615084792513926, 
-1.3438693379807258, -0.58454757027723103, -0.24936075649224182, 
-0.59691101832667726, -0.74012095823276391, -0.26618878300398824, 
0.089260348417593491, -0.34346033331302772, -0.19578581494464112, 
0.24964174394791105, 0.76444198356235638, 0.88670274760688117, 
0.98011546620269785, 0.34511503721863535, 0.061099161193854667, 
0.39491225852890527, 0.2073999631123028, 0.15039073043985587, 
0.37087222065498188, 0.50583986186143759, 0.4687495177130987, 
0.73044250142637901, 0.35473105236820474, -0.22566414773080304, 
-0.63606193714992387, -0.51963946801763772, 0.54052620222238423, 
0.91108621459328909, 0.696099590177917, 0.013362514558492482, 
-0.43618619368387512, -1.3696265214170722, -1.378899107454157, 
-1.1127415452785765, -0.15766518345884828, -0.77961530616849517, 
-0.86203829316480396, -0.32354144478891972, 0.84205696298388055, 
0.80462318972305702, 1.0958510771100149, 0.91349021838068156, 
-1.1786799348756234, -1.9507085797410493, -1.8136803638596859, 
-1.2415274624603092, -0.39051012172342064, -1.0512677341438295, 
-1.050924305031345, 0.013362514558492482, 0.74246252036334082, 
-0.55064012182548761, -0.99467878123507869, -0.73706856661577402, 
-0.44217266303841196, -1.2997435090737293, -0.63876993208998667, 
-0.63538032400289057, -1.3370291980317865, -0.0083028278901091847, 
-0.37099089320939355, -0.13032871902556931, -0.27608186677070223, 
-0.60487385121902548, 0.015424428719563649, -0.90654897097057974, 
-0.24557539398683725, -1.1370423208931155, -1.1234838885447314, 
-0.48623756817066144, -0.60148424313192939, -0.64215954017708277, 
0.11711267133244711, -0.2523546101610295, -1.1878864421995574, 
-0.39471814981906633, 0.052710117677620898, 0.19846326542275392, 
0.81198232918715074, 0.42217739917109753, -0.7709646474867351, 
-1.3166915495092097, -1.5709121560414185, -1.642093925870437, 
-1.3302499818575944, -0.43539344686421971, -1.936989829447799, 
-1.8081847221381466, -0.83875680922865747, 0.27981385951306065, 
-0.48284796008356534, -0.66927640487385165, -0.91671779523186814, 
-1.0895878076737702, -1.2387305635059991, -0.58453620269644879, 
-0.048978124935262553, 0.25269699481629171, -0.57436737843516039, 
-0.96756191653830992, -0.89976975479638754, -1.5675225479543224, 
-1.5675225479543224, -0.86587367392542647, 0.40522935873561694, 
1.0695925438064555, 1.3407611907741446, 0.44251504769367417, 
0.41539818299690529, -0.64554914826417886, 0.36455406169046356, 
1.1882288268548196, -0.56758816226096831, -0.14727675946104987, 
-0.80147112027060019, 0.76452781596780517, 0.51030720943559649, 
0.85265762623230423, 0.25947621099048401, 1.2729690290322224, 
0.16795679263888885, 0.60860584396138384, 0.65267074909363343, 
1.4119429606031633, 0.9102809637129381, 0.46624230430334701, 
0.40183975064852084, -0.20490009694168385, 0.056099725764717001, 
0.31709954847111793, 0.65606035718072941, 1.9508906464514455, 
2.6084746153480922, 0.97129390928066828, 1.4831247304321815, 
1.5475272840870078, -0.018471652151397518, 0.65606035718072941, 
1.0187484225000136, 0.24930738672919558, 0.68995643805169071, 
-0.015082044064301409, 1.0458652871967826, 1.6492155266998914, 
0.83570958579682353, 1.0051899901516295, 1.8220855391417932, 
2.0627477133256176, 1.879708876622427, 1.7780206340095435, 1.1577223540709545, 
1.1983976511161076, 0.52386564178398098, -0.17439362415781881, 
-0.82180876879317688, -0.23879617781264501, 0.42556700725819357, 
-0.20151048885458775, -0.40149736599325853, 0.02220364489375588, 
0.2696450352517723, -0.68622444530933224, -1.8522496272703961, 
-0.7743542555738312, -0.41844540642873912, 0.52047603369688489, 
0.14422953602921604, 0.99502116589034106, 1.5509168921741037, 
0.90350174753874601, 0.25269699481629171, 1.3814364878192982, 
2.493227940386824, 1.4187221767773552, 0.96451469310647597, 1.0356964629354943, 
-0.099822246241704299, -1.5810809803027068, -0.62521149974160217, 
1.0221380305871097, 1.0729821518935514, 0.44929426386786636, 
0.5001383851743082, 1.5678649326095844, 0.57809937117751886, 
-0.0083028278901091813, 0.15439836029050438, 1.1882288268548196, 
2.669487560915822, 1.6593843509611796, 1.0289172467613021, 1.3407611907741446, 
0.039151685329236449, -1.0658605510640973, -0.48962717625775753, 
-0.48962717625775753, -0.9980683893221749, -1.9776651264929523, 
-1.5200680347349766, 0.19168404924856164, -0.7845230798351196, 
-1.0489125106286168, 0.46963191239044311, -0.062536557283647015, 
-0.87265289009961855, -1.3641460627285555, -0.44895187921260421, 
-0.47606874390937309, -0.028640476412685863, 0.79164468066457405, 
2.0051243758449835, 1.2051768672903, 0.84587841005811193, 0.45268387195496251, 
0.41200857490980913, 0.6899564380516906, 0.44251504769367417, 
-0.004913219803013057, 0.35777484551627131, 1.4322806091257398, 
0.69673565422588291, -1.120094280457635, 0.63233310057105663, 
0.30693072420982959, 0.24252817055500339, -0.41844540642873912, 
0.056099725764717029, -0.10999107050299263, 0.45607348004205867, 
-0.98789956506088661, -0.80486072835769629, -1.2285617392447108, 
-1.6048082369123797, -1.5539641156059381, -1.3031331171608256, 
-1.4048213597737087, -0.26252343442231785, 0.12389188750663933, 
0.57809937117751886, 0.61538506013557603, -0.86926328201252245, 
-1.1912760502866535, -1.0116268216705593, -0.50996482478033422, 
-1.4624446972543428, -1.8590288434445883, -1.3709252789027475, 
-0.88282171436090695, -1.4726135215156311, 0.0035600980720318018, 
0.9785936683986759, 1.6637837279266743, -1.1766826779000534, 
-1.0201671820687845, -1.6473885394370538, -1.9047695770262514, 
-0.8729266785830726, -0.95524223564988819, -0.905389151792521, 
0.23543490671094838, -0.57148942735248121, -1.183638922159221, 
0.48238157791139452, 0.068485044490928418, -0.39178645065732087, 
-0.019627382791859903, 0.79541256957393169, 1.0585904773791022, 
0.90207498154783328, 0.30847547143220705, -0.56685193117970289, 
-1.2566794868804794, -0.39526457278690463, 0.044138189583842163, 
-1.1048014872219891, 0.18094432668080301, 0.84526565343129889, 
0.7386032414573972, -1.0433546629326764, -1.0630640216669842, 
0.19253806711274882, 0.65049081417460897, -0.8184360985529272, 
-0.83814545728723511, 0.39542852467180073, 0.56005963880543153, 
2.7373640919248574, 2.2666582303878569, 0.72469075293906227, 
0.16471309007607879, -1.0445140369758708, -0.82539234281209484, 
0.8104844321354614, 0.16123496794649506, -0.41149580939162878, 
-1.6253604326163569, -0.88683916710140753, -0.141361657327291, 
0.088194403225236376, -1.8572352412552733, 0.13572873899621424, 
0.3652847995487416, 1.6765368424018143, -0.021946130878249006, 
-0.04281486365575151, -0.021946130878249006, -0.15991164201840435, 
0.51020655494806433, -1.1650889374681075, -1.3517481584224353, 
-0.11701480242020479, -0.67351434315360437, 0.10790376195954424, 
-0.59815503034595663, -0.046292985785335264, -0.25034281738758185, 
-0.3094708935905055, -0.46018951920580126, -1.6462291653938594, 
-1.3807325095022998, -0.61786438908026453, 0.29920047908665043, 
-1.15813269320894, -1.2184201434550583, 0.56933463115098804, 
0.65744705843377649, 1.3727808430848341, 2.2654988563446627, 
-1.1998701587639449, -1.3621825248111865, 1.9200053914726771, 
-0.074117962822005223, -0.31410838976328381, -0.2074459777893822, 
-0.9077078998789101, -1.1975514106775558, -1.3529075324656299, 
-0.90886727392210476, -1.2300138838870041, -0.045133611742140665, 
-0.54598319840220033, -0.53554883201344916, -0.95408286160669331, 
0.19137869306955427, -0.15063664967284771, 0.055731930015788064, 
1.1687310114825873, 1.3901714537327527, 0.62730333331071741, 
-0.88799854114460219, -0.3280208782816188, -0.53902695414303281, 
0.051094433843009761, -1.3911668758910511, -1.2833450898739549, 
-0.40106144300287755, -0.43236454216913123, -0.81032048025056524, 
-0.92162038839724514, -0.0022367721439410519, 0.1693505862488571, 
0.9113499738933899, 1.1281529199707769, 0.80700631000587764, 
-0.53786758009983826, -1.856075867212079, -1.9546226608836184, 
-1.4329043414460561, -0.34541148892953755, -0.39294582470051548, 
-0.19237411522785267, 0.14732247942816004, -0.16570851223437724, 
1.4353870414173415, 2.5182423977610817, 2.4521580772989906, 0.85917814194963382, 
-0.4022208170460721, 0.02790695297911806, -0.24222719908521972, 
0.26905675396359124, -0.60974877077790246, -1.502466784037731, 
-2.2966380036260206, -0.29092090889939221, 0.34093794464165533, 
1.82725546801711, 4.0741223637282111, 2.3025988257268888, 0.37571916593749288, 
-0.42656767195315837, -1.4294262193164724, -0.33149900041120256, 
0.12181625047787924, 0.46730971534986482, 0.31195359356179081, 
-0.091508573469923971, 0.68063453929766815, 0.71309701250711632, 
0.095150647484403786, -0.57496754948206497, 0.50556905877528613, 
0.12297562452107388, -0.34193336679995379, -0.11469605433381563, 
-0.57496754948206497, -0.28396466464022468, 1.6092931478965287, 
-0.22715533652369013, -0.15295539775923683, 0.90787185176380614, 
0.17746620455121925, 0.61223147074918771, -0.4404801604714933, 
-0.47873950389691455, 0.39426915062860618, -0.72684554914055521, 
-0.23990845099883051, -0.56685193117970289, -0.71757055679499859, 
-0.61322689290748611, -0.31642713784967302, 0.70961889037753256, 
2.4289705964350983, 0.84410627938810423, 0.755993852105316, 0.84990314960407709, 
1.0481561109903508, 0.025588204892728859, 0.35716918124637959, 
1.150181026791474, 0.70961889037753278, 0.39774727275818983, 
0.75715322614851066, 0.24702864714289419, 0.47890345578181076, 
0.77338446275323469, 1.1258341718843878, 0.24702864714289419, 
-0.65380498441929658, 0.48122220386819986, 0.71309701250711632, 
1.200034110648841, 1.7414617888207109, 0.03138507510870181, -0.45323327494663374, 
1.8689929335721149, 0.61021918939733133, -0.592903794437455, 
0.42296621371778192, -0.52732002276225043, 0.66992303671544851, 
-0.058282979816132674, -0.012148188706678402, -1.4355421849954275, 
-0.13019897772204658, -0.23739452177048431, -0.65260764175557229, 
-1.9470956040620229, -0.64310930240950814, -0.14648184517244214, 
-0.34051934895632308, -0.26905565292403133, 1.8074622488750303, 
0.36868998888312993, 0.89019404916941136, -1.2247695118875288, 
0.91823676533398169, -0.40022319627444036, -1.8105004382281487, 
-3.0131711201893125, -0.75166175207881203, -0.23422840865512959, 
0.24566387925791869, -2.4382954388156239, -0.47440070354846481, 
0.43110764744297975, 0.32029368840556521, -0.57978704010241411, 
-0.35861142390120704, -0.10215626155747638, 0.88612333230681251, 
0.45100892988235214, 0.54644462521661519, -0.21794554120473397, 
-0.31926116089608447, 1.5641238408663403, -0.1419588264362211, 
0.59529322756780212, 0.29632168910359391, -0.10667928029369733, 
-0.33554402834648001, 0.0050392824909613739, -0.62999254807446736, 
1.1520768339966074, 0.067004639177189101, 0.16017882514334172, 
1.0118632531737564, 1.4392885237466408, 0.58308107698000533, 
0.34562259332840278, -0.64763232114572911, -3.4595930694543253, 
0.89516936977925443, -0.87197405046229071, 0.62604975497410476, 
-1.5373101065604, -0.092205620337790145, -0.054664564827155801, 
1.5686468596025616, -1.6770713855096289, -0.91313352096190181, 
0.22169187995594739, -0.27674478477560704, -0.67974575417289818, 
-1.2686427936288724, 0.052530979221281894, -0.61823269936029268, 
-0.13698350582637805, -0.37670349884609117, 0.036700413644508427, 
-0.99183404697214728, -0.41741066747208017, 1.1403169852824329, 
-0.27629248290198488, 0.54734922896385951, 0.32662591463627455, 
-0.69829013099140425, 0.78887842947806097, 0.47498092918432344, 
0.44784281676699739, -0.89956446475323892, 0.31396146217485582, 
-0.65441684925006061, -1.6273181794111979, 0.44015368491542173, 
-0.24236984238032741, 0.060220111072857574, -2.3600472146790001, 
1.177405738919445, -0.04380931986022539, 1.1443877021450317, 
-1.0669161579934159, -0.37625119697246906, -0.81860242937488281, 
-0.057378376068888459, -0.51239406093272122, -0.63406326493706611, 
0.16967716448940587, 0.56001368142527819, 3.7387912492413977, 
1.0724717042391176, 0.88838484167492304, 0.8730065779717715, 
1.7916316832982571, 2.7202074298444283, 0.013633018089781301, 
0.53061405963984176, 0.59981624630402297, 0.3126045565539895, 
0.31486606592209998, 0.055697092336636583, 1.5772405952013813, 
0.90738152036705111, 0.28320493476855302, -0.039286301124004434, 
2.4913426817916458, -0.48661285413626149, -0.55264892768508811, 
0.12580388274806217, -0.47575760916933107, 0.99196197073438386, 
1.3510896583903316, 0.93678114215248776, 1.0724717042391176, 
-0.56938409700910575, 0.18867384318153407, -0.4499764023728714, 
-1.3396541877875423, -1.3713153189410896, 0.6961565453855304, 
-0.27991089789096163, -0.039286301124004469, 0.29677399097721602, 
-0.41741066747208017, -0.43595504429058624, -0.96469593455482128, 
0.15339429703901022, -0.032049471146050799, -0.90589669098394832, 
0.97115608454776736, -0.35273149954411986, 0.10635490218231178, 
0.39175738443785696, 1.6242799900580798, 0.19952908814846443, 
0.1280653921161726, -0.30162138782482245, -1.6883789323501817, 
-0.057378376068888445, 0.30627233032328005, 0.46186417484928244, 
0.70791639409970497, 1.0191000831517099, 0.39537579942683376, 
-1.2460276999477675, -0.78422748697960332, 0.89290786041114401, 
-0.047427734849202242, 0.28998946287288452, -1.2424092849587907, 
0.0077530937326940061, -0.43188432742798732, 0.55187224770008037, 
0.23390403054374409, -0.88418620105008749, -0.083611884738970244, 
0.57086892639220865, -1.0076646125489208, -0.50108651409216876, 
0.50257134347527155, 0.13575452396774837, 1.4524052780816816, 
1.2764598492426849, -0.35454070703860824, 0.11087792091853281, 
1.2574631705505566, -0.39434327191735308, -0.2025672775015826, 
0.74319594024222879, 0.44241519428353221, 1.1262956272001476, 
-1.1573765327178358, -0.001745245613370115, -4.5519020942516972, 
-0.64401390615675236, 0.22938101180752307, -0.6811026597937645, 
-1.1474258914981497, 1.7486630053041574, -0.99092944322490306, 
1.4139596188238033, 0.9802021220202094, 0.62062213249063958, 
-0.13019897772204655, -0.71368859061036405, -0.24642536405095766, 
1.6255472932899222, -0.36913002744893103, -0.23594861009222648, 
-0.91484226661800128, -0.57711293900408589, -1.2549409817938761, 
-1.1662843616275473, -0.90855621424276223, -0.95949728349128105, 
-1.1307099615187892, -0.74302350169481124, -0.86455384761609178, 
0.44679224788724631, -0.37247235501222437, 0.11607032292113835, 
-0.72626069536084137, -0.071480747946637974, 0.10114958321727513, 
-0.015936776958873414, -0.097655457836976073, 0.25401997504659424, 
-0.47956806214591996, 0.52885442889514345, -0.9672260364116565, 
-0.29901523392248952, -1.2292380120817892, 0.13492848004685426, 
0.19569365300749456, -0.32745704466947095, -0.44743935000581136, 
-0.018032127750619856, -0.91274691582625478, -0.19788879571100013, 
-0.47081210543081342, -0.44757904005859445, 0.40941943376560863, 
-0.15996638138169131, 0.34078505449818808, 2.0396023497441664, 
0.063686553127482795, 0.57004009445749948, 0.13087746851614482, 
1.3942343058863309, 1.3167063265917212, 2.1216988807650425, 0.57211178190697076, 
0.58542890027229089, -0.42243483055763992, -0.51390891512190495, 
0.12445172608812309, 0.90392222061771643, -0.83312358573989853, 
-0.20420919809921814, -0.55881888542485469, -0.14165782446364655, 
-0.3637650083887457, 0.2066169571349584, 0.07947152909197111, 
1.5618623692260285, 0.59590565423102204, 0.31722399892877517, 
0.28937911507401443, 1.1281247553345612, 0.034351642043035702, 
-0.14100517421703726, -0.62333522240363715, -0.69063973190115568, 
-0.38890921788970029, -0.44122428765739707, -0.27394430444922446, 
1.6121507882279376, 0.40103803059862392, 0.90502142103305872, 
0.85912827702527461, 1.0736456347491601, 2.1338931353727464, 
2.6115300658519458, 1.4417289238325786, 1.8761649879879612, 0.25855417675988096, 
0.48155446102244576, 0.29180347943330465, 1.4801436883479264, 
0.45970785276751808, 1.957368418671372, 0.57853752433499217, 
0.04692374679351298, -0.1039415102122147, 0.013844684294306341, 
0.82271573659981856, -0.49996280985225, -0.70530718744337939, 
0.035966092653069763, -0.89081557753931129, -0.95884463324467173, 
-0.55863263202114388, 0.78809397685102356, -0.18271288448214662, 
0.13911918163034648, -0.53139307172844319, -0.18524799093456373, 
0.49500287277070987, 2.6137284666826304, 0.28369838626083554, 
1.1135946998442554, 0.79701276688773104, 1.6833927151473091, 
0.53723583206212788, 0.14973333564099553, -0.92294428967941977, 
1.3669947455936302, 3.9589436749837019, 2.3903159822643123, 1.2281259475164719, 
0.36122636555544563, -0.038985635668081872, 1.3253281798495624, 
0.39219099392236212, 1.0065944094132808, -0.39100456868144667, 
0.22873836549372181, 1.1311513731448615, 2.4838167175943648, 
-0.40357667343192399, 0.76913276968636957, 0.096606842233362342, 
0.59381030343927599, -0.79121656990497424, 0.22873836549372181, 
-0.78856859912419586, -0.711593239818618, -1.2207634822129489, 
0.099170116535250666, -0.87153835025524573, -0.8834120047418077, 
-1.2941007599240666, -0.61819555452750374, -1.3042050070753761, 
0.013398134125573684, -0.099750808628722168, -0.11888376585827383, 
-0.62307630970507222, -0.40776737501541616, -0.54186982568717434, 
1.129395705814801, -0.091622689623376941, -0.041080986459827967, 
0.81172678578088264, 0.83549699476265915, -1.1200003908054197, 
0.79077327786342022, -0.67806762715067836, 0.62060331356324427, 
-0.83512580982978946, -0.032699583292843233, -0.52720237014495064, 
1.0819926879031654, 0.11588406951742748, 1.7672067468171577, 
1.6854880659390559, 2.5578066455520916, 0.72183393423168218, 
-0.41614877818240126, 0.013398134125573684, -0.97213808826771742, 
0.40504247877840555, 0.086735411836691256, 0.011302783333827242, 
0.10233031772935967, -1.2099607847977241, -0.89388875870053885, 
-1.1013284870834146, -1.0069003014029168, -0.51598060257137668, 
-0.97141673799514894, -1.3297217233837524, -1.0606237217027707, 
-0.98981437846333842, -0.86664919840783827, -1.4826823311812263, 
-1.4019254506665482, -1.719736350754115, -1.7026941643145792, 
-1.7257430230237873, -1.8917566357534508, -1.9724822195896365, 
-1.0992331362916683, -1.3108635662580364, -1.4651294745487291, 
-1.5483832193402018, -0.91484226661800128, -1.0594214712484902, 
-0.69404038318612105, -1.3118076254059658, -0.43291158451637107, 
-0.57749078914686014, -0.69059902122855166, -0.69358846321051626, 
-0.5447740929348972, -0.97190049762976516, -1.0589297412169161, 
-1.1523891379162274, -1.1895134161271119, -0.97654351733267053, 
-1.0051197855415548, -1.0476013294957871, -0.91828152565648213, 
-0.82374981603226227, -0.49046374748861193, -0.24171070677882825, 
-0.20353922110920547, 0.57085458815283285, 0.52767725594782744, 
0.51524747086492217, 0.38638420820836761, 1.1572253817402394, 
0.75078403123338933, 0.84990763379326495, 0.99695258456963665, 
0.97326494673559261, 1.1732393850004794, 0.74732257209637765, 
0.60968185381892126, 0.98597094926478424, 1.0163723504731834, 
0.82662145414427834, 0.59805423996672458, 0.43044521843151029, 
-0.010264961754102193, 0.010661132119649423, -0.25977890443513652, 
0.27439769175118234, 0.22558627671772941, 0.34091580160088658, 
-0.021768767827925892, -0.40413006161882514, -0.30795044753709444, 
-0.70114073769126872, -0.38649616559989275, -0.77662502184171534, 
-0.61019876581887467, -0.44420606629400317, -0.40571732319229964, 
-0.94775396729817263, -1.1245401257684529, -0.75400665905653586, 
-1.0620842602367111, -1.1613505478598491, -0.93541858564627689, 
-1.0902402125017021, -0.94580812171474382, -0.92700619101632764, 
-1.0221124031232476, -0.68855361355668132, -0.40619191967606272, 
-0.036299330172473783, 0.45939210751769066, 0.21693262887520065, 
1.3892065783998653, 1.6130684664966706, 1.2525382670483802, 1.7753759357888044, 
2.53250950778525, 2.0510287673345653, 1.9031352457548667, 1.6203969698816969, 
1.9722483587028725, 1.5606361016293728, 1.6655532777145294, 1.4984592048278815, 
2.0294372349963301, 1.4541630171442459, 1.1570334626771981, 0.93581475601182407, 
0.87284560406557798, 0.44057785335985317, 0.28930859264907827, 
0.31322412850479442, -0.27544058839931979, -0.20439714552216173, 
0.16186396078638077, -0.55733284445360753, -1.0530669270452115, 
-1.0178782344213073, -0.9701905160680746, -0.92896768452730094, 
-1.1142898734506557, -1.0883241724945483, -1.054838925873175, 
-1.1674936868777324, -0.97547040194993939, -1.2137758430359362, 
-0.81395283774750848, -0.79821893257927412, -0.54002812809726597, 
-0.60604397745411998, 0.013178556946566968, 0.60068257592843433, 
0.8602687972458547, 1.8332522318443116, 1.2621359492010027, 2.0482018514059868, 
1.8562095184227871, 1.6550465254855198, 1.3780948302908895, 1.5788594602375587, 
1.3635783682766562, 1.7317650470858297, 1.4005943146814646, 2.0998090603577948, 
1.3457810001355386, 1.7834763034495935, 0.56087579585280167, 
0.16375202940656877, 0.34319592818592248, 0.2826374168577469, 
0.022776239099189736, -0.28073079159604908, -0.5620968645922515, 
-0.29556611595800875, -0.80073635740619153, -0.70523155303500962, 
-0.52484104061684578, -0.77726836374192754, -0.88428339384951549, 
-1.0122000428672602, -0.96977524414478189, -1.1320820262457978, 
-1.1761473347202611, -1.0752930025918794, -1.2801613445258702, 
-1.15040666586503, -1.0153468239009069, -0.9717639065848982, 
-0.64016798617128678, -0.58185326155245798, -0.21276032126927719, 
0.18263271560845004, 0.21054621097412721, 0.15766825274151833, 
0.36970884805875531, 1.2117874526626531, 0.69131244902617994, 
0.68956530812441452, 1.4684074459565539, 1.6526514754765771, 
0.84555630624919753, 0.66574751843413937, 0.95831424040239921, 
1.0387144958120764, 1.8163434137866843, 1.444352053166009, 1.2075392982672297, 
0.94289501333752967, 1.1428910033267996, 0.37415280216293884, 
0.069977954603892528, 0.44224215088431523, -0.028413118600609757, 
-0.30747324338034354, -0.30732109133036511, -0.24375611445069859, 
-0.41402276165815444, -0.72676602457526618, -0.62845009581402644, 
-0.43948589474353295, -0.94509622698909912, -0.8813289161012583, 
-0.80356846033647378, -0.9816762668408856, -1.0286252081314102, 
-0.96657171787938079, -1.1506584083477216, -1.0847333456928201, 
-1.2668726429805026, -1.1879149125856461, -1.1915665617851308, 
-1.2777883621070545, -1.2678218359480287, -1.2896901872609812, 
-1.283452567967619, -1.2500966890109622, -1.1997172405280194, 
-1.0000254966904176, -1.0730902558683268, -0.95036579555609957, 
-0.80034429944134378, -0.83066574145954397, -0.2801014353893197, 
-0.40628735483855855, 0.47299806649513915, -0.081914745289445895, 
-0.0080622150305493159, 0.078002246239692152, -0.84786516402105161, 
-0.88257784895770619, -0.77378218792522502, -0.99011626318336177, 
-1.0449016517289744, -1.1355758226064523, -1.0636003483517966, 
-0.93689506366022146, -0.9979555256796746, -0.98593504582430957, 
-0.91985111178016365, -0.81358365990160586, -0.55092618428684681, 
-0.37764670794661387, -0.2372563630449053, 0.41195947353067419, 
0.52306109853856408, 0.3849202296495462, 0.29370221235548055, 
1.1873473259908065, 0.47583102414622447, 0.43335708449980642, 
0.57031599901554131, 0.68318167249994699, 0.80845284565580433, 
0.57660902356354682, 0.54840387606246732, 0.82635158204236481, 
0.92106202603313159, 0.60289790765667772, 0.54865368853913099, 
0.67210348047926316, -0.17015145627004694, -0.20649684417918199, 
-0.32611822974385407, 0.13284846845309739, 0.068743749674373439, 
0.15291077102384881, -0.11274268717637813, -0.41938869186430627, 
-0.43225943925799681, -0.75037623291061062, -0.52407677375151218, 
-0.82379107700363352, -0.7689275246558982, -0.72619329902836061, 
-0.60587251611054471, -0.93396829240584844, -1.0785495303792285, 
-0.90164971266523408, -0.93598186027330621, -1.0286552300502685, 
-1.0036581549023968, -1.0808447794854694, -1.0033241664825097, 
-0.91253755413002813, -0.92888509123516561, -0.76315390834741581, 
-0.48068077780535884, -0.05354228506770814, 0.54930265790785537, 
0.18201547618546124, 0.81495378866264745, 1.5947862595644224, 
1.1826257746969211, 1.138566456801863, 1.9285107471394742, 1.8000475242497855, 
1.72641051398067, 1.3203407210713791, 1.6021485901266688, 1.7738756345014148, 
1.8924256452114596, 1.5139461663009002, 2.2058382837328607, 1.7257895084378359, 
1.1279893810236183, 0.99654496055796293, 0.9355061524012217, 
0.76663093553784889, 0.093849515671503958, 0.18795472902738355, 
-0.21459480266184008, -0.096519386494079332, 0.12373507877647651, 
-0.64538633307152637, -0.97616598151949752, -0.99961504599566464, 
-0.96636627251646134, -0.98390008269918849, -1.0554992866085591, 
-0.94966642913384802, -0.99523435405887339, -1.1292343096118898, 
-0.97227604438287674, -1.0528774451868121, -0.83591567125144639, 
-0.79448287552950903, -0.61854157742706151, -0.39629082895789552, 
-0.066439323974643222, 0.61484740042628316, 0.88618603200847157, 
2.1435679638554119, 1.6190307155876644, 2.0015564583865455, 2.1015237309774277, 
1.7542348224472772, 1.4660298834128807, 1.5465529010266743, 1.286635432100401, 
2.2764820799114323, 1.8682663736911291, 1.9401289668421993, 1.5351274713874614, 
2.2587353893683888, 0.67570699528454836, 0.067844579921413115, 
0.081754169654654249, 0.29017192587970708, 0.021513675282033507, 
-0.43637669023207859, -0.58421020563413417, -0.30328536937679063, 
-0.81473785733303772, -0.92791493439644512, -0.80886299714814325, 
-0.7963616670659579, -0.89779274767227246, -1.0059297416467179, 
-0.99379560487262242, -1.0387504777335923, -1.1007921505840379, 
-1.0756153975011471, -1.1164535309145047, -0.98819821928439211, 
-1.0150870757097616, -1.0149687639001619, -0.6567628863566094, 
-0.55264144261091497, -0.28238203885665403, -0.02230901899382488, 
0.15241541305381848, 0.53154589569281518, 0.21663351167443581, 
1.0467564925522239, 0.6509340539845877, 1.0199623780282077, 1.5621463975319607, 
1.3485225941181107, 1.1790733171483401, 0.91891979353397302, 
1.1659674719052344, 0.76716202410538703, 2.1796079736831708, 
2.3355738334191405, 1.3529001310733129, 1.0971336610799252, 1.1043080116325577, 
0.47584048909099241, 0.10937202509103051, 0.12475256033903703, 
0.29630739961211605, -0.17598955901541025, -0.35315616335940359, 
-0.24866317312063976, -0.34885116512025172, -0.48851854512874759, 
-0.62560459850639805, -0.62172397115151656, -0.50159365085177832, 
-0.80139281104041704, -0.84689500718233102, -0.94367406743517179, 
-0.97109835699289082, -0.75770893595448918, -1.0360992530947306, 
-1.0903807113392334, -1.1609201517606451, -1.0158328301491748, 
-1.0912562187302739, -1.1894313583363949, -1.1513915901507581, 
-1.1266272431585695, -1.1051933499011597, -1.1443308965168562, 
-1.0711304101483743, -0.86846666796914185, -0.93380686251452771, 
-0.94246728697725113, -0.85375786795427899, -0.74863836388515193, 
-0.08730952718809204, -0.50833393283082895, 0.33281570870168448, 
0.11897348348549618, -0.08730952718809204, 0.080054358672138171, 
2.1029483883430937, -0.34724961705173812, -0.78734971589652103, 
0.37548961712899082, 2.0304768151800303, -1.0410002219672418, 
-0.10941109058023123, -0.14696454212836393, 0.71940017341189, 
-1.0666946888159641, 0.31421819618203733, -0.12061124279634086, 
-0.63054758487098461, -0.56729966647412955, 1.0369574303627662, 
-0.056704491916185332, 0.30828870383233214, -0.053410329499682649, 
0.198922511604437, 0.89728494390304447, 0.44664352532545265, 
-0.51195773787688137, -0.70433682300064893, 2.9666777739501446, 
0.27337058221740168, -0.30244900818729914, -0.84532697442697147, 
-1.1945081905762751, 0.55403322010344624, -0.77680839616371178, 
-0.44739215451342523, 2.7637573690935686, 0.44137286545904814, 
-1.1082011352639003, -0.2226109053024331, 1.0376162628460668, 
-0.063951649232491595, -0.64372423453699601, -0.27675454133857674, 
-1.0713065161990682, 0.35572464262997361, -1.2768622509888468, 
0.27798240960050574, 0.35308931269677113, 1.1562061098401697, 
-1.0363883945841377, -0.37228525141716007, 2.7716633588931745, 
0.18179286703862224, -1.1536605766116399, 0.0078610914472708703, 
1.975793719066083, 0.60739865125079229, -1.091730323181386, -0.81172651777864224, 
-0.6496537268867012, 1.9323107751682449, -0.65228905681990346, 
-0.91252788772362992, -1.2136143325919917, -0.16343535421087826, 
-0.21877728280812639, 0.35901880504647626, 4.1980356852389162, 
-0.05538682694958421, -0.87497443617549731, -0.1851768261597973, 
-1.0970009830477905, 3.9134200524530689, -0.4974634232442689, 
-0.52249905760969062, -0.88880991832480938, -0.49943992069417043, 
-0.82687966489455533, -0.13839971984545654, 1.2207716932036261, 
0.89926144135294628, 1.0652872271446909, -0.43816849974721717, 
-1.1194012874800099, -0.58377047855664388, -0.62922991990438348, 
-0.52776971747609536, -0.082398958764907729, -0.40456804309888805, 
-0.8901275832914104, 0.073085507294027519, 0.28720606436671403, 
1.532399457804797, -0.75704342166469474, -0.45332164686313059, 
-1.2880624032049568, 1.3466086975140354, 0.26941758731759835, 
0.72532966576159486, -1.011352760218716, -0.38677956604977259, 
-0.69050134085133685, -0.077787131381803695, 1.02971027304646, 
-0.52776971747609536, -0.78142022354681584, 0.18047520207202111, 
1.5818118940523405, 0.89464961396984222, 0.49539712908969469, 
-0.22273027770792997, 1.7445435174275816, -0.32946114000262267, 
-0.40127388068238512, 2.9745837637497519, 0.14555708045709065, 
1.4731045343077456, -0.40061504819908444, -0.63318291480418687, 
-0.34856728201833925, -1.1918728606430731, -0.22009494777472752, 
0.56720986976945742, -0.11929357782973973, -0.66151271158611147, 
0.057932360178114303, -0.39402672336607886, 0.47299682465747545, 
-0.026398197684358908, 0.15148657280679581, 1.7900029587753215, 
-0.31957865275311392, -0.64108890460379386, -0.58113514862344162, 
-0.73200778729927285, 1.0119217959973443, -0.041551344800272352, 
-0.80711469039553818, 0.77342443704253694, -0.092940278497716897, 
0.12315677602487095, 0.98886265908182458, -0.49548692579436709, 
-1.1648607288277495, 0.37878377954549353, -0.82687966489455544, 
-0.14894103957826571, 1.1660885970896786, 0.094168146759645868, 
-1.2109790026587894, -0.74584326944858492, 0.085603324476738255, 
-0.80843235536213931, -0.25764839932286021, 0.34254799296396193, 
-0.098869770847422059, 0.2022166740209399, -0.91977504503993635, 
1.0336632679462632, 1.8776276790542976, 0.18904002435492825, 
-0.65360672178650481, -0.65939802651751467, -0.91616623442652367, 
-0.53172271237589863, -0.49482809331106664, -4.489835233607346e-05, 
0.78725991919184912, 0.72928266066139846, -0.62395926003797886, 
-0.38414423611657011, 0.40052525149441232, -0.13708205487885541, 
-0.38150890618336791, 0.65746991998163629, -0.29586068335429333, 
2.1385253424413246, -0.80513819294563649, -0.143670379711861, 
0.22395814596985872, -0.16672951662738092, -0.63977123963719273, 
-0.42762718001440819, 3.3837187358794076, -0.74650210193188549, 
-0.99751727806940393, -1.0930479881479871, 0.18047520207202111, 
0.38866626679500199, -0.74320793951538255, -0.79652884531287504, 
-1.4257583922147765, -0.61210027533856848, -1.4211465648316726, 
-0.7441584540899957, -0.55082885439161522, -0.1285172325959478, 
-1.0996363129809927, -0.651630224336603, 0.24240545550227485, 
-0.19769464334250803, -0.73925494461557917, -0.54368593978143387, 
0.26969763122161161, 0.55125348272266639, -1.2788595520341877, 
-1.4039954860346557, 0.67638941672313435, -0.043142203779561766, 
-1.4822054447849473, -0.87216776653266492, 0.36354958172196428, 
0.66074742497307337, -1.9671071890367617, -0.71574784903207822, 
0.59817945797284267, 0.64510543322301572, -1.4196374777847134, 
-0.49675996453125754, 1.1769331527250064, 0.58253746622278169, 
-1.1850076015338349, -0.34034004703067416, 0.94230327647412804, 
1.1143651857247725, -1.5760573952852968, -1.3257855272843606, 
0.81716734247366007, 0.36354958172196095, -1.0442296757833092, 
-0.87216776653266492, 0.56689547447272404, 0.44175954047225596, 
-1.5916993870353577, -1.1850076015338349, 0.19148767247131995, 
-0.078750354169408288, -2.0237224480618661, -0.95037772528295661, 
0.47304352397237132, 0.48868551572243235, -1.7950452797861174, 
-1.7324773127858835, 0.37919157347202198, 0.12891970547108259, 
-0.70010585728202057, -0.51240195628131513, 0.58253746622278169, 
0.25405563947155396, -1.810687271536175, -1.9671071890367617, 
-0.2777720800304368, -0.16827813778002979, -1.7950452797861174, 
-1.7324773127858835, -0.16827813778002979, 0.26969763122161161, 
-1.3257855272843606, -1.2788595520341843, -0.19122785575868623, 
-0.10812911959541111, -1.0243444451840651, -0.48111797278119983, 
0.95794526822418569, 0.80152535072360243, -1.520446966378473, 
-0.95037772528295661, 0.91101929297401274, 1.3020690867254745, 
-0.35598203878073181, -0.35598203878073181, 0.95794526822418569, 
1.0205132352244231, -0.60625390678166791, -0.60625390678166791, 
1.3802790454757661, 0.72331539197330741, -1.2006495932838925, 
-0.98166170878307524, 1.5210569712262985, 0.77024136722348369, 
-0.99730370053313289, -1.1850076015338349, 0.37919157347202198, 
0.50432750747249, -0.62189589853172556, 0.0037837714706145747, 
0.83280933422372105, 1.0830812022246572, -0.94571563563791128, 
-1.1239456527412555, 1.2238591279751827, 0.8484513259737787, 
-0.60625390678166791, 0.17584568072125895, 1.5992669299765869, 
1.4584890042260612, -1.1380816262836586, 0.04198753591135005, 
1.2395011197252437, 1.2238591279751827, -0.3872660222808505, 
-0.29341407178049783, 1.1925751444750674, 1.4428470124760036, 
-0.85652577478260727, -0.30905606353055548, 1.1769331527250064, 
0.94230327647412804, -0.64403718425742063, -0.60625390678166791, 
0.98922925172430443, 0.92666128472407039, -0.80959979953242756, 
-0.74703183253219352, 1.2238591279751827, 1.4741309959761189, 
-1.1537236180337163, -0.67187788144498972, 1.4897729877261765, 
2.0063901341314136, -1.1067976427835433, -0.48111797278119983, 
1.2395011197252404, 0.49296801845016119, -1.2006495932838925, 
-0.60625390678166791, 1.6461929052267665, 0.92666128472407039, 
-1.1067976427835433, -0.26213008828037915, 1.0205132352244197, 
1.0361552269744807, -0.68446386553196292, 0.2071296642213776, 
1.5992669299765869, 1.2707851032253592, -0.80959979953242756, 
-0.21520411303020279, 1.4741309959761189, 1.1612911609749488, 
-1.2162915850339504, -0.90345175003278022, 0.87973530947389411, 
0.58253746622278169, -1.435279469534771, -1.0285876840332482, 
0.50432750747249, 0.25405563947155396, -1.2788595520341843, -0.68446386553196292, 
1.0987231939747149, 0.87973530947389744, -0.87216776653266492, 
-0.74703183253219352, 1.2551431114753016, 1.1456491692248911, 
-1.2006495932838925, 0.11327771372102492, 1.3802790454757661, 
1.1882502074070851, 0.68811665162828195, -0.23084610478026379, 
1.4584890042260612, 0.94230327647412804, 0.089833409560439059, 
0.25405563947155396, 1.4741309959761189, 1.3333530702255931, 
-0.71574784903207822, 0.14456169722114359, 1.2551431114752982, 
0.91101929297401274, -0.79395780778236991, -0.84088378303254618, 
1.3177110784755355, 1.3177110784755355, -1.0129456922831905, 
-0.68446386553195959, 1.1143651857247725, 0.80152535072360243, 
-1.3570695107844792, 0.12891970547108259, 1.0517972187245384, 
0.62946344147295796, -0.88076174083874936, -0.88780975828272257, 
1.3959210372258237, 1.1143651857247758, -0.5749699232815525, 
-0.68446386553195959, 0.86409331772383635, 0.61382144972290031, 
-0.058835191077765227, -0.32469805528061313, 0.55125348272266639, 
0.0037837714706145747, -1.2162915850339504, -1.5663449827226426, 
-0.36508464476218755), dim = c(198L, 11L), dimnames = list(c("vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec"), c("FresPRCP", 
"FresTAVG", "MEI", "PDO", "IOD", "AO1", "V24", "V25", "V26", 
"pred2", "Frespred2")))
Hsp.nat0full0plus <-
structure(c(2.1029483883430937, -0.34724961705173812, -0.78734971589652103, 
0.37548961712899082, 2.0304768151800303, -1.0410002219672418, 
-0.10941109058023123, -0.14696454212836393, 0.71940017341189, 
-1.0666946888159641, 0.31421819618203733, -0.12061124279634086, 
-0.63054758487098461, -0.56729966647412955, 1.0369574303627662, 
-0.056704491916185332, 0.30828870383233214, -0.053410329499682649, 
0.198922511604437, 0.89728494390304447, 0.44664352532545265, 
-0.51195773787688137, -0.70433682300064893, 2.9666777739501446, 
0.27337058221740168, -0.30244900818729914, -0.84532697442697147, 
-1.1945081905762751, 0.55403322010344624, -0.77680839616371178, 
-0.44739215451342523, 2.7637573690935686, 0.44137286545904814, 
-1.1082011352639003, -0.2226109053024331, 1.0376162628460668, 
-0.063951649232491595, -0.64372423453699601, -0.27675454133857674, 
-1.0713065161990682, 0.35572464262997361, -1.2768622509888468, 
0.27798240960050574, 0.35308931269677113, 1.1562061098401697, 
-1.0363883945841377, -0.37228525141716007, 2.7716633588931745, 
0.18179286703862224, -1.1536605766116399, 0.0078610914472708703, 
1.975793719066083, 0.60739865125079229, -1.091730323181386, -0.81172651777864224, 
-0.6496537268867012, 1.9323107751682449, -0.65228905681990346, 
-0.91252788772362992, -1.2136143325919917, -0.16343535421087826, 
-0.21877728280812639, 0.35901880504647626, 4.1980356852389162, 
-0.05538682694958421, -0.87497443617549731, -0.1851768261597973, 
-1.0970009830477905, 3.9134200524530689, -0.4974634232442689, 
-0.52249905760969062, -0.88880991832480938, -0.49943992069417043, 
-0.82687966489455533, -0.13839971984545654, 1.2207716932036261, 
0.89926144135294628, 1.0652872271446909, -0.43816849974721717, 
-1.1194012874800099, -0.58377047855664388, -0.62922991990438348, 
-0.52776971747609536, -0.082398958764907729, -0.40456804309888805, 
-0.8901275832914104, 0.073085507294027519, 0.28720606436671403, 
1.532399457804797, -0.75704342166469474, -0.45332164686313059, 
-1.2880624032049568, 1.3466086975140354, 0.26941758731759835, 
0.72532966576159486, -1.011352760218716, -0.38677956604977259, 
-0.69050134085133685, -0.077787131381803695, 1.02971027304646, 
-0.52776971747609536, -0.78142022354681584, 0.18047520207202111, 
1.5818118940523405, 0.89464961396984222, 0.49539712908969469, 
-0.22273027770792997, 1.7445435174275816, -0.32946114000262267, 
-0.40127388068238512, 2.9745837637497519, 0.14555708045709065, 
1.4731045343077456, -0.40061504819908444, -0.63318291480418687, 
-0.34856728201833925, -1.1918728606430731, -0.22009494777472752, 
0.56720986976945742, -0.11929357782973973, -0.66151271158611147, 
0.057932360178114303, -0.39402672336607886, 0.47299682465747545, 
-0.026398197684358908, 0.15148657280679581, 1.7900029587753215, 
-0.31957865275311392, -0.64108890460379386, -0.58113514862344162, 
-0.73200778729927285, 1.0119217959973443, -0.041551344800272352, 
-0.80711469039553818, 0.77342443704253694, -0.092940278497716897, 
0.12315677602487095, 0.98886265908182458, -0.49548692579436709, 
-1.1648607288277495, 0.37878377954549353, -0.82687966489455544, 
-0.14894103957826571, 1.1660885970896786, 0.094168146759645868, 
-1.2109790026587894, -0.74584326944858492, 0.085603324476738255, 
-0.80843235536213931, -0.25764839932286021, 0.34254799296396193, 
-0.098869770847422059, 0.2022166740209399, -0.91977504503993635, 
1.0336632679462632, 1.8776276790542976, 0.18904002435492825, 
-0.65360672178650481, -0.65939802651751467, -0.91616623442652367, 
-0.53172271237589863, -0.49482809331106664, -4.489835233607346e-05, 
0.78725991919184912, 0.72928266066139846, -0.62395926003797886, 
-0.38414423611657011, 0.40052525149441232, -0.13708205487885541, 
-0.38150890618336791, 0.65746991998163629, -0.29586068335429333, 
2.1385253424413246, -0.80513819294563649, -0.143670379711861, 
0.22395814596985872, -0.16672951662738092, -0.63977123963719273, 
-0.42762718001440819, 3.3837187358794076, -0.74650210193188549, 
-0.99751727806940393, -1.0930479881479871, 0.18047520207202111, 
0.38866626679500199, -0.74320793951538255, -0.79652884531287504, 
-1.4257583922147765, -0.61210027533856848, -1.4211465648316726, 
-0.7441584540899957, -0.55082885439161522, -0.1285172325959478, 
-1.0996363129809927, -0.651630224336603, 0.24240545550227485, 
-0.19769464334250803, -0.73925494461557917, -0.54368593978143387, 
0.26969763122161161, 0.55125348272266639, -1.2788595520341877, 
-1.4039954860346557, 0.67638941672313435, -0.043142203779561766, 
-1.4822054447849473, -0.87216776653266492, 0.36354958172196428, 
0.66074742497307337, -1.9671071890367617, -0.71574784903207822, 
0.59817945797284267, 0.64510543322301572, -1.4196374777847134, 
-0.49675996453125754, 1.1769331527250064, 0.58253746622278169, 
-1.1850076015338349, -0.34034004703067416, 0.94230327647412804, 
1.1143651857247725, -1.5760573952852968, -1.3257855272843606, 
0.81716734247366007, 0.36354958172196095, -1.0442296757833092, 
-0.87216776653266492, 0.56689547447272404, 0.44175954047225596, 
-1.5916993870353577, -1.1850076015338349, 0.19148767247131995, 
-0.078750354169408288, -2.0237224480618661, -0.95037772528295661, 
0.47304352397237132, 0.48868551572243235, -1.7950452797861174, 
-1.7324773127858835, 0.37919157347202198, 0.12891970547108259, 
-0.70010585728202057, -0.51240195628131513, 0.58253746622278169, 
0.25405563947155396, -1.810687271536175, -1.9671071890367617, 
-0.2777720800304368, -0.16827813778002979, -1.7950452797861174, 
-1.7324773127858835, -0.16827813778002979, 0.26969763122161161, 
-1.3257855272843606, -1.2788595520341843, -0.19122785575868623, 
-0.10812911959541111, -1.0243444451840651, -0.48111797278119983, 
0.95794526822418569, 0.80152535072360243, -1.520446966378473, 
-0.95037772528295661, 0.91101929297401274, 1.3020690867254745, 
-0.35598203878073181, -0.35598203878073181, 0.95794526822418569, 
1.0205132352244231, -0.60625390678166791, -0.60625390678166791, 
1.3802790454757661, 0.72331539197330741, -1.2006495932838925, 
-0.98166170878307524, 1.5210569712262985, 0.77024136722348369, 
-0.99730370053313289, -1.1850076015338349, 0.37919157347202198, 
0.50432750747249, -0.62189589853172556, 0.0037837714706145747, 
0.83280933422372105, 1.0830812022246572, -0.94571563563791128, 
-1.1239456527412555, 1.2238591279751827, 0.8484513259737787, 
-0.60625390678166791, 0.17584568072125895, 1.5992669299765869, 
1.4584890042260612, -1.1380816262836586, 0.04198753591135005, 
1.2395011197252437, 1.2238591279751827, -0.3872660222808505, 
-0.29341407178049783, 1.1925751444750674, 1.4428470124760036, 
-0.85652577478260727, -0.30905606353055548, 1.1769331527250064, 
0.94230327647412804, -0.64403718425742063, -0.60625390678166791, 
0.98922925172430443, 0.92666128472407039, -0.80959979953242756, 
-0.74703183253219352, 1.2238591279751827, 1.4741309959761189, 
-1.1537236180337163, -0.67187788144498972, 1.4897729877261765, 
2.0063901341314136, -1.1067976427835433, -0.48111797278119983, 
1.2395011197252404, 0.49296801845016119, -1.2006495932838925, 
-0.60625390678166791, 1.6461929052267665, 0.92666128472407039, 
-1.1067976427835433, -0.26213008828037915, 1.0205132352244197, 
1.0361552269744807, -0.68446386553196292, 0.2071296642213776, 
1.5992669299765869, 1.2707851032253592, -0.80959979953242756, 
-0.21520411303020279, 1.4741309959761189, 1.1612911609749488, 
-1.2162915850339504, -0.90345175003278022, 0.87973530947389411, 
0.58253746622278169, -1.435279469534771, -1.0285876840332482, 
0.50432750747249, 0.25405563947155396, -1.2788595520341843, -0.68446386553196292, 
1.0987231939747149, 0.87973530947389744, -0.87216776653266492, 
-0.74703183253219352, 1.2551431114753016, 1.1456491692248911, 
-1.2006495932838925, 0.11327771372102492, 1.3802790454757661, 
1.1882502074070851, 0.68811665162828195, -0.23084610478026379, 
1.4584890042260612, 0.94230327647412804, 0.089833409560439059, 
0.25405563947155396, 1.4741309959761189, 1.3333530702255931, 
-0.71574784903207822, 0.14456169722114359, 1.2551431114752982, 
0.91101929297401274, -0.79395780778236991, -0.84088378303254618, 
1.3177110784755355, 1.3177110784755355, -1.0129456922831905, 
-0.68446386553195959, 1.1143651857247725, 0.80152535072360243, 
-1.3570695107844792, 0.12891970547108259, 1.0517972187245384, 
0.62946344147295796, -0.88076174083874936, -0.88780975828272257, 
1.3959210372258237, 1.1143651857247758, -0.5749699232815525, 
-0.68446386553195959, 0.86409331772383635, 0.61382144972290031, 
-0.058835191077765227, -0.32469805528061313, 0.55125348272266639, 
0.0037837714706145747, -1.2162915850339504, -1.5663449827226426, 
-0.36508464476218755, -0.81842279587925715, 0.15176444688979437, 
0.6978167357403402, 0.57143482234599996, -0.86787658807704249, 
-1.5231393346976974, -1.4256054667520652, -0.76656499989407956, 
-0.062535319300608544, 1.1171436820840612, 1.2356267258912552, 
1.1343151377082921, 0.1912587948255256, -0.19715953139457959, 
-0.17724064287047162, -0.68723287491013241, -1.0303185582822678, 
-0.5295989122796918, -0.72913122663325602, -0.73703009622040216, 
-1.0852672162798072, -0.62747620933780845, 0.29222695389600395, 
0.4896986935746605, 0.44470947983917519, 0.37258936621740502, 
0.32966072715682754, 0.26406576667226511, -0.11301939883584769, 
-1.0701563353304837, -1.3109001431822023, -1.5021901588361355, 
-1.9108708026928334, -1.4626958109004042, -1.579461709145175, 
-0.82494794901646495, -0.15766518345884828, 1.4379064731446962, 
1.5526117967145594, 1.5677226776638826, 0.27024749069698822, 
-1.2253862941735318, -1.8215792334468324, -2.0489293059116505, 
-1.685237875790438, -0.86650287162710393, -1.1402158742773463, 
-0.83937197174081901, -1.0680957606555759, -1.6405920911674376, 
-2.0705653399981818, -1.7669740045617777, -1.146741027414554, 
0.39697283320381299, 0.71876591160190195, 0.3172972791073812, 
0.1881679328131641, 0.54155648955983815, 0.81389577576014172, 
0.72323049006420215, 0.09784607622970902, -0.56256810707821536, 
-0.21227041234390287, 0.32038814111974279, 0.074149467468270225, 
0.35267047769329707, 0.61608060696900058, 0.62569662211857002, 
0.72700821030153284, 0.54533420979716885, 0.11501753185394002, 
-0.2538253349545419, 0.29360067034594245, -0.19063437825737181, 
-0.048111296576254507, -0.33281403082600447, 0.03362483219508506, 
1.341402892536518, 2.018301673243704, 2.6007574480176192, 2.7109981931251825, 
1.6384690748357145, -0.0041523701782231253, -0.4990337212685606, 
0.086856344630201157, -0.23184587175552621, -0.2922893955528193, 
-0.74424210758257925, -0.80468563137987226, -0.36956094586185889, 
-0.38776268882354364, -0.41729759249722098, -0.060474744625700821, 
0.35370076503075093, 0.87502615778240422, 1.102032801134738, 
1.8026281906033628, 1.8531122701386018, 1.5117437323288896, 0.9148639348306199, 
0.21220797068708747, -1.1700942070635081, -1.6213600608682988, 
-1.4132420187026189, -0.91355266003749691, -0.54402293500404586, 
-0.38604554326112056, 0.16721875695160224, 0.55563708317170746, 
0.12463354700350936, 0.22010684027423372, 0.1867942163632256, 
0.3918213965165438, 0.92344966264273565, 0.87605644511985803, 
1.5498643638146823, 2.0244833972684271, 1.0020949294017134, 0.45192149120135222, 
0.64767608531758569, 1.3609783519481415, 1.1782740641063234, 
0.85476384014581153, 0.23350057566113391, 0.25994461732244961, 
0.70365503065257873, 1.1058105213720688, 1.0196098141384291, 
0.49107241002459895, 0.059725444743916195, -0.61820362330072376, 
-0.74183810379518689, -0.38673240148608978, -0.30224883981487333, 
-0.46640795558252168, -0.64224366117464704, 0.33481216384409679, 
2.6412820832908048, 2.6000705897926504, 2.4438103436121486, 2.468880668823525, 
0.33275158916918912, -1.002157371058529, -1.2123359878991165, 
-1.0007836546085904, -0.67727343064807832, -1.1615084792513926, 
-1.3438693379807258, -0.58454757027723103, -0.24936075649224182, 
-0.59691101832667726, -0.74012095823276391, -0.26618878300398824, 
0.089260348417593491, -0.34346033331302772, -0.19578581494464112, 
0.24964174394791105, 0.76444198356235638, 0.88670274760688117, 
0.98011546620269785, 0.34511503721863535, 0.061099161193854667, 
0.39491225852890527, 0.2073999631123028, 0.15039073043985587, 
0.37087222065498188, 0.50583986186143759, 0.4687495177130987, 
0.73044250142637901, 0.35473105236820474, -0.22566414773080304, 
-0.63606193714992387, -0.51963946801763772, 0.54052620222238423, 
0.91108621459328909, 0.696099590177917, 0.013362514558492482, 
-0.43618619368387512, -1.3696265214170722, -1.378899107454157, 
-1.1127415452785765, -0.15766518345884828, -0.77961530616849517, 
-0.86203829316480396, -0.32354144478891972, 0.84205696298388055, 
0.80462318972305702, 1.0958510771100149, 0.91349021838068156, 
-1.1786799348756234, -1.9507085797410493, -1.8136803638596859, 
-1.2415274624603092, -0.39051012172342064, -1.0512677341438295, 
-1.050924305031345, 0.013362514558492482, 0.74246252036334082, 
-0.55064012182548761, -0.99467878123507869, -0.73706856661577402, 
-0.44217266303841196, -1.2997435090737293, -0.63876993208998667, 
-0.63538032400289057, -1.3370291980317865, -0.0083028278901091847, 
-0.37099089320939355, -0.13032871902556931, -0.27608186677070223, 
-0.60487385121902548, 0.015424428719563649, -0.90654897097057974, 
-0.24557539398683725, -1.1370423208931155, -1.1234838885447314, 
-0.48623756817066144, -0.60148424313192939, -0.64215954017708277, 
0.11711267133244711, -0.2523546101610295, -1.1878864421995574, 
-0.39471814981906633, 0.052710117677620898, 0.19846326542275392, 
0.81198232918715074, 0.42217739917109753, -0.7709646474867351, 
-1.3166915495092097, -1.5709121560414185, -1.642093925870437, 
-1.3302499818575944, -0.43539344686421971, -1.936989829447799, 
-1.8081847221381466, -0.83875680922865747, 0.27981385951306065, 
-0.48284796008356534, -0.66927640487385165, -0.91671779523186814, 
-1.0895878076737702, -1.2387305635059991, -0.58453620269644879, 
-0.048978124935262553, 0.25269699481629171, -0.57436737843516039, 
-0.96756191653830992, -0.89976975479638754, -1.5675225479543224, 
-1.5675225479543224, -0.86587367392542647, 0.40522935873561694, 
1.0695925438064555, 1.3407611907741446, 0.44251504769367417, 
0.41539818299690529, -0.64554914826417886, 0.36455406169046356, 
1.1882288268548196, -0.56758816226096831, -0.14727675946104987, 
-0.80147112027060019, 0.76452781596780517, 0.51030720943559649, 
0.85265762623230423, 0.25947621099048401, 1.2729690290322224, 
0.16795679263888885, 0.60860584396138384, 0.65267074909363343, 
1.4119429606031633, 0.9102809637129381, 0.46624230430334701, 
0.40183975064852084, -0.20490009694168385, 0.056099725764717001, 
0.31709954847111793, 0.65606035718072941, 1.9508906464514455, 
2.6084746153480922, 0.97129390928066828, 1.4831247304321815, 
1.5475272840870078, -0.018471652151397518, 0.65606035718072941, 
1.0187484225000136, 0.24930738672919558, 0.68995643805169071, 
-0.015082044064301409, 1.0458652871967826, 1.6492155266998914, 
0.83570958579682353, 1.0051899901516295, 1.8220855391417932, 
2.0627477133256176, 1.879708876622427, 1.7780206340095435, 1.1577223540709545, 
1.1983976511161076, 0.52386564178398098, -0.17439362415781881, 
-0.82180876879317688, -0.23879617781264501, 0.42556700725819357, 
-0.20151048885458775, -0.40149736599325853, 0.02220364489375588, 
0.2696450352517723, -0.68622444530933224, -1.8522496272703961, 
-0.7743542555738312, -0.41844540642873912, 0.52047603369688489, 
0.14422953602921604, 0.99502116589034106, 1.5509168921741037, 
0.90350174753874601, 0.25269699481629171, 1.3814364878192982, 
2.493227940386824, 1.4187221767773552, 0.96451469310647597, 1.0356964629354943, 
-0.099822246241704299, -1.5810809803027068, -0.62521149974160217, 
1.0221380305871097, 1.0729821518935514, 0.44929426386786636, 
0.5001383851743082, 1.5678649326095844, 0.57809937117751886, 
-0.0083028278901091813, 0.15439836029050438, 1.1882288268548196, 
2.669487560915822, 1.6593843509611796, 1.0289172467613021, 1.3407611907741446, 
0.039151685329236449, -1.0658605510640973, -0.48962717625775753, 
-0.48962717625775753, -0.9980683893221749, -1.9776651264929523, 
-1.5200680347349766, 0.19168404924856164, -0.7845230798351196, 
-1.0489125106286168, 0.46963191239044311, -0.062536557283647015, 
-0.87265289009961855, -1.3641460627285555, -0.44895187921260421, 
-0.47606874390937309, -0.028640476412685863, 0.79164468066457405, 
2.0051243758449835, 1.2051768672903, 0.84587841005811193, 0.45268387195496251, 
0.41200857490980913, 0.6899564380516906, 0.44251504769367417, 
-0.004913219803013057, 0.35777484551627131, 1.4322806091257398, 
0.69673565422588291, -1.120094280457635, 0.63233310057105663, 
0.30693072420982959, 0.24252817055500339, -0.41844540642873912, 
0.056099725764717029, -0.10999107050299263, 0.45607348004205867, 
-0.98789956506088661, -0.80486072835769629, -1.2285617392447108, 
-1.6048082369123797, -1.5539641156059381, -1.3031331171608256, 
-1.4048213597737087, -0.26252343442231785, 0.12389188750663933, 
0.57809937117751886, 0.61538506013557603, -0.86926328201252245, 
-1.1912760502866535, -1.0116268216705593, -0.50996482478033422, 
-1.4624446972543428, -1.8590288434445883, -1.3709252789027475, 
-0.88282171436090695, -1.4726135215156311, 0.0035600980720318018, 
0.9785936683986759, 1.6637837279266743, -1.1766826779000534, 
-1.0201671820687845, -1.6473885394370538, -1.9047695770262514, 
-0.8729266785830726, -0.95524223564988819, -0.905389151792521, 
0.23543490671094838, -0.57148942735248121, -1.183638922159221, 
0.48238157791139452, 0.068485044490928418, -0.39178645065732087, 
-0.019627382791859903, 0.79541256957393169, 1.0585904773791022, 
0.90207498154783328, 0.30847547143220705, -0.56685193117970289, 
-1.2566794868804794, -0.39526457278690463, 0.044138189583842163, 
-1.1048014872219891, 0.18094432668080301, 0.84526565343129889, 
0.7386032414573972, -1.0433546629326764, -1.0630640216669842, 
0.19253806711274882, 0.65049081417460897, -0.8184360985529272, 
-0.83814545728723511, 0.39542852467180073, 0.56005963880543153, 
2.7373640919248574, 2.2666582303878569, 0.72469075293906227, 
0.16471309007607879, -1.0445140369758708, -0.82539234281209484, 
0.8104844321354614, 0.16123496794649506, -0.41149580939162878, 
-1.6253604326163569, -0.88683916710140753, -0.141361657327291, 
0.088194403225236376, -1.8572352412552733, 0.13572873899621424, 
0.3652847995487416, 1.6765368424018143, -0.021946130878249006, 
-0.04281486365575151, -0.021946130878249006, -0.15991164201840435, 
0.51020655494806433, -1.1650889374681075, -1.3517481584224353, 
-0.11701480242020479, -0.67351434315360437, 0.10790376195954424, 
-0.59815503034595663, -0.046292985785335264, -0.25034281738758185, 
-0.3094708935905055, -0.46018951920580126, -1.6462291653938594, 
-1.3807325095022998, -0.61786438908026453, 0.29920047908665043, 
-1.15813269320894, -1.2184201434550583, 0.56933463115098804, 
0.65744705843377649, 1.3727808430848341, 2.2654988563446627, 
-1.1998701587639449, -1.3621825248111865, 1.9200053914726771, 
-0.074117962822005223, -0.31410838976328381, -0.2074459777893822, 
-0.9077078998789101, -1.1975514106775558, -1.3529075324656299, 
-0.90886727392210476, -1.2300138838870041, -0.045133611742140665, 
-0.54598319840220033, -0.53554883201344916, -0.95408286160669331, 
0.19137869306955427, -0.15063664967284771, 0.055731930015788064, 
1.1687310114825873, 1.3901714537327527, 0.62730333331071741, 
-0.88799854114460219, -0.3280208782816188, -0.53902695414303281, 
0.051094433843009761, -1.3911668758910511, -1.2833450898739549, 
-0.40106144300287755, -0.43236454216913123, -0.81032048025056524, 
-0.92162038839724514, -0.0022367721439410519, 0.1693505862488571, 
0.9113499738933899, 1.1281529199707769, 0.80700631000587764, 
-0.53786758009983826, -1.856075867212079, -1.9546226608836184, 
-1.4329043414460561, -0.34541148892953755, -0.39294582470051548, 
-0.19237411522785267, 0.14732247942816004, -0.16570851223437724, 
1.4353870414173415, 2.5182423977610817, 2.4521580772989906, 0.85917814194963382, 
-0.4022208170460721, 0.02790695297911806, -0.24222719908521972, 
0.26905675396359124, -0.60974877077790246, -1.502466784037731, 
-2.2966380036260206, -0.29092090889939221, 0.34093794464165533, 
1.82725546801711, 4.0741223637282111, 2.3025988257268888, 0.37571916593749288, 
-0.42656767195315837, -1.4294262193164724, -0.33149900041120256, 
0.12181625047787924, 0.46730971534986482, 0.31195359356179081, 
-0.091508573469923971, 0.68063453929766815, 0.71309701250711632, 
0.095150647484403786, -0.57496754948206497, 0.50556905877528613, 
0.12297562452107388, -0.34193336679995379, -0.11469605433381563, 
-0.57496754948206497, -0.28396466464022468, 1.6092931478965287, 
-0.22715533652369013, -0.15295539775923683, 0.90787185176380614, 
0.17746620455121925, 0.61223147074918771, -0.4404801604714933, 
-0.47873950389691455, 0.39426915062860618, -0.72684554914055521, 
-0.23990845099883051, -0.56685193117970289, -0.71757055679499859, 
-0.61322689290748611, -0.31642713784967302, 0.70961889037753256, 
2.4289705964350983, 0.84410627938810423, 0.755993852105316, 0.84990314960407709, 
1.0481561109903508, 0.025588204892728859, 0.35716918124637959, 
1.150181026791474, 0.70961889037753278, 0.39774727275818983, 
0.75715322614851066, 0.24702864714289419, 0.47890345578181076, 
0.77338446275323469, 1.1258341718843878, 0.24702864714289419, 
-0.65380498441929658, 0.48122220386819986, 0.71309701250711632, 
1.200034110648841, 1.7414617888207109, 0.03138507510870181, -0.45323327494663374, 
1.8689929335721149, 0.61021918939733133, -0.592903794437455, 
0.42296621371778192, -0.52732002276225043, 0.66992303671544851, 
-0.058282979816132674, -0.012148188706678402, -1.4355421849954275, 
-0.13019897772204658, -0.23739452177048431, -0.65260764175557229, 
-1.9470956040620229, -0.64310930240950814, -0.14648184517244214, 
-0.34051934895632308, -0.26905565292403133, 1.8074622488750303, 
0.36868998888312993, 0.89019404916941136, -1.2247695118875288, 
0.91823676533398169, -0.40022319627444036, -1.8105004382281487, 
-3.0131711201893125, -0.75166175207881203, -0.23422840865512959, 
0.24566387925791869, -2.4382954388156239, -0.47440070354846481, 
0.43110764744297975, 0.32029368840556521, -0.57978704010241411, 
-0.35861142390120704, -0.10215626155747638, 0.88612333230681251, 
0.45100892988235214, 0.54644462521661519, -0.21794554120473397, 
-0.31926116089608447, 1.5641238408663403, -0.1419588264362211, 
0.59529322756780212, 0.29632168910359391, -0.10667928029369733, 
-0.33554402834648001, 0.0050392824909613739, -0.62999254807446736, 
1.1520768339966074, 0.067004639177189101, 0.16017882514334172, 
1.0118632531737564, 1.4392885237466408, 0.58308107698000533, 
0.34562259332840278, -0.64763232114572911, -3.4595930694543253, 
0.89516936977925443, -0.87197405046229071, 0.62604975497410476, 
-1.5373101065604, -0.092205620337790145, -0.054664564827155801, 
1.5686468596025616, -1.6770713855096289, -0.91313352096190181, 
0.22169187995594739, -0.27674478477560704, -0.67974575417289818, 
-1.2686427936288724, 0.052530979221281894, -0.61823269936029268, 
-0.13698350582637805, -0.37670349884609117, 0.036700413644508427, 
-0.99183404697214728, -0.41741066747208017, 1.1403169852824329, 
-0.27629248290198488, 0.54734922896385951, 0.32662591463627455, 
-0.69829013099140425, 0.78887842947806097, 0.47498092918432344, 
0.44784281676699739, -0.89956446475323892, 0.31396146217485582, 
-0.65441684925006061, -1.6273181794111979, 0.44015368491542173, 
-0.24236984238032741, 0.060220111072857574, -2.3600472146790001, 
1.177405738919445, -0.04380931986022539, 1.1443877021450317, 
-1.0669161579934159, -0.37625119697246906, -0.81860242937488281, 
-0.057378376068888459, -0.51239406093272122, -0.63406326493706611, 
0.16967716448940587, 0.56001368142527819, 3.7387912492413977, 
1.0724717042391176, 0.88838484167492304, 0.8730065779717715, 
1.7916316832982571, 2.7202074298444283, 0.013633018089781301, 
0.53061405963984176, 0.59981624630402297, 0.3126045565539895, 
0.31486606592209998, 0.055697092336636583, 1.5772405952013813, 
0.90738152036705111, 0.28320493476855302, -0.039286301124004434, 
2.4913426817916458, -0.48661285413626149, -0.55264892768508811, 
0.12580388274806217, -0.47575760916933107, 0.99196197073438386, 
1.3510896583903316, 0.93678114215248776, 1.0724717042391176, 
-0.56938409700910575, 0.18867384318153407, -0.4499764023728714, 
-1.3396541877875423, -1.3713153189410896, 0.6961565453855304, 
-0.27991089789096163, -0.039286301124004469, 0.29677399097721602, 
-0.41741066747208017, -0.43595504429058624, -0.96469593455482128, 
0.15339429703901022, -0.032049471146050799, -0.90589669098394832, 
0.97115608454776736, -0.35273149954411986, 0.10635490218231178, 
0.39175738443785696, 1.6242799900580798, 0.19952908814846443, 
0.1280653921161726, -0.30162138782482245, -1.6883789323501817, 
-0.057378376068888445, 0.30627233032328005, 0.46186417484928244, 
0.70791639409970497, 1.0191000831517099, 0.39537579942683376, 
-1.2460276999477675, -0.78422748697960332, 0.89290786041114401, 
-0.047427734849202242, 0.28998946287288452, -1.2424092849587907, 
0.0077530937326940061, -0.43188432742798732, 0.55187224770008037, 
0.23390403054374409, -0.88418620105008749, -0.083611884738970244, 
0.57086892639220865, -1.0076646125489208, -0.50108651409216876, 
0.50257134347527155, 0.13575452396774837, 1.4524052780816816, 
1.2764598492426849, -0.35454070703860824, 0.11087792091853281, 
1.2574631705505566, -0.39434327191735308, -0.2025672775015826, 
0.74319594024222879, 0.44241519428353221, 1.1262956272001476, 
-1.1573765327178358, -0.001745245613370115, -4.5519020942516972, 
-0.64401390615675236, 0.22938101180752307, -0.6811026597937645, 
-1.1474258914981497, 1.7486630053041574, -0.99092944322490306, 
1.4139596188238033, 0.9802021220202094, 0.62062213249063958, 
-0.13019897772204655, -0.71368859061036405, -0.24642536405095766, 
1.6255472932899222, -0.36913002744893103, -0.23594861009222648, 
-0.91484226661800128, -0.57711293900408589, -1.2549409817938761, 
-1.1662843616275473, -0.90855621424276223, -0.95949728349128105, 
-1.1307099615187892, -0.74302350169481124, -0.86455384761609178, 
0.44679224788724631, -0.37247235501222437, 0.11607032292113835, 
-0.72626069536084137, -0.071480747946637974, 0.10114958321727513, 
-0.015936776958873414, -0.097655457836976073, 0.25401997504659424, 
-0.47956806214591996, 0.52885442889514345, -0.9672260364116565, 
-0.29901523392248952, -1.2292380120817892, 0.13492848004685426, 
0.19569365300749456, -0.32745704466947095, -0.44743935000581136, 
-0.018032127750619856, -0.91274691582625478, -0.19788879571100013, 
-0.47081210543081342, -0.44757904005859445, 0.40941943376560863, 
-0.15996638138169131, 0.34078505449818808, 2.0396023497441664, 
0.063686553127482795, 0.57004009445749948, 0.13087746851614482, 
1.3942343058863309, 1.3167063265917212, 2.1216988807650425, 0.57211178190697076, 
0.58542890027229089, -0.42243483055763992, -0.51390891512190495, 
0.12445172608812309, 0.90392222061771643, -0.83312358573989853, 
-0.20420919809921814, -0.55881888542485469, -0.14165782446364655, 
-0.3637650083887457, 0.2066169571349584, 0.07947152909197111, 
1.5618623692260285, 0.59590565423102204, 0.31722399892877517, 
0.28937911507401443, 1.1281247553345612, 0.034351642043035702, 
-0.14100517421703726, -0.62333522240363715, -0.69063973190115568, 
-0.38890921788970029, -0.44122428765739707, -0.27394430444922446, 
1.6121507882279376, 0.40103803059862392, 0.90502142103305872, 
0.85912827702527461, 1.0736456347491601, 2.1338931353727464, 
2.6115300658519458, 1.4417289238325786, 1.8761649879879612, 0.25855417675988096, 
0.48155446102244576, 0.29180347943330465, 1.4801436883479264, 
0.45970785276751808, 1.957368418671372, 0.57853752433499217, 
0.04692374679351298, -0.1039415102122147, 0.013844684294306341, 
0.82271573659981856, -0.49996280985225, -0.70530718744337939, 
0.035966092653069763, -0.89081557753931129, -0.95884463324467173, 
-0.55863263202114388, 0.78809397685102356, -0.18271288448214662, 
0.13911918163034648, -0.53139307172844319, -0.18524799093456373, 
0.49500287277070987, 2.6137284666826304, 0.28369838626083554, 
1.1135946998442554, 0.79701276688773104, 1.6833927151473091, 
0.53723583206212788, 0.14973333564099553, -0.92294428967941977, 
1.3669947455936302, 3.9589436749837019, 2.3903159822643123, 1.2281259475164719, 
0.36122636555544563, -0.038985635668081872, 1.3253281798495624, 
0.39219099392236212, 1.0065944094132808, -0.39100456868144667, 
0.22873836549372181, 1.1311513731448615, 2.4838167175943648, 
-0.40357667343192399, 0.76913276968636957, 0.096606842233362342, 
0.59381030343927599, -0.79121656990497424, 0.22873836549372181, 
-0.78856859912419586, -0.711593239818618, -1.2207634822129489, 
0.099170116535250666, -0.87153835025524573, -0.8834120047418077, 
-1.2941007599240666, -0.61819555452750374, -1.3042050070753761, 
0.013398134125573684, -0.099750808628722168, -0.11888376585827383, 
-0.62307630970507222, -0.40776737501541616, -0.54186982568717434, 
1.129395705814801, -0.091622689623376941, -0.041080986459827967, 
0.81172678578088264, 0.83549699476265915, -1.1200003908054197, 
0.79077327786342022, -0.67806762715067836, 0.62060331356324427, 
-0.83512580982978946, -0.032699583292843233, -0.52720237014495064, 
1.0819926879031654, 0.11588406951742748, 1.7672067468171577, 
1.6854880659390559, 2.5578066455520916, 0.72183393423168218, 
-0.41614877818240126, 0.013398134125573684, -0.97213808826771742, 
0.40504247877840555, 0.086735411836691256, 0.011302783333827242, 
0.10233031772935967, -1.2099607847977241, -0.89388875870053885, 
-1.1013284870834146, -1.0069003014029168, -0.51598060257137668, 
-0.97141673799514894, -1.3297217233837524, -1.0606237217027707, 
-0.98981437846333842, -0.86664919840783827, -1.4826823311812263, 
-1.4019254506665482, -1.719736350754115, -1.7026941643145792, 
-1.7257430230237873, -1.8917566357534508, -1.9724822195896365, 
-1.0992331362916683, -1.3108635662580364, -1.4651294745487291, 
-1.5483832193402018, -0.91484226661800128, -1.0594214712484902, 
-0.69404038318612105, -1.3118076254059658, -0.43291158451637107, 
-0.57749078914686014, -0.69059902122855166, -0.69358846321051626, 
-0.5447740929348972, -0.97190049762976516, -1.0589297412169161, 
-1.1523891379162274, -1.1895134161271119, -0.97654351733267053, 
-1.0051197855415548, -1.0476013294957871, -0.91828152565648213, 
-0.82374981603226227, -0.49046374748861193, -0.24171070677882825, 
-0.20353922110920547, 0.57085458815283285, 0.52767725594782744, 
0.51524747086492217, 0.38638420820836761, 1.1572253817402394, 
0.75078403123338933, 0.84990763379326495, 0.99695258456963665, 
0.97326494673559261, 1.1732393850004794, 0.74732257209637765, 
0.60968185381892126, 0.98597094926478424, 1.0163723504731834, 
0.82662145414427834, 0.59805423996672458, 0.43044521843151029, 
-0.010264961754102193, 0.010661132119649423, -0.25977890443513652, 
0.27439769175118234, 0.22558627671772941, 0.34091580160088658, 
-0.021768767827925892, -0.40413006161882514, -0.30795044753709444, 
-0.70114073769126872, -0.38649616559989275, -0.77662502184171534, 
-0.61019876581887467, -0.44420606629400317, -0.40571732319229964, 
-0.94775396729817263, -1.1245401257684529, -0.75400665905653586, 
-1.0620842602367111, -1.1613505478598491, -0.93541858564627689, 
-1.0902402125017021, -0.94580812171474382, -0.92700619101632764, 
-1.0221124031232476, -0.68855361355668132, -0.40619191967606272, 
-0.036299330172473783, 0.45939210751769066, 0.21693262887520065, 
1.3892065783998653, 1.6130684664966706, 1.2525382670483802, 1.7753759357888044, 
2.53250950778525, 2.0510287673345653, 1.9031352457548667, 1.6203969698816969, 
1.9722483587028725, 1.5606361016293728, 1.6655532777145294, 1.4984592048278815, 
2.0294372349963301, 1.4541630171442459, 1.1570334626771981, 0.93581475601182407, 
0.87284560406557798, 0.44057785335985317, 0.28930859264907827, 
0.31322412850479442, -0.27544058839931979, -0.20439714552216173, 
0.16186396078638077, -0.55733284445360753, -1.0530669270452115, 
-1.0178782344213073, -0.9701905160680746, -0.92896768452730094, 
-1.1142898734506557, -1.0883241724945483, -1.054838925873175, 
-1.1674936868777324, -0.97547040194993939, -1.2137758430359362, 
-0.81395283774750848, -0.79821893257927412, -0.54002812809726597, 
-0.60604397745411998, 0.013178556946566968, 0.60068257592843433, 
0.8602687972458547, 1.8332522318443116, 1.2621359492010027, 2.0482018514059868, 
1.8562095184227871, 1.6550465254855198, 1.3780948302908895, 1.5788594602375587, 
1.3635783682766562, 1.7317650470858297, 1.4005943146814646, 2.0998090603577948, 
1.3457810001355386, 1.7834763034495935, 0.56087579585280167, 
0.16375202940656877, 0.34319592818592248, 0.2826374168577469, 
0.022776239099189736, -0.28073079159604908, -0.5620968645922515, 
-0.29556611595800875, -0.80073635740619153, -0.70523155303500962, 
-0.52484104061684578, -0.77726836374192754, -0.88428339384951549, 
-1.0122000428672602, -0.96977524414478189, -1.1320820262457978, 
-1.1761473347202611, -1.0752930025918794, -1.2801613445258702, 
-1.15040666586503, -1.0153468239009069, -0.9717639065848982, 
-0.64016798617128678, -0.58185326155245798, -0.21276032126927719, 
0.18263271560845004, 0.21054621097412721, 0.15766825274151833, 
0.36970884805875531, 1.2117874526626531, 0.69131244902617994, 
0.68956530812441452, 1.4684074459565539, 1.6526514754765771, 
0.84555630624919753, 0.66574751843413937, 0.95831424040239921, 
1.0387144958120764, 1.8163434137866843, 1.444352053166009, 1.2075392982672297, 
0.94289501333752967, 1.1428910033267996, 0.37415280216293884, 
0.069977954603892528, 0.44224215088431523, -0.028413118600609757, 
-0.30747324338034354, -0.30732109133036511, -0.24375611445069859, 
-0.41402276165815444, -0.72676602457526618, -0.62845009581402644, 
-0.43948589474353295, -0.94509622698909912, -0.8813289161012583, 
-0.80356846033647378, -0.9816762668408856, -1.0286252081314102, 
-0.96657171787938079, -1.1506584083477216, -1.0847333456928201, 
-1.2668726429805026, -1.1879149125856461, -1.1915665617851308, 
-1.2777883621070545, -1.2678218359480287, -1.2896901872609812, 
-1.283452567967619, -1.2500966890109622, -1.1997172405280194, 
-1.0000254966904176, -1.0730902558683268, -0.95036579555609957, 
-0.80034429944134378, -0.83066574145954397, -0.2801014353893197, 
-0.40628735483855855, 0.47299806649513915, -0.081914745289445895, 
-0.0080622150305493159, 0.078002246239692152, -0.84786516402105161, 
-0.88257784895770619, -0.77378218792522502, -0.99011626318336177, 
-1.0449016517289744, -1.1355758226064523, -1.0636003483517966, 
-0.93689506366022146, -0.9979555256796746, -0.98593504582430957, 
-0.91985111178016365, -0.81358365990160586, -0.55092618428684681, 
-0.37764670794661387, -0.2372563630449053, 0.41195947353067419, 
0.52306109853856408, 0.3849202296495462, 0.29370221235548055, 
1.1873473259908065, 0.47583102414622447, 0.43335708449980642, 
0.57031599901554131, 0.68318167249994699, 0.80845284565580433, 
0.57660902356354682, 0.54840387606246732, 0.82635158204236481, 
0.92106202603313159, 0.60289790765667772, 0.54865368853913099, 
0.67210348047926316, -0.17015145627004694, -0.20649684417918199, 
-0.32611822974385407, 0.13284846845309739, 0.068743749674373439, 
0.15291077102384881, -0.11274268717637813, -0.41938869186430627, 
-0.43225943925799681, -0.75037623291061062, -0.52407677375151218, 
-0.82379107700363352, -0.7689275246558982, -0.72619329902836061, 
-0.60587251611054471, -0.93396829240584844, -1.0785495303792285, 
-0.90164971266523408, -0.93598186027330621, -1.0286552300502685, 
-1.0036581549023968, -1.0808447794854694, -1.0033241664825097, 
-0.91253755413002813, -0.92888509123516561, -0.76315390834741581, 
-0.48068077780535884, -0.05354228506770814, 0.54930265790785537, 
0.18201547618546124, 0.81495378866264745, 1.5947862595644224, 
1.1826257746969211, 1.138566456801863, 1.9285107471394742, 1.8000475242497855, 
1.72641051398067, 1.3203407210713791, 1.6021485901266688, 1.7738756345014148, 
1.8924256452114596, 1.5139461663009002, 2.2058382837328607, 1.7257895084378359, 
1.1279893810236183, 0.99654496055796293, 0.9355061524012217, 
0.76663093553784889, 0.093849515671503958, 0.18795472902738355, 
-0.21459480266184008, -0.096519386494079332, 0.12373507877647651, 
-0.64538633307152637, -0.97616598151949752, -0.99961504599566464, 
-0.96636627251646134, -0.98390008269918849, -1.0554992866085591, 
-0.94966642913384802, -0.99523435405887339, -1.1292343096118898, 
-0.97227604438287674, -1.0528774451868121, -0.83591567125144639, 
-0.79448287552950903, -0.61854157742706151, -0.39629082895789552, 
-0.066439323974643222, 0.61484740042628316, 0.88618603200847157, 
2.1435679638554119, 1.6190307155876644, 2.0015564583865455, 2.1015237309774277, 
1.7542348224472772, 1.4660298834128807, 1.5465529010266743, 1.286635432100401, 
2.2764820799114323, 1.8682663736911291, 1.9401289668421993, 1.5351274713874614, 
2.2587353893683888, 0.67570699528454836, 0.067844579921413115, 
0.081754169654654249, 0.29017192587970708, 0.021513675282033507, 
-0.43637669023207859, -0.58421020563413417, -0.30328536937679063, 
-0.81473785733303772, -0.92791493439644512, -0.80886299714814325, 
-0.7963616670659579, -0.89779274767227246, -1.0059297416467179, 
-0.99379560487262242, -1.0387504777335923, -1.1007921505840379, 
-1.0756153975011471, -1.1164535309145047, -0.98819821928439211, 
-1.0150870757097616, -1.0149687639001619, -0.6567628863566094, 
-0.55264144261091497, -0.28238203885665403, -0.02230901899382488, 
0.15241541305381848, 0.53154589569281518, 0.21663351167443581, 
1.0467564925522239, 0.6509340539845877, 1.0199623780282077, 1.5621463975319607, 
1.3485225941181107, 1.1790733171483401, 0.91891979353397302, 
1.1659674719052344, 0.76716202410538703, 2.1796079736831708, 
2.3355738334191405, 1.3529001310733129, 1.0971336610799252, 1.1043080116325577, 
0.47584048909099241, 0.10937202509103051, 0.12475256033903703, 
0.29630739961211605, -0.17598955901541025, -0.35315616335940359, 
-0.24866317312063976, -0.34885116512025172, -0.48851854512874759, 
-0.62560459850639805, -0.62172397115151656, -0.50159365085177832, 
-0.80139281104041704, -0.84689500718233102, -0.94367406743517179, 
-0.97109835699289082, -0.75770893595448918, -1.0360992530947306, 
-1.0903807113392334, -1.1609201517606451, -1.0158328301491748, 
-1.0912562187302739, -1.1894313583363949, -1.1513915901507581, 
-1.1266272431585695, -1.1051933499011597, -1.1443308965168562, 
-1.0711304101483743, -0.86846666796914185, -0.93380686251452771, 
-0.94246728697725113, -0.85375786795427899, -0.74863836388515193, 
-0.08730952718809204, -0.50833393283082895, 0.33281570870168448, 
0.11897348348549618, -0.08730952718809204, 0.080054358672138171, 
1.2231403143596449, -0.98925875319732848, 0.31215246301265581, 
-0.66390594914483247, -0.23733227272044866, -0.89165291198157959, 
-0.02043040335211806, 0.48205892735118161, 0.49290402081959828, 
-0.99648881550960622, 0.08079046901976969, 0.0084898458969927277, 
-0.909728067762274, -0.96756856626049537, -0.42531389283966858, 
0.97008813342992561, 1.7979302681857212, -0.95310844163594, -0.4180838305273909, 
0.14947606098640789, -0.12526630688014459, -1.003718877821884, 
0.25431196451443427, 4.9972328413685991, 0.030180032833825816, 
-0.97479862857277311, -0.67836607376938785, 1.2556755947648943, 
-0.33132308278005868, -0.97479862857277311, -0.16864668075381076, 
0.15309109214254651, 0.088020531332047389, -1.003718877821884, 
-0.74343663457988707, 0.3013073695442392, -0.8518875692640524, 
-0.78681700845355307, 0.44590861578979296, 1.5304179626314465, 
0.059100282082936606, -1.003718877821884, -0.13249636919242211, 
0.73511110828090054, 0.15309109214254665, -1.003718877821884, 
-0.36024333202916942, 0.051870219770658907, 0.07717543786363093, 
-0.98564372204118966, -0.46507923555719594, 0.77126141984228913, 
-0.50845960943086199, -0.79043203960969199, 0.3013073695442392, 
-0.46507923555719594, -0.19395189884678263, -0.98202869088505074, 
-0.83381241348335811, 2.8245991165291531, 1.5629532430366961, 
-1.003718877821884, -0.13249636919242211, 1.1183044108316182, 
-0.13249636919242228, -0.97479862857277311, -0.46146420440105707, 
1.8413106420593874, -0.10719115109945027, -1.000103846665745, 
-0.94226334816752355, 0.60496998665990231, 0.29769233838810027, 
-1.003718877821884, -0.35301326971689179, 0.20731655948462915, 
1.0387737253965634, -0.89165291198157959, 1.1110743485193404, 
2.7667586180309316, 1.6352538661594731, -0.97118359741663429, 
0.30853743185651689, 0.062715313239075532, -0.73259154111147051, 
-0.93141825469910688, -0.049350652601228846, 0.12417084289343587, 
-0.33493811393619749, -0.86273266273246885, 0.55435955047395824, 
1.3496664048245042, 0.42060339769682115, -1.003718877821884, 
-0.86273266273246885, 1.0206985696158692, 0.20008649717235161, 
-1.000103846665745, -0.50845960943086199, 0.27961718260740609, 
0.12778587404957481, -0.98925875319732848, -0.49038445365016786, 
0.48205892735118161, 0.14586102983026897, -0.9928737843534674, 
-0.26986755312569821, 0.49651905197573704, 0.16755121676710205, 
-1.003718877821884, -0.76512682151672007, -0.34578320740461399, 
1.6316388350033344, -1.003718877821884, -0.70005626070622085, 
1.8485407043716653, -0.16503164959767166, -0.92418819238682914, 
-0.21202705462747679, 2.7197632130011269, -0.2047969923151991, 
-0.42169886168352977, -0.53376482752383403, 0.47844389619504252, 
0.14586102983026897, -1.003718877821884, -0.085500964162617168, 
1.7798551124050266, 1.9497615767435525, -0.76151179036058125, 
-1.003718877821884, 1.7907002058734436, 0.10609568711274156, 
-0.97479862857277311, 0.40975830422840465, 1.8810759847769147, 
-0.96756856626049537, -1.000103846665745, 0.041025126302242441, 
2.3618751285433812, 1.1906050339543952, -0.30601786468708675, 
-0.73620657226760922, 0.67004054747040143, -0.48315439133789018, 
-0.92780322354296818, -0.83019738232721929, 2.3582600973872423, 
-0.078270901850339469, -0.80127713307810855, 0.0012597835847151908, 
0.79295160677912213, 0.019334939365409351, -0.97479862857277311, 
-0.17949177422222723, 0.12417084289343587, -0.44700407977650169, 
-0.99648881550960622, -0.36024333202916942, 0.39529817960384928, 
0.49651905197573704, -0.98925875319732848, -0.85911763157633014, 
0.98454825805448098, -0.41085376821511321, -1.003718877821884, 
0.17478127907937976, 1.8485407043716653, 0.69173073440723432, 
-1.000103846665745, -0.909728067762274, 1.1399945977684511, 2.0256772310224687, 
-1.003718877821884, -0.89165291198157959, 0.51820923891256998, 
-0.45784917324491825, -0.99648881550960622, -0.89165291198157959, 
1.7979302681857212, -0.88803788082544088, -1.000103846665745, 
-0.42531389283966858, 0.63750526706515187, -0.49038445365016786, 
-0.93141825469910688, -0.42531389283966869, 1.6786342400331393, 
0.21093159064076808, -1.003718877821884, -0.19395189884678246, 
2.3329548792942703, 0.48928898966345918, -0.31324792699936443, 
-0.43615898630808514, -0.23371724156430987, 0.60496998665990231, 
-1.003718877821884, -0.42588382693285648, 1.1099273133884142, 
0.071591721344467049, -1.7447724898076189, -0.47794522152001767, 
1.2024809037655904, -0.032531067829856583, -1.3543120304039062, 
-0.22631514768206962, 1.0838966160948325, -0.073023263619871395, 
-1.7042802940176041, 0.033991825253738825, 1.2690037968491856, 
0.08605321984090003, -1.487357816571097, -0.45769912362501025, 
1.4483263782049645, 0.24802200300095928, -1.3976965258932077, 
-0.17714605279419501, 1.3297420905342079, -0.075915563319157997, 
-1.6175113030390018, -0.24656124557707704, 1.2082655031641634, 
-0.090377061815591589, -1.2617584400267297, -0.24366894587779045, 
1.3875880845199422, 0.0050688282608710158, -1.5047116147668178, 
-0.40563772903784906, 1.3268497908349213, -0.19160755129062862, 
-1.6088344039411415, 0.0021765285615844201, 1.3644496869256484, 
-0.20606904978706223, -1.5538807096546932, -0.20606904978706223, 
1.3268497908349213, -0.099053960913451991, -1.3687735289003398, 
-0.16846915369633461, 1.3470958887299276, 0.14679151352592223, 
-1.5567730093539798, -0.51265281791145867, 1.072327417297686, 
-0.13954615670346682, -1.5596653090532664, -0.35357633445068726, 
0.96531232842407577, -0.02674646843128339, -1.3658812292010531, 
-0.29283804076566505, 1.4570032773028243, 0.10919161743519402, 
-1.0535128616780829, -0.070130963920584793, 1.4020495830163766, 
0.094730118938761043, -1.4555425198789433, -0.0093926702355625804, 
1.4020495830163766, 0.27694499999382649, -1.2039124460409947, 
-0.25813044437422406, 1.3470958887299276, 0.19017600901522366, 
-1.2964660364181713, -0.087484762116304987, 1.7028487517421997, 
0.051345623449459636, -1.4931424159696709, -0.37093013264640806, 
1.237188500157032, -0.090377061815592213, -1.3832350273967742, 
-0.23499204677993002, 1.3268497908349202, 0.30008339758812047, 
-1.212589345138855, 0.071591721344465814, 1.6305412592600312, 
0.15836071232306986, -1.4613271192775166, -0.055669465424150584, 
1.6363258586586042, -0.049884866025577394, -1.1142511553631052, 
0.077376320743040239, 1.5611260664771491, 0.094730118938761043, 
-1.3340659325088988, 0.071591721344465814, 1.2747883962477589, 
0.18439140961665046, -1.4208349234875017, -0.18003835249348163, 
1.4685724760999719, 0.22488360540666527, -1.6030498045425676, 
0.088945519540187853, 1.3644496869256484, 0.065807121945892624, 
-1.5683422081511267, -0.012284969934849795, 1.4425417788063912, 
0.14100691412734906, -1.3687735289003404, -0.41720692783499608, 
1.3152805920377737, 0.42155998495816493, -1.3398505319074727, 
0.29140649849026068, 1.4396494791071046, 0.23645280420381165, 
-1.3658812292010531, 0.0079611279601582291, 1.2747883962477589, 
0.16703761142092965, -1.4208349234875017, -0.018069569333422988, 
1.4974954730928391, -0.099053960913451991, -1.1634202502509805, 
-0.24366894587778981, 1.2979267938420529, 0.29429879818954729, 
-1.1113588556638185, -0.023854168731996177, 1.5900490634700164, 
0.033991825253738825, -1.258866140327443, 0.20752980721094447, 
1.3355266899327811, 0.18728370931593705, -1.3832350273967742, 
-0.43456072603071627, 1.3326343902334945, 0.010853427659444826, 
-1.5654499084518401, -0.33333023655567984, 1.2487576989541782, 
0.32900639458098768, -1.1749894490481274, -0.00071577113770279267, 
1.3962649836178034, -0.11351545940988621, -1.4179426237882151, 
0.088945519540187853, 1.4946031733935525, 0.29429879818954729, 
-1.3572043301031929, -0.11930005880846002, 1.4656801764006853, 
0.20174520781237126, -1.1749894490481274, -0.15979225459847421, 
1.5784798646728688, 0.27983729969311305, -1.3080352352153182, 
0.21909900600809085, 1.459895577002112, 0.0021765285615844201, 
-1.2501892412295832, -0.1366538570041802, 1.5322030694842808, 
0.16703761142092965, -1.1402818526566858, -0.28416114166780465, 
1.6478950574557507, 0.10340701803662083, -1.4266195228860754, 
0.088945519540187853, 1.51484927128856, 0.11208391713448186, 
-1.3919119264946345, -0.075915563319157997, 1.6045105619664493, 
0.32032949548312789, -1.371665828599627, 0.051345623449459636, 
1.4714647757992585, 0.16992991112021624, -1.258866140327443, 
-0.38539163114284164, 1.4165110815128108, 0.20752980721094447, 
-1.2993583361174579, -0.29862264016423884, 1.3818034851213692, 
0.29719109788883386, -1.2733276388238772, -0.00071577113770217619, 
1.6247566598614567), dim = c(198L, 11L), dimnames = list(c("vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec", 
"vec", "vec", "vec", "vec", "vec", "vec", "vec", "vec"), c("PRCP", 
"TAVG", "MEI", "PDO", "IOD", "AO1", "V24", "V25", "V26", "pred2", 
"Frespred2")))
LorenzPLUSERRORS1A1 <-
structure(c(-1.0217594426461829, -1.542765993913999, 1.2470571915313702, 
3.0413403691543346, 2.3792395848312742, 0.96150993955619846, 
0.27434118184190487, 1.4668835881091762, 2.63907146619959, 1.0750678370249704, 
0.0078154707903265452, 1.376159063409343, 2.7446793096531215, 
1.3960792092446517, 0.091308046940077145, 0.94249591167013502, 
2.4671510728288237, 1.5570985650847891, 0.29507314040181926, 
1.0327668111533341, 2.0270533914546078, 1.5691291373907386, 0.52442924681011849, 
1.1518054307901797, 1.9916580697803259, 1.3131790380254773, 0.72216877065385776, 
1.6030093471165485, 2.1437956646949021, 0.9568600906151169, 0.23537745863103093, 
1.8114681056513198, 2.4546528363978086, 1.0416386636797772, -0.00059280077021260646, 
1.4587733368487954, 2.7483993260335486, 1.3516504656336323, 0.11296673218757378, 
1.041858895871683, 2.628068613762963, 1.7805715471320873, 0.24677190727322529, 
0.88988705270272972, 2.0909954901022108, 1.6124067422416823, 
0.64961625251843347, 1.0415012294817583, 1.9671427668840789, 
1.0143341358542959, 0.62331685074875853, 1.5642258560141444, 
2.3185634357460958, 0.7515417606548529, 0.24111419749534266, 
1.8477562643380239, 2.6078796863121387, 0.9984717780436918, -0.080020193212313989, 
1.0584022077335473, 3.0998944855747457, 1.5308741989512105, -0.16330472188412221, 
0.72616251955890909, 2.459873808200201, 1.9955786284657009, 0.43175002786313799, 
0.74711309742779286, 1.6830571007213337, 1.5548166851837566, 
0.84150377567098888, 1.2552451415363342, 1.6768659639949872, 
0.52556812442282341, 0.48232665104837336, 2.1254635345226491, 
2.4162731424114927, 0.57184329834375425, -0.41831131026020718, 
1.4190672656595751, 3.1688770562429016, 1.3315356203201849, -0.3779275558186308, 
0.47375632499681652, 2.4748755157035172, 2.1394401932808478, 
0.2536098631091826, 0.68923975243224544, 1.2032928440728745, 
1.1775584884554577, 1.3713317300241461, 1.4231853988574434, 1.3757819430039397, 
0.14765689094879475, -0.20811895656115617, 2.3872261440468208, 
2.6795890271206098, 0.87328464730503397, -1.0350184638646294, 
0.10578089550869929, 2.7651730063930806, 2.5394672118216262, 
0.040918171518733878, 0.48335984214326722, 0.6262019527300422, 
-0.3886546102710422, 0.95679641961400552, 2.4510056520285213, 
2.1801734789248806, 0.34238372766642056, -1.255273900523024, 
-0.26659113548254942, 2.9798742106975062, 2.4664376417391503, 
0.13754444132211377, 0.39990775381076549, 0.58778213759552389, 
-0.32375431812108824, 0.78652266175723684, 2.6243674262824981, 
2.060102105387549, 0.14960584239018448, -1.2299931974531231, 
-0.24729097660318566, 2.8689779991416824, 2.4477953653483571, 
0.0014158812399679421, 0.21868450855893895, 0.71722128556891085, 
-0.5605279493151033, 0.559586630262076, 2.7750287808495719, 2.2965107092676567, 
0.31626313287032348, -1.235292040551087, -0.028705976341200756, 
3.2251767235243465, 2.0679112999324589, 0.15289166124020745, 
0.21080072201387545, 0.65656488052031303, -0.82194857290306, 
-1.573838937213069, 2.2042736209588032, 3.319894251519409, 1.1730101156003097, 
-0.55613944174322438, 0.43722345103815907, 2.7915172903741761, 
2.4009426330751387, 0.21894958298727171, 0.40275555543527797, 
1.0224258415737979, 1.3691806095378269, 1.3509399043921815, 1.4794799630455491, 
1.6627961946640952, -0.20303679553991871, -1.0111385466008809, 
1.9344520296792749, 3.3825577384517125, 1.0238259587619658, -0.77455502370498497, 
-0.33564260867544338, 0.10874493522898399, -0.74230260335024578, 
0.98249208402765809, 2.8648873269298409, 2.1293311863438458, 
0.36206982829985646, -0.63374672498715012, 1.6454918774277039, 
3.2290263505245731, 1.2164074115910108, -0.660962929340423, 0.044127587385516032, 
1.9157650092378087, 2.5478501318288251, 0.69614675162632633, 
0.54086107436559827, 0.9858811888284571, -0.14952745195781714, 
0.4102247344408444, 2.5935794490999156, 2.3842599180760788, 0.27662877607374836, 
-1.3131996197519551, -0.82974688405124042, -0.022277028042728908, 
-0.62913983237682958, 1.8901430796071932, 2.1866837136145212, 
1.8554168373192352, 0.4572558945562184, -0.21161794565995173, 
2.1449488708209783, 2.7294091658123181, 0.8873609367542199, 2.6495924529934372, 
2.6983206557859205, 3.2846145037815759, 0.5346290435022919, 1.3801856995468187, 
0.097510357939269876, -0.87927128439201629, 0.17005561215283327, 
1.4201646562298769, 0.40117509624435521, -0.83990049501943143, 
0.090249575407384541, 1.376237126626082, 0.53084287413547193, 
-0.53488053372543032, 0.05311357429670549, 1.2903316283821142, 
0.40062470552304741, -0.32700191493463981, 0.4373512425629632, 
0.93280153910192753, 0.17560101505379311, -0.41209658729817311, 
0.519812344162632, 1.4858981899145731, 0.089477183375721747, 
-0.69669471547288941, 0.54745180423342732, 1.4559065300761072, 
0.23147891870797477, -1.0147157409719925, 0.48834251001244033, 
1.5169553385148618, 0.54758020680138142, -0.89303151260611457, 
-0.0026444312280096138, 1.29306344524088, 0.57758688458435459, 
-0.50092513478089251, 0.044650961425725333, 1.0148889671418764, 
0.45261030093809596, -0.32530531850165301, 0.48391489476643113, 
1.0099894823391047, -0.022035068250719991, -0.46043783207133937, 
0.50539624034462904, 1.2427829000302977, 0.093820281308482745, 
-0.79882132273375306, 0.53697404715083741, 1.4552348462541358, 
0.29980577103398554, -0.96978037757911617, 0.1240003564878982, 
1.5800962369807365, 0.67432005117409533, -0.87631830462587501, 
0.045623632513089207, 1.4130119976477142, 0.77306686037473415, 
-0.44846201866989693, 0.23512203348199234, 0.82652103368577134, 
0.31225503016163725, -0.25319432453450774, 0.41520634734289313, 
1.0891954082659971, -0.14442898587877973, -0.40180666146130906, 
0.82276238222036313, 1.6812400960394687, 0.043500063225368368, 
-1.1731241053770394, 0.5626407641887734, 1.8781937939680269, 
0.57792583365238959, -0.85854768070062559, -0.48086293768060351, 
1.6892685148460957, 0.86626746924117148, -0.22393460597538398, 
0.060647329608822687, 0.78598950320599781, 0.52538819648692514, 
-0.071142742687309884, 0.77700300542413259, 1.2087912559619292, 
-0.59749991147386228, -0.57392142513605582, 0.96393407306343937, 
2.0239054161625782, 0.48182922582767995, -1.4901157458442711, 
0.10126730960823105, 1.9641832056447008, 1.0068505031001165, 
-0.13906570748510644, -0.21222309770711467, 0.38944213218835211, 
1.0142421798147172, 0.29289320805759866, 1.007465596836542, 1.8928159149702988, 
-0.22293366368524037, -1.8429913351728464, 1.1148036254898901, 
2.5857466349477463, 1.4301200904522693, 0.66593386519897479, 
2.7058671826123604, 4.5715189369284932, 1.3237229497284657, 0.20667672541221674, 
0.88313040708349966, 1.8188367045065419, 0.018646537748724379, 
-1.7889225415444394, 1.1501857198663437, 2.4242281567044417, 
1.3970705924625584, 0.72530043561467783, 2.738316455501586, 4.4815299456004949, 
1.3725584494069176, 0.079068500993065699, 1.156777134098981, 
1.7398092143762283, 0.12419280732156657, -2.0957635900674654, 
1.1210156611949005, 2.5295582347034955, 1.6038898612157637, 0.82188881489272669, 
2.8525951187055218, 4.0607977246001887, 1.3427895621144987, -0.044017475959311547, 
1.2124993289440056, 2.052190407755345, 0.73393150884824987, -1.2259390158175179, 
-1.0295388054039911, 2.809972868221855, 1.8249214205405435, 1.0399837452958602, 
2.6012056912222992, 4.0051726722509482, 1.7441446961561624, 0.40081906744847068, 
1.6313898144921639, 3.4201489100420108, 3.2094901988353346, 0.81390530658257321, 
1.5205691726589445, 2.3680569414747548, 1.8351505175640903, 1.7336189222159397, 
3.1625191723132744, 2.3836610104209739, 1.3091113468815254, 0.30381476969359633, 
1.259821385797357, 2.5000229837090089, 2.5736944087943017, 2.8173690103457858, 
1.0124627381507774, 1.6223583686149268, 0.6470944434362127, -1.0167756165779953, 
-0.45897656832904765, 1.8410644605295898, 0.9093224156873625, 
-0.27628392869405183, 0.3473820679841102, 0.38903490380583228, 
0.084163410658495641, 0.13295727124832912, 1.2133879754374428, 
1.8609575124800517, -0.08241340700826727, -1.6495241673972902, 
0.99972169406649125, 2.4354537916742114, 1.2215509122718573, 
0.11733903420062289, 1.053674076289616, 1.7436148905798405, -0.58276218915487144, 
-1.9044721809432501, 1.9255047709080158, 2.847627513271298, 2.0343332505925189, 
1.904042101418256, 2.5076390208822126, 2.4660701287259874, 1.7970535734232471, 
2.7310377212838759, 1.5644083102593427, 0.85089970521738389, 
1.9664166304234971, 1.7561961618999677, 0.91721977486079931, 
0.91173469559397424, -0.49263683835190764, 2.7223377553114481, 
1.6260464491508251, -0.93639787767296612, -1.7023951614809569, 
1.1547582802306628, 0.017975174531884575, -0.86880183242362929, 
0.075569450940536353, 0.93063260813091708, -0.02904710358090401, 
-1.0381998900115261, 3.6600140588407539, 0.18692170934167507, 
-0.019848186597086315, -1.9198632391816912, 0.66809092630689726, 
0.33301828110467357, -0.39281784910925532, -2.3923014554814062, 
0.92692514144678562, 0.44036210669362219, -0.55589226284481497, 
-1.1349360599403111, 0.74972494039169613, 1.0621796854367789, 
1.4177355966477969, -1.0566878683382184, 0.46765193056576482, 
1.9389600658223336, -0.22033018038504437, 1.220560340963619, 
0.64985631231959795, 0.48482855703870009, 0.075880653093073014, 
-1.1604328146441194, 0.44078158029358316, 1.78003154855662, 0.086984134379955558, 
-0.63061434157399676, 0.60449022042226574, 0.52109968905143145, 
-0.13794369161175546, -1.3184499999566155, -0.53726177559243438, 
1.159714152428164, 0.89340771559515775, -0.84671924982085134, 
0.21582574039141988, 1.2798989449927958, 0.58428586781894776, 
-0.30696850572664292, 1.526408561831982, 0.24319755345474814, 
-0.036331626698442143, -0.50494865024792757, 0.5748410019795317, 
1.1982555566016453, 0.90797748459590211, -2.2560518235154627, 
0.027195472088471007, 0.74402731071516548, -0.11131065898731896, 
0.090200778138117998, 0.18278433111524128, 1.4322094290390703, 
-1.2289836804244856, -0.24720986126226119, -0.35646251178955146, 
0.64948260019769577, 1.4664573293160434, -0.89999975853926228, 
-1.4334995276574432, 1.0124099903019697, 0.8748766428490149, 
1.2251793469008176, 0.77403941747992389, -0.75341045627270065, 
-1.3032209464002549, -1.873469905567557, -1.1865730866860018, 
0.50922462351496356, -0.85066498523635681, -2.0978525273801245, 
0.34886763600277759, 2.9120980883791985, -0.33608757093078401, 
-0.40403617596208119, 1.4035452506046731, -0.018649502620416758, 
0.51982839813521553, -0.16870503727927916, -1.7433395215391478, 
1.0572777400087809, -0.28693232782478262, -1.4338494391833438, 
1.5290399394922443, 2.2280336833979177, 1.5497129119852024, -1.4449073743750924, 
-0.87636054675668829, 1.4477947273824858, 0.1298226698949973, 
0.18335112540009724, 2.7219791469944892, 2.7429298165589504, 
3.2631260098168382, 0.705662288119, 1.178331527333824, 2.637727808129315, 
-1.1503661082431806, -2.5179013491034627, -0.15921869156658508, 
3.1664786902217874, 2.4112140461742833, -0.62665131547684205, 
2.162456042630954, 4.2695728860450082, 2.8300108796098078, 1.2895694363179859, 
1.915826146853647, 3.8121996462021897, -0.82324595368389997, 
-1.2953236364538891, -0.29700980457168769, 1.6811070793352298, 
2.0643959420304299, -0.11193064049904633, 1.6719415591918518, 
4.6193386521516686, 2.7464915083201511, 1.4864237080228158, 0.3050543103681001, 
2.2252691535836662, 1.2864583839114523, -0.80018222151568552, 
-1.8818526206444854, 1.6591836544596572, 0.79262053040452907, 
0.055723732889070621, 0.51824891991528443, 4.0624546177216896, 
3.2251315723219109, 2.7223649788730162, 0.14066091990595497, 
3.8896483729444973, 3.2086818202553378, 0.1809256516368154, 2.619751952055593, 
3.2887622069308846, 2.1449213144861345, 0.53073140675440889, 
4.3562192616160029, 2.367288963420791, 1.5261932052131844, 1.8925993723137651, 
1.558921683781191, 2.0382290117652166, 1.9086035308689711, 1.7671580765712704, 
2.4656367247507411, 3.2310526016500187, 1.7283229191895919, 0.48545910252345048, 
-1.7420287749074379, 1.2883217382359273, 2.0846862256882912, 
-0.50791527169871276, 2.2672691653072903, 1.1475991607327396, 
-0.8690776638227633, -0.0761547999168804, 1.6756770312320259, 
2.3895995326364861, 0.44589131397739945, -2.3958030508651369, 
-0.12472110918681834, 3.6240621754427083, -0.087850707177358045, 
-0.90892182373642716, -0.36814161540666795, 2.197990811250123, 
-0.93460915291203694, -1.3494080472583772, -0.055458566151158406, 
4.4111741193048237, 1.4170329651901135, 2.0600341665790518, 2.2552896185335634, 
4.6170004116250372, 2.7502466619067225), dim = c(198L, 3L), dimnames = list(
    NULL, c("2", "7", "8")))
my.uberloop.totysp <-
function(fresno.loop1=c(1,3:8),odatA,odatB,npred1=4,npred2=1){
puppy<-list()
predcol1<-1
yselvec<-3
npredcol<-length(predcol1)
puppy<-list()
for(ix in 1:4){
	puppy[[(ix)]]<-list(season=ix,output=my.overloopHF.totysp(predcol1,npred1,npred2,yselvec,fresno.loop1,season.number=ix,odatA=odatA,odatB=odatB))
}
puppy
}
likelihood.compare.back.2mod.ecdf.by.season.rep <-
function(data=psuedo.history.trial.1to9,data1=psuedo.history.trial127,Fresno=F,xvar1=1,xvar2=1,xcvar1=c(1:3),xcvar2=c(1:3))
{
#output difference of the two likelihoods and the SD
#plot will be + or - tdf*(sdrand+sdmeas)with # on the points that are interesting
#
Spring.thread<-likelihood.compare.back.2mod.ecdf(data,data1,seas=1,Fresno,xvar1,xvar2,xcvar1,xcvar2)
Summer.thread<-likelihood.compare.back.2mod.ecdf(data,data1,seas=2,Fresno,xvar1,xvar2,xcvar1,xcvar2)
Fall.thread<-likelihood.compare.back.2mod.ecdf(data,data1,seas=3,Fresno,xvar1,xvar2,xcvar1,xcvar2)
Winter.thread<-likelihood.compare.back.2mod.ecdf(data,data1,seas=4,Fresno,xvar1,xvar2,xcvar1,xcvar2)
##component 1 is likelihood thread 1st model, 2 is 2nd model, 3 i pfor ttests
Spring.lik1<-cbind(Spring.thread[[1]][,1],Summer.thread[[1]][,2],Fall.thread[[1]][,3],Winter.thread[[1]][,4])
Spring.lik2<-cbind(Spring.thread[[2]][,1],Summer.thread[[2]][,2],Fall.thread[[2]][,3],Winter.thread[[2]][,4])
Spring.p<-cbind(Spring.thread[[3]][,1],Summer.thread[[3]][,2],Fall.thread[[3]][,3],Winter.thread[[3]][,4])
Spring.sd<-cbind(Spring.thread[[4]][,1],Summer.thread[[4]][,2],Fall.thread[[4]][,3],Winter.thread[[4]][,4])
Spring.ldif<-cbind(Spring.thread[[5]][,1],Summer.thread[[5]][,2],Fall.thread[[5]][,3],Winter.thread[[5]][,4])

Summer.lik1<-cbind(Summer.thread[[1]][,1],Fall.thread[[1]][,2],Winter.thread[[1]][,3],Spring.thread[[1]][,4])
Summer.lik2<-cbind(Summer.thread[[2]][,1],Fall.thread[[2]][,2],Winter.thread[[2]][,3],Spring.thread[[2]][,4])
Summer.p<-cbind(Summer.thread[[3]][,1],Fall.thread[[3]][,2],Winter.thread[[3]][,3],Spring.thread[[3]][,4])
Summer.sd<-cbind(Summer.thread[[4]][,1],Fall.thread[[4]][,2],Winter.thread[[4]][,3],Spring.thread[[4]][,4])
Summer.ldif<-cbind(Summer.thread[[5]][,1],Fall.thread[[5]][,2],Winter.thread[[5]][,3],Spring.thread[[5]][,4])

Fall.lik1<-cbind(Fall.thread[[1]][,1],Winter.thread[[1]][,2],Spring.thread[[1]][,3],Summer.thread[[1]][,4])
Fall.lik2<-cbind(Fall.thread[[2]][,1],Winter.thread[[2]][,2],Spring.thread[[2]][,3],Summer.thread[[2]][,4])
Fall.p<-cbind(Fall.thread[[3]][,1],Winter.thread[[3]][,2],Spring.thread[[3]][,3],Summer.thread[[3]][,4])
Fall.sd<-cbind(Fall.thread[[4]][,1],Winter.thread[[3]][,2],Spring.thread[[3]][,3],Summer.thread[[3]][,4])
Fall.ldif<-cbind(Fall.thread[[5]][,1],Winter.thread[[5]][,2],Spring.thread[[5]][,3],Summer.thread[[5]][,4])
Winter.lik1<-cbind(Winter.thread[[1]][,1],Spring.thread[[1]][,2],Summer.thread[[1]][,3],Fall.thread[[1]][,4])
Winter.lik2<-cbind(Winter.thread[[2]][,1],Spring.thread[[2]][,2],Summer.thread[[2]][,3],Fall.thread[[2]][,4])
Winter.p<-cbind(Winter.thread[[3]][,1],Spring.thread[[3]][,2],Summer.thread[[3]][,3],Fall.thread[[3]][,4])
Winter.sd<-cbind(Winter.thread[[4]][,1],Spring.thread[[4]][,2],Summer.thread[[4]][,3],Fall.thread[[4]][,4])
Winter.ldif<-cbind(Winter.thread[[5]][,1],Spring.thread[[5]][,2],Summer.thread[[5]][,3],Fall.thread[[5]][,4])

Spring.pvec<-c(Spring.p[,1],Spring.p[1:3,2],Spring.p[1:2,3],Spring.p[1,4])
Summer.pvec<-c(Summer.p[,1],Summer.p[1:3,2],Summer.p[1:2,3],Summer.p[1,4])
Fall.pvec<-c(Fall.p[,1],Fall.p[1:3,2],Fall.p[1:2,3],Fall.p[1,4])
Winter.pvec<-c(Winter.p[,1],Winter.p[1:3,2],Winter.p[1:2,3],Winter.p[1,4])
par(mfcol=c(1,1))
#fdr(Spring.pvec,.1,ind=F,stringmain="Spring")
#fdr(Summer.pvec,.1,ind=F,stringmain="Summer")
#fdr(Fall.pvec,.1,ind=F,stringmain="Fall")
#fdr(Winter.pvec,.1,ind=F,stringmain="Winter")
fdr.out<-fdr(c(Spring.pvec,Summer.pvec,Fall.pvec,Winter.pvec),.1,ind=F,stringmain="All seasons, solar")
subvec<-c(8,11,12,14:16,24,27,28,30:32,40,43,44,46:48,56,59,60,62:64)
list(likdifvec=c(Spring.ldif,Summer.ldif,Fall.ldif,Winter.ldif)[-subvec],likvec1=c(Spring.lik1,Summer.lik1,Fall.lik1,Winter.lik1)[-subvec],likvec2=c(Spring.lik2,Summer.lik2,Fall.lik2,Winter.lik2)[-subvec],
sdvec=c(Spring.sd,Summer.sd,Fall.sd,Winter.sd)[-subvec],fdr.out=fdr.out,Spring=list(Thread=Spring.thread,Spring.lik1,Spring.lik2,Spring.p,Spring.sd,Spring.ldif),Summer=list(Thread=Summer.thread,Summer.lik1,Summer.lik2,Summer.p,Summer.sd,Summer.ldif),
Fall=list(Thread=Fall.thread,Fall.lik1,Fall.lik2,Fall.p,Fall.sd,Fall.ldif),Winter=list(Thread=Winter.thread,Winter.lik1,Winter.lik2,Winter.p,Winter.sd,Winter.ldif))

}
my.overloopHF.totysp <-
function(predcol,npred1=1,npred2,ysel0=4,fresno.model1,season.number,odatA,odatB){
ysel0=4
##function(nat.mat,ycola=1,vecsel,npred1,npred2,ysel=1,season.number)
Fresno1a<-my.pair.loop.toty(odatA,predcol,fresno.model1,npred1=npred1,npred2,ysel=ysel0,season.number=season.number)
Hawaii1a<-my.pair.loop.toty(odatB,predcol,fresno.model1,npred1=npred1,npred2,ysel=ysel0,season.number=season.number)
list(Fresno=Fresno1a,Hawaii=Hawaii1a)
}
my.test.chaos.reg4nn.measure.orig.augH.movie.percseas.clean.toty <-
function(my.sunspot1a=VolnatfullA47[,c(9,3,4,5,10,11)],vectrain=c(1:160),meas=36,ncol=60,trim0=.3,reps=1200,npred1=12,npred2=3,ycol=1,ycolaug=3,seas=F,quad=F,winmul=2.5,plot.srb=F,main1="title",orth=T,season.number){
#introduce npred2<npred1
library(lars)
library(caret)
#library(astsa)
#divide into two matrices, 1st matrix is training matrix, last 60 of remaining is test matrix
library(parallel)
xparal<-T
#par(mfrow=c(4,4))
#
#TO DO !!!!!! LOAD UP NAMES LIST
#at data for
#Nearest neighbor updating of weights as time progresses on psuedo histories
#
my.sunspot1b<-my.sunspot1a[vectrain,]
#print(dim(my.sunspot1a))
#print(dim(my.sunspot1b))
#print(sum(is.na(my.sunspot1b)))
nmax<-max(vectrain)
my.sunspot2<-my.sunspot1a
if(orth){
	my.sunspot2.yorig<-c(my.sunspot2[,ycol])
	x2full<-my.sunspot2
	my.sunspot2<-cbind(apply(my.sunspot2,2,seas.adj.pred),my.sunspot2)
	my.sunspot2.ypred<-c(my.sunspot2.yorig-my.sunspot2[,ycol])
# y2full is centered scaled predictions, conf intervals are direct except for total means!
	#y2full<-my.sunspot2[,ycol]
	y2full<-x2full
	my.sunspot1<-my.sunspot2[vectrain,]
	y1full<-y2full[vectrain,]	
}else{
my.sunspot1.ypred<-0
my.sunspot1.yorig<-c(my.sunspot1a[,ycol])
my.sunspot1<-my.sunspot1a
}
ypredmat<-NULL

#print(my.sunspot1)
#
#ncola
	nc1<-length(my.sunspot1[1,])
	ncola<-max(c(60,nc1*4))
	nlim<-npred1+ceiling(ncola/nc1)
#Create the delay map basis for testing and training data
	Lorenz2<-matlag1(my.sunspot1,1:nlim)
	Lorenz2a<-matlag1(my.sunspot2,1:nlim)
#
#Lorenz3<-matlag1(my.sunspot3,1:nlim)
#
#Estimate manifold dimension, set delay map dimension=nsel
	nsel0<-dim.est.loop.calc(Lorenz2)$mudim
#nsel<-ceiling(2.5*nsel0)
	nsel<-ceiling(2*nsel0)
#print(c(reps,ncol,nsel))
	npreddel<-npred1-npred2
	nL<-length(Lorenz2[,1])
	n2L<-length(Lorenz2a[,1])
	n2f<-length(y2full[,1])
	n1f<-length(y1full[,1])
	n1start<-n1f-nL	
	n2start<-n2f-n2L
	n1starta<-n1f-nL-npreddel
	n2starta<-n2f-n2L-npreddel

	nLa<-nL
	vtime<-c(1:nL)
	vpredtime<-c((nLa+1):n2L)
#choose delay maps
	#D0<-disjoint.delaymap.make1.force(reps,ncol,nsel)
	D0<-disjoint.delaymap.make1(reps,ncola,nsel)

#Rationalize y to delayed data	
	y<-y1full[c((n1start+1):n1f),]
yz1<-y1full[c((n1start-1+1):(n1f-1)),]
yza1<-y1full[c((n1start-2+1):(n1f-2)),]
yzb1<-y1full[c((n1start-3+1):(n1f-3)),]

	y2<-y2full[c((n2start+1):n2f),]
yz2<-y2full[c((n2start-1+1):(n2f-1)),]
yza2<-y2full[c((n2start-2+1):(n2f-2)),]
yzb2<-y2full[c((n2start-3+1):(n2f-3)),]
#
# Do I create seasonal y for lorenz3??? and then pull out with vpredtime
#
#y2<-Lorenz2a[,ncol+npred1*nc1+ycol]
#match my.sunspot2.ypred to Y2a
#This is for adjusting anomolies to original data, not used
#n3L<-length(my.sunspot2.ypred)
#BELOW WE MAKE AN ADJUSTMENT TO PREDICT A SINGLE SEASON, NUMBERED 1, 2, 3, 4
#ANOMOLY PREDICTION
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Above adjust for second prediction, below adjust for season in second prediction
#internal to 1st prediction!!!
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#y<-seas.adj12(y)
#y2<-seas.adj12(y2)
	zwindow<-winmul*floor((3*nL/5)^(2/3))
	print(paste("window=",zwindow))
	D1a<-Lorenz2[vtime,]
	D1b<-Lorenz2a[vpredtime,]
	Y1aa<-y
	Y2aa<-y2[vpredtime,]
	Y1a<-Y1aa
	Y2a<-Y2aa
#
#
#
#print("2lengths")
#print(dim(Lorenz2a))
#print(dim(D1b))
#print(length(Y2a))
#print(length(y2))

	nD<-length(D0)
	nduh<-nD/10
# start
print(nduh)
print(paste("ycolaug=",ycolaug))
#Here is where the seasonal adjustment is made
n1a<-length(Y1a[,1])
n2a<-length(Y2a[,1])
div1a<-floor(n1a/4)
div2a<-floor(n2a/4)
Ind1a<-c(0:(div1a-1))*4+season.number

Ind2a<-c(0:(div2a-1))*4+season.number


#Need to deal with negative subscripts
#Lengthen original and shorten to match???
Y1a<-Y1aa[Ind1a,]
Y1b<-yz1[Ind1a,]
Y1c<-yza1[Ind1a,]
Y1d<-yzb1[Ind1a,]

D1a<-D1a[Ind1a,]
Y2a<-Y2aa[Ind2a,]
Y2b<-yz2[vpredtime,][Ind2a,]
Y2c<-yza2[vpredtime,][Ind2a,]
Y2d<-yzb2[vpredtime,][Ind2a,]
#Need to calculate weights in the child2 program based on the extra delay map values output weights
#SO NEED TO INPUT A SELECTION OF VARIABLES TO CREATE WEIGHTS!!!!

D1b<-D1b[Ind2a,]
print(dim(D1a))
print(dim(D1b))
print("DIMENSIONS")
#
#DONE TO HERE, INCORPORATE Y1b, Y2b below
#
if(xparal){
	cl99<-makeCluster(10)
}
	assign("xD1a",D1a,envir=.GlobalEnv)
	assign("xD1b",D1b,envir=.GlobalEnv)
	assign("xY1a",Y1a,envir=.GlobalEnv)
assign("xY1b",Y1b,envir=.GlobalEnv)
assign("xY1c",Y1c,envir=.GlobalEnv)
assign("xY1d",Y1d,envir=.GlobalEnv)

	assign("xY2a",Y2a,envir=.GlobalEnv)
	assign("xY2b",Y2b,envir=.GlobalEnv)
assign("xY2c",Y2c,envir=.GlobalEnv)
assign("xY2d",Y2d,envir=.GlobalEnv)
	assign("xwindow",zwindow,envir=.GlobalEnv)
	zfunc<-function(m1){
	my.test.chaos.reg4nn.child2.toty(m1,xD1a,xD1b,xY1a,xY2a,xY1b,xY2b,xY1c,xY2c,xY1d,xY2d,xwindow)
	 }
	zseq<-list()
	for(i in 1:10){
		nvec<-c(((i-1)*nduh+1):(i*nduh))
		zseq[[i]]<-D0[nvec]	
	}
#debug section
dum<-zfunc(zseq[[1]])
#end debug section
if(xparal){
	clusterExport(cl99,c("xD1a","xD1b","xY1a","xY2a","xY1b","xY2b","xY1c","xY2c","xY1d","xY2d","xwindow","my.test.chaos.reg4nn.child2.toty","my.cp.extract.larsnntry2a","rm.na.reg.4y","is.inf","gen.inv1","princompreg"))
	junk<-clusterEvalQ(cl99,library(lars,caret))
	master.str<-clusterApplyLB(cl99,zseq,zfunc)
	stopCluster(cl99)
	print("cluster closed 1")
}else{
master.str<-list()
for(i in 1:10){

#print(zseq[[i]])
#print(attributes(zseq)
	master.str[[i]]<-zfunc(zseq[[i]])
}
}	
	PM4<-NULL
	res4<-NULL
	PM4b<-NULL
	res4b<-NULL
	PM4c<-NULL
	res4c<-NULL
	PM4d<-NULL
	res4d<-NULL
	Y2zmat<-NULL
print("hey")
print(length(master.str))
#
#HERE NEED TO ACCOUNT FOR LIST STRUCTURE OF dog.out AND LOOP THROUGH Y COLUMNS
#
dog.in<-list()
nj<-length(xY2a[1,])
for(j in 1:nj){
	Yactual<-master.str[[1]][[j]]$Y2z
PM4<-NULL
	res4<-NULL
	id4<-NULL
	PM4b<-NULL
	res4b<-NULL
	id4b<-NULL
	PM4c<-NULL
	res4c<-NULL
	id4c<-NULL
	PM4d<-NULL
	res4d<-NULL
	id4d<-NULL
	Y2zmat<-NULL
		
	for(i in 1:10){
print(c(i,j))
		#PM4<-rbind(PM4,master.str[[i]]$pm4+correct.y)
		PM4<-rbind(PM4,master.str[[i]][[j]]$pm4)
		res4<-rbind(res4,master.str[[i]][[j]]$resid4)
		id4<-rbind(id4,master.str[[i]][[j]]$id)
		PM4b<-rbind(PM4b,master.str[[i]][[j]]$pm4b)
		res4b<-rbind(res4b,master.str[[i]][[j]]$resid4b)
		id4b<-rbind(id4b,master.str[[i]][[j]]$idb)
		PM4c<-rbind(PM4c,master.str[[i]][[j]]$pm4c)
		res4c<-rbind(res4c,master.str[[i]][[j]]$resid4c)
		id4c<-rbind(id4c,master.str[[i]][[j]]$idc)
		PM4d<-rbind(PM4d,master.str[[i]][[j]]$pm4b)
		res4d<-rbind(res4d,master.str[[i]][[j]]$resid4d)
		id4d<-rbind(id4d,master.str[[i]][[j]]$idd)
		##
#NEED TO GET BETAMATID picked up from id,idb,idc,idd from each value

		}
	dog.in[[j]]<-list(Y=Yactual,modres1=PM4+res4,modres2=PM4b+res4b,modres3=PM4c+res4c,modres4=PM4d+res4d,id4=id4,id4b=id4b,id4c=id4c,id4d=id4d,Delmap0=D0)

	}
	
dog.in
}
matlag1 <-
function(mat0,nvec)
{
if(!is.matrix(mat0)){
	mat<-as.matrix(mat0,length(mat0),1)
}
else{
	mat<-mat0
}
n3<-length(nvec)
for(i in 1:n3){
	j<-nvec[i]
	m2<-matlag0(mat,j)
	if(i==1){
		m3<-m2
	}
	else{
		n1<-length(m2[1,])
		m2b<-m2[,-c(1:(n1/2))]
		if(!is.matrix(m2b)){
			m2a<-as.matrix(m2b,length(mat2b),1)
		}
		else{
			m2a<-m2b
		}
		n2<-length(m2a[,1])
		m3<-cbind(m3[1:n2,],m2a)	
}
}
m3
}
matlag0 <-
function(mat,n)
{
n2<-length(mat[,1])
nvec<-c((n2-n+1):n2)
matA<-mat[-c(1:n),]
matB<-mat[-nvec,]
matC<-cbind(matB,matA)
matC
}
dim.est.loop.calc <-
function(mat,nsvec=c(5:30)){
vec0<-NULL
for(i in nsvec){
x<-dim.est.calc(mat,nsel=i)
vec0<-c(vec0,x)
}
list(vec0=vec0,mudim=mean(vec0))
}
dim.est.calc <-
function(Lorenz2a=mat,nsel=50){
# Lorenz2a is fullyformed delay map matrix for training
Lorenz3<-scale(Lorenz2a)
d1<-as.matrix(dist(Lorenz3))
n1<-length(d1[,1])
mest<-NULL
for(i in 1:n1){
	v1<-d1[i,]
	o1<-order(v1)
	o2<-o1[2:nsel]
	#print(v1[o2])
#print(sum(log(max(v1[o2])/v1[o2[-length(o2)]])))
	mest<-c(mest,dim.est(v1[o2]))
}
	
#plot(density(mest))
mean(mest)

}
dim.est <-
function(vec0){
#vec 0 is the ordered vector of distances in the k nearest neighbor estimates
k<-length(vec0)
Tk<-vec0[k]
mhat<-(k-2)/sum(log(Tk/(vec0[-k])))
mhat
}
disjoint.delaymap.make1 <-
function(ntrial, ncol, nsel)
{
	nmod<-ntrial*ceiling(ncol/nsel)
	nmid<-ceiling(ncol/nsel)
	outlist <- rep(list(), nmod)
	k<-1
	for(i in 1:ntrial) {
		dum <- sample(c(1:ncol),  replace = F)
		dum0<-dum
		for(j in 1:nmid){
			if(j<nmid){
				selvec<-((j-1)*nsel)+c(1:nsel)
				outlist[[k]] <- dum[selvec]
				dum0<-dum0[-c(1:nsel)]
				k<-k+1
			}
			else{
				if(length(dum0)<nsel){
				nplus<-nsel-length(dum0)
				
				dum0<-c(dum0,sample(c(1:ncol)[-dum0],nplus,replace=F))
				}
				outlist[[k]]<-dum0
				k<-k+1
			}
		}
	}
	outlist
}
seas.adj.pred <-
function(v1a, per = 4,yearlag=10)
{
	n1a<-length(v1a)
	n1<-n1a-(yearlag*per)
	v1<-v1a[1:n1]
	n1 <- length(v1)
	n2 <- floor(n1/per - 1)
	n2a<-floor(n1a/per-1)
	if((n2*per+per)<(n1-.1)){
		n3vec<-c((n2*per+per):n1)
	}
	if((n2a*per+per)<(n1a-.1)){
		n3veca<-c((n2a*per+per):n1a)
	}

	for(j in 1:per) {
		I1 <- c(0:n2) * per + j
		v2 <- v1[I1]
		I2<-c(0:n2a)*per+j
		v2a<-v1a[I2]
		m2 <- mean(v2)
		v2 <- v2 - mean(v2)
		v2a<-v2a-m2
		v1[I1] <- v2
		v1a[I2]<-v2a
		if((n2*per+per)<(n1-.1)){
		ind.plus<-((max(I1+per))==n3vec)
		v1[n3vec[ind.plus]]<-v1[n3vec[ind.plus]]-m2
		}
		if((n2a*per+per)<(n1a-.1)){
		ind.plusa<-((max(I2+per))==n3veca)
		v1a[n3veca[ind.plusa]]<-v1a[n3veca[ind.plusa]]-m2
		}

	}
	v1a
}
my.test.chaos.reg4nn.child2.toty <-
function(D0,D1a,D1b,Y1am,Y2am,Y1bm,Y2bm,Y1cm,Y2cm,Y1dm,Y2dm,xwindow){
#in here reinterpret the Y** as the matrixes of all the variables, cycle through all
#of them as Y and construct the 4 lists using all 7 yvariables so all of them are
# psuedo histories are projected forward through all 4 seasons!! Start here, work up!!!
library(lars)
library(caret)
dog.out<-list()
ny<-length(Y1am[1,])
for(j in 1:ny){
Y1a<-Y1am[,j]
Y1b<-Y1bm[,j]
Y1c<-Y1cm[,j]
Y1d<-Y1dm[,j]
Y2a<-Y2am[,j]
Y2b<-Y2bm[,j]
Y2c<-Y2cm[,j]
Y2d<-Y2dm[,j]

Pmix<-NULL
PM4<-NULL
resid4<-NULL
PM4b<-NULL
resid4b<-NULL
PM4c<-NULL
resid4c<-NULL
PM4d<-NULL
resid4d<-NULL
Betamatid1<-NULL
Betamatid2<-NULL
Betamatid3<-NULL
Betamatid4<-NULL
y.actual<-cbind(Y2a,Y2b,Y2c,Y2d)
for(i in 1:length(D0)){
#print(c(i,length(D0)))
#print("child2")
#print(length(D0[[i]]))
M1a<-D1a[,D0[[i]]]
M2a<-D1b[,D0[[i]]]
#START HERE,rename internal to be consistent with extra ys.
b.str<-rm.na.reg.4y(M1a,Y1a,Y1b,Y1c,Y1d)
M1b<-b.str$X
Y1A<-b.str$Y1
Y1B<-b.str$Y2
Y1C<-b.str$Y3
Y1D<-b.str$Y4
b1.str<-rm.na.reg.4y(M2a,Y2a,Y2b,Y2c,Y2d)
M2b<-b1.str$X
Y2A<-b1.str$Y1
Y2B<-b1.str$Y2
Y2C<-b1.str$Y3
Y2D<-b1.str$Y4

#print("prediction matrix dimension")
#print(dim(M1b))
#print(length(Y1b))
matrain<-cbind(c(Y1A),M1b)
matrain1<-cbind(c(Y1B),M1b)
matrain2<-cbind(c(Y1C),M1b)
matrain3<-cbind(c(Y1D),M1b)
#print(dim(cbind(c(Y1b),M1b)))
#print("predicted matrix dimension")
#print(dim(M2b))
#print(length(Y2b))
matpred<-cbind(c(Y2A),M2b)
matpred1<-cbind(c(Y2B),M2b)
matpred2<-cbind(c(Y2C),M2b)
matpred3<-cbind(c(Y2D),M2b)

#print(dim(M1b))
#print(length(Y1d))
#print(Y1d)
#print(dim(M2b))
#print(length(Y2d))
#print(Y2d)
#print(dim(cbind(c(Y2b),M2b)))
#print("SHIT")
#Pred.out<-my.cp.extract.larsnntry2(cbind(c(Y1b),M1b),cbind(c(Y2b),M2b),nnwin=xwindow,bstr=b1.str)
Pred.out<-my.cp.extract.larsnntry2a(matrain,matpred,1,nnwin=xwindow,bstr=b1.str)
Pred.out1<-my.cp.extract.larsnntry2a(matrain1,matpred1,1,nnwin=xwindow,bstr=b1.str)
Pred.out2<-my.cp.extract.larsnntry2a(matrain2,matpred2,1,nnwin=xwindow,bstr=b1.str)
Pred.out3<-my.cp.extract.larsnntry2a(matrain3,matpred3,1,nnwin=xwindow,bstr=b1.str)
#START HERE
PM4<-rbind(PM4,Pred.out$ypredict.loc)
resid4<-rbind(resid4,Pred.out$residlocmat)
Betamatid1<-rbind(Betamatid1,Pred.out$IDmat)
PM4b<-rbind(PM4b,Pred.out1$ypredict.loc)
resid4b<-rbind(resid4b,Pred.out1$residlocmat)
Betamatid2<-rbind(Betamatid2,Pred.out1$IDmat)

PM4c<-rbind(PM4c,Pred.out2$ypredict.loc)
resid4c<-rbind(resid4c,Pred.out2$residlocmat)
Betamatid3<-rbind(Betamatid3,Pred.out2$IDmat)

PM4d<-rbind(PM4d,Pred.out3$ypredict.loc)
resid4d<-rbind(resid4d,Pred.out3$residlocmat)
Betamatid4<-rbind(Betamatid4,Pred.out3$IDmat)

#y.actual<-rbind(y.actual,Pred.out$y2z)
Pmix<-c(Pmix,Pred.out$Pmix)
}
dog.out[[j]]<-list(pm4=PM4,resid4=resid4,id=Betamatid1,pm4b=PM4b,resid4b=resid4b,idb=Betamatid2,pm4c=PM4c,resid4c=resid4c,idc=Betamatid3,pm4d=PM4d,resid4d=resid4d,idd=Betamatid4,Pmix=Pmix,Y2z=y.actual)
}
dog.out
}
rm.na.reg.4y <-
function(X,Y1,Y2,Y3,Y4){
i1<-is.na(Y1)
i1<-i1+is.na(Y2)
i1<-i1+is.na(Y3)
i1<-i1+is.na(Y4)
n2<-length(X[1,])
for(i in 1:n2){
i1<-i1+is.na(X[,i])
}
i1<-as.logical(i1)
i2<-as.logical(1-i1)
n2<-c(1:length(i2))
id2<-n2[i2]
id1<-n2[as.logical(1-i2)]
#print(length(Y))
#print(dim(X))
list(X=X[i2,],Y1=Y1[i2],Y2=Y2[i2],Y3=Y3[i2],Y4=Y4[i2],nvec=n2,id=id2,id.na=id1)

}
my.cp.extract.larsnntry2a <-
function(matrix.train=auto.q.train,matrix.test=auto.q.pred,yindex=1,nnwin,bstr)
{
###print("A")

	pvec.mix<-NULL
      xmat.train<-matrix.train[,-yindex]
	#DI<-attributes(scale(xmat.train))[[3]]
	DI<-apply(xmat.train,2,var)
      ymat.train<-matrix.train[,yindex]
	k<-length(xmat.train[1,])
      xmat.pred<-matrix.test[,-yindex]
	ypred<-matrix.test[,yindex]
	#So try to get distance matrix with respect to nn
  	n1<-length(xmat.pred[,1])
	resid.vec<-1
	pred.loc<-NULL
	pred.loc1<-NULL
y.actual0<-NULL
pred.loc0<-NULL
actual.vec<-NULL
pred.locb<-NULL
	pred.loc1b<-NULL
resid.boot.mat<-NULL
pred.boot.mat<-NULL
###print("B")
      Betamatidloc<-NULL
	dist0<-as.matrix(dist(rbind(xmat.pred%*%diag(1/sqrt(DI)),xmat.train%*%diag(1/sqrt(DI)))))
	n1<-length(xmat.pred[,1])
#
#Calculating the distance in the training matrix from the values in the prediction matrice
#
		dist00<-dist0[1:n1,-c(1:n1)]
###print("C")
###print(dist00)
		for(i in 1:n1){
###print(paste("i=",i))
			dvec<-dist00[i,]
			o1<-order(dvec)
			nn0win<-min(length(o1),nnwin+2)
			v1<-o1[1:(nn0win)]

			pvec.mix<-c(pvec.mix,ks.test(v1,punif,0,length(o1))$p)
			xmat.fit<-xmat.train[v1,]
###print(v1)
#print(xmat.fit)

			y.fit<-ymat.train[v1]
###print(y.fit)
			if((sum(is.na(xmat.fit))>0)||(sum(is.na(y.fit))>0)){
				##print(xmat.fit,y.fit)
			}
			strloc<-lars(xmat.fit,y.fit)
			Iloc<-(strloc$Cp==min(strloc$Cp))
###print(strloc$Cp)
			s1loc<-(c(1:length(Iloc))[Iloc])[1]
			Betamatidloc<-rbind(Betamatidloc,(strloc$beta[s1loc,]!=0))
###print(s1loc)
			y.actual0<-c(y.actual0,ypred[i])
if(!is.na(s1loc)){
			yploc<-predict(strloc,xmat.fit,s1loc)$fit
			#
			#residloc<-c(y.fit-yploc)[1]
			#
			residloc<-c(y.fit-yploc)[sample(ceiling(sqrt(length(y.fit))),1)]
			pred.loc1<-c(pred.loc1,yploc[1])
			yp0loc<-mean(y.fit)
			pred.loc0<-c(pred.loc0,yp0loc)

###print("C")
###print((xmat.pred[i,]))
###print(dim(xmat.fit))
			yp1loc<-predict(strloc,rbind(xmat.pred[i,],xmat.fit),s1loc)$fit[1]
###print("D")
			pred.loc<-c(pred.loc,yp1loc)
			resid.vec<-c(resid.vec,residloc)
}else{
###print("E")
			Beta<-princompreg(xmat.fit,y.fit)
			Betamatidloc<-rbind(Betamatidloc,rep(T,length(Beta)))
			yploc<-sum(Beta*xmat.fit[1,])
			#resid.loc<-c(y.fit[1]-yploc)

			residloc<-c(y.fit-c(xmat.fit%*%Beta))[sample(ceiling(sqrt(length(y.fit))),1)]
			yp1loc<-sum(Beta*xmat.pred[i,])
			#Subbing nnpred
			#yp1loc<-mean(y.fit[1:5])
			pred.loc<-c(pred.loc,yp1loc)
			resid.vec<-c(resid.vec,residloc)
			yp0loc<-mean(y.fit)
			pred.loc0<-c(pred.loc0,yp0loc)

			
			
}
#####Bootstrap section Rebuild this	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!FIX
#Must be a matrix of predictions and residuals		
			nboot<-0

if(nboot>0.1){
pred.loc0a<-NULL
resid.vec0a<-NULL
pred.loc1a<-NULL
###print("F")
 for(j in 1:nboot){
                   zboot<-sort(sample(c(1:(nn0win)),replace=T))
			v1b<-o1[zboot]
			xmat.fit<-xmat.train[v1b,]
			y.fit<-ymat.train[v1b]
			if((sum(is.na(xmat.fit))>0)||(sum(is.na(y.fit))>0)){
				##print(xmat.fit,y.fit)
			}
			strloc<-lars(xmat.fit,y.fit)
			Iloc<-(strloc$Cp==min(strloc$Cp))
###print(strloc$Cp)
			s1loc<-(c(1:length(Iloc))[Iloc])[1]
####print(s1loc)
			yp0loca<-mean(y.fit)
			pred.loc0a<-c(pred.loc0a,yp0loca)
			#actual.vec<-c(actual.vec,y.fit[1])
			#y.actual0<-c(y.actual0,ypred[i])

			if(!is.na(s1loc)){
				yploc<-predict(strloc,xmat.fit,s1loc)$fit
				resid.loc<-c(y.fit-yploc)[1]
				pred.loc0a<-c(pred.loc0a,yploc[1])
				yp1loc<-predict(strloc,rbind(xmat.pred[i,],xmat.fit),s1loc)$fit[1]
				pred.loc1a<-c(pred.loc1a,yp1loc)
				resid.vec0a<-c(resid.vec0a,resid.loc)
				yploc<-predict(strloc,xmat.fit,s1loc)$fit
			}else{
###print("G")
				Beta<-princompreg(xmat.fit,y.fit)
###print(i)
###print(length(xmat.fit[1,]))
###print(dim(xmat.pred))
###print(length(c(Beta)))
				yploc<-sum(c(Beta)*xmat.fit[1,])
				resid.loc<-c(y.fit[1]-yploc)
				yp1loc<-sum(c(Beta)*xmat.pred[i,])
				pred.loc1a<-c(pred.loc1a,yp1loc)
				resid.vec0a<-c(resid.vec0a,residloc)
	
			}
##print(paste("j=",j))
##print(resid.vec0a)
	}
##print(paste("i=",i))

	resid.boot.mat<-cbind(resid.boot.mat,resid.vec0a)
	pred.boot.mat<-cbind(pred.boot.mat,pred.loc1a)
##print(resid.boot.mat)
}#end if nboot>0.1
###print("H1")
}
#print(length(pred.loc0))
#print(pred.loc0)
#print(length(pred.loc))
#print(length(ypred))
#print(length(pred.loc))

#print(pred.loc)

	r1<-diff(range(c(ymat.train)))
#	I993<-abs(pred.loc-pred.loc0)>7*r1
#print(I993)
#print(length(I993))
#print(c(length(pred.loc0),length(pred.loc),length(ypred)))
#	pred.loc[I993]<-pred.loc0[I993]+sign(pred.loc[I993]-pred.loc0[I993])*7*r1			#
#	resid.vec[I993]<-ypred[I993]-pred.loc[I993]
#
	
###print("I")
	#ypnull<-bstr$nvec
	#id<-bstr$id
	#id.na<-bstr$id.na
	#ypd<-	ypnull
	#ypd1<-ypnull
###print("Z1")
###print(length(ypd))
###print("Z2")
###print(length(pred.loc))

	ypd1<-pred.loc1
	#ypd1[id.na]<-NA
	ypd<-pred.loc
	if(nboot>.1){
		ypb<-rbind(ypd,pred.boot.mat)
	}
	#ypd[id.na]<-NA
	#rpd<-ypnull
	rpd<-resid.vec[-1]
	if(nboot>.1){
##print(length(rpd))
##print(dim(resid.boot.mat))
		rpb<-rbind(rpd,resid.boot.mat)
	}

	#rpd[id.na]<-NA
      list(ypredict.loc=ypd,residlocmat=rpd,Pmix=pvec.mix,nnpred.loc=ypd1,y2z=y.actual0,IDmat=Betamatidloc)
        
}
princompreg <-
function(X,Y,thresh=.05){
m1<-t(X)%*%X
m2<-gen.inv1(m1,thresh)
Beta<-m2%*%t(X)%*%Y
Beta
}
gen.inv1 <-
function(mat, thresh = .05)
{
        v1 <- sum(is.na(mat))
        v2 <- sum(is.inf(mat))
        if((v1 + v2) > 0.5) {
                print(mat)
        }
        e1 <- eigen(mat, symmetric = T)
        val <- Re(e1$val)
        vec <- Re(e1$vec)
        val1 <- val/max(val)
        #
        #       print("normalized eigen values")
        #       print(val1)     #
        #       n1 <- length(val1)
        #       plot(c(1:n1), abs(val1), log = "y", xlab = "eigen rank", ylab
        #                = "log10 of value")
        I1 <- val1 > thresh
        I3 <- is.na(I1)
        if(sum(I3) < 0.5) {
                val2 <- val[I1]
                I2 <- I1
                if(sum(I2) > 1.5) {
                        ret <- vec[, I1] %*% diag(1/val2) %*% t(vec[, I1])
                }
                else {
                        v1 <- as.matrix(vec[, I1], length(c(vec[, I1])), 1)
                        ret <- (1/val2) * v1 %*% t(v1)
                }
        }
        else {
                ret <- diag(length(I1)) * 0
        }
        ret
}
is.inf <-
function(z){z==Inf}
fdr <-
function(v0,Q,ind=F,do.plot=T,stringmain="",stringsub1="",stringsub2=""){
	n1<-length(v0)
	nvec<-c(1:n1)
	nvec1<-nvec[!is.na(v0)]
		v1<-v0[!is.na(v0)]
        o1<-order(v1)
        pvec<-v1[o1]
        m<-length(v1)
        qline<-Q*c(1:m)/m
	if(!ind){
		qline<-qline/sum(1/c(1:m))
	}
pun<-ks.test(v0,"punif",0,1)$p
if(do.plot){
        plot(c(c(1:m),c(1:m)),c(qline,pvec),type="n",xlab="",ylab="pvalue",main=paste("ks=",pun,"\n", stringmain),sub=paste(stringsub1," ",stringsub2))
        lines(c(1:m),qline)
        points(c(1:m),pvec)
}

        dv<-pvec-qline
        I1<-(dv<0)
        pmax<-max(pvec[I1])
        I2<-pvec<=pmax
if(do.plot){
        points(c(1:m)[I2],pvec[I2],col="red")
}
		q1line<-qline/Q
		p1vec<-pvec/q1line	  
        list(Interesting=nvec1[o1[I2]],Pstar=pmax,padj=p1vec,order=o1,original=v0)

}
likelihood.compare.back.2mod.ecdf <-
function(data=psuedo.history.trial.1to9,data1=psuedo.history.trial127,seas=1,Fresno=F,xvar1=1,xvar2=1,xcvar1=c(1:9),xcvar2=c(1:3)){
st1<-likelihood.compare.back.ecdf1(data,season=seas,Fresno=Fresno,variable=xvar1,condvar=xcvar1)
st2<-likelihood.compare.back.ecdf1(data1,season=seas,Fresno=Fresno,variable=xvar2,condvar=xcvar2)
#print(dim(st1[[1]]))
m1<-st1[[1]][c(1,5,8,10,2,6,9,3,7,4),]

m2<-st2[[1]][c(1,5,8,10,2,6,9,3,7,4),]
Pval<-NULL
sdval<-NULL
likval<-NULL
for(i in 1:10){
Pval<-c(Pval,predlik.test1(m1[i,],m2[i,]))
sdval<-c(sdval,predlik.sd1(m1[i,],m2[i,]))
likval<-c(likval,sum(m1[i,]-m2[i,]))
}
Pmat=cbind(Pval[1:4],c(Pval[5:7],0),c(Pval[8:9],0,0),c(Pval[10],0,0,0))
sdmat=cbind(sdval[1:4],c(sdval[5:7],0),c(sdval[8:9],0,0),c(sdval[10],0,0,0))
likdifmat=cbind(likval[1:4],c(likval[5:7],0),c(likval[8:9],0,0),c(likval[10],0,0,0))

par(mfrow=c(1,1))
fdr(Pval,.1)
list(st1[[3]],st2[[3]],Pmat,sdmat,likdifmat)
}
likelihood.compare.back.ecdf1 <-
function(data=psuedo.history.trial.128,season=1,Fresno=T,variable=1,condvar=c(1:3),f1=Fsp.nat0full0plus,h1=Hsp.nat0full0plus){
# try higher dimensional comparisons to get distance
#and consider dirichlet cutoff
#[[1]]=season,[[i]][[2]][[Fresno,Hawaii]],[[i]][[2]][[place]][[Yvariable]]$Y,modres1,modres2,modres3,modres4(working backward)
#loop through density for each i
#1 FOR EACH MODRES CALCULATE PREDICTIONS FOR CORRESPONDING YS
#2 ALSO INCLUDE MULTIDIMENSIONAL REWEIGING GOING FORWARD!!!
#dnorm or dnorm?

data1<-data[[season]][[2]]
par(mfrow=c(3,3))
data3cond<-list()
kcond<-length(condvar)
if(Fresno){
data2<-data1$Fresno[[variable]]
for(k in 1:kcond){
data3cond[[k]]<-data1$Fresno[[condvar[k]]]
tercile<-quantile(f1[,variable],c(1/3,2/3))
}
}else{
data2<-data1$Hawaii[[variable]]
for(k in 1:kcond){
data3cond[[k]]<-data1$Hawaii[[condvar[k]]]
tercile<-quantile(h1[,variable],c(1/3,2/3))
}

}
numpred<-length(data2$Y[,1])
llik00<-NULL
llik01<-NULL
llik02<-NULL
llik03<-NULL
pbound00<-NULL
pbound01<-NULL
pbound02<-NULL
pbound03<-NULL
y00<-NULL
y01<-NULL
y02<-NULL
y03<-NULL
#
#FIX ALL LLIK CALCS TO MATCH LLIK PBOUND CALCS AND CREATE OUTPUTS FOR PBOUNDS!!!
#
nlen<-length(data2$modres1[,1])
wt0<-rep(1/nlen,nlen)
wtlist<-list()
for(i in 1:numpred){
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound00<-rbind(pbound00,ana$con)
llik00<-c(llik00,ana$llik)
y00<-c(y00,ana$y)
###FINISH Y FROM HERE ON DOWN CBIND IN Y
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres2[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0)
pbound01<-rbind(pbound01,ana$con)
llik01<-c(llik01,ana$llik)
y01<-c(y01,ana$y)
#plot(den1)
#lines(c(data2$Y[i,2],data2$Y[i,2]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres3[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,3],data2$modres3[,i],wt=wt0)
pbound02<-rbind(pbound02,ana$con)
llik02<-c(llik02,ana$llik)
y02<-c(y02,ana$y)
#plot(den1)
#lines(c(data2$Y[i,3],data2$Y[i,3]),c(0,max(den1$y)),col=2)
#wtlist[[i]]<-wt0
#den1<-density(data2$modres4[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,4],data2$modres4[,i],wt=wt0)
pbound03<-rbind(pbound03,ana$con)
llik03<-c(llik03,ana$llik)
y03<-c(y03,ana$y)

#plot(den1)
#lines(c(data2$Y[i,4],data2$Y[i,4]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wt0

}
llik10<-NULL
llik11<-NULL
llik12<-NULL
pbound10<-NULL
pbound11<-NULL
pbound12<-NULL
y10<-NULL
y11<-NULL
y12<-NULL
for(i in 1:numpred){
wt1<-1
for(k in 1:kcond){
wt1<-wt1*dnorm(data3cond[[k]]$modres4[,i]-data3cond[[k]]$Y[i,4])
}
wt1<-wt1/sum(wt1)
wtmat<-cbind(wtlist[[i]],wt1)
wt0<-apply(wtmat,1,sum)
wt0<-wt0/sum(wt0)
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound10<-rbind(pbound10,ana$con)
llik10<-c(llik10,ana$llik)
y10<-c(y10,ana$y)
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres2[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0)
pbound11<-rbind(pbound11,ana$con)
llik11<-c(llik11,ana$llik)
y11<-c(y11,ana$y)
#plot(den1)
#lines(c(data2$Y[i,2],data2$Y[i,2]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres3[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,3],data2$modres3[,i],wt=wt0)
pbound12<-rbind(pbound12,ana$con)
llik12<-c(llik12,ana$llik)
y12<-c(y12,ana$y)
#plot(den1)
#lines(c(data2$Y[i,3],data2$Y[i,3]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wtmat
}
#
#START HERE
#

llik20<-NULL
llik21<-NULL
pbound20<-NULL
pbound21<-NULL
y20<-NULL
y21<-NULL
for(i in 1:numpred){
wt1<-1
for(k in 1:kcond){
wt1<-wt1*dnorm(data3cond[[k]]$modres3[,i]-data3cond[[k]]$Y[i,3])
}
wt1<-wt1/sum(wt1)
wtmat<-cbind(wtlist[[i]],wt1)
wt0<-apply(wtmat,1,sum)
wt0<-wt0/sum(wt0)
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound20<-rbind(pbound20,ana$con)
llik20<-c(llik10,ana$llik)
y20<-c(y20,ana$y)
#llik20<-c(llik20,analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0))
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres2[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0)
pbound21<-rbind(pbound21,ana$con)
llik21<-c(llik21,ana$llik)
y21<-c(y21,ana$y)
#llik21<-c(llik21,analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0))
#plot(den1)
#lines(c(data2$Y[i,2],data2$Y[i,2]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wtmat
}
llik30<-NULL
pbound30<-NULL
y30<-NULL
for(i in 1:numpred){
wt1<-1
for(k in 1:kcond){
wt1<-wt1*dnorm(data3cond[[k]]$modres2[,i]-data3cond[[k]]$Y[i,2])
}
wt1<-wt1/sum(wt1)
wtmat<-cbind(wtlist[[i]],wt1)
wt0<-apply(wtmat,1,sum)
wt0<-wt0/sum(wt0)
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound30<-rbind(pbound30,ana$con)
llik30<-c(llik30,ana$llik)
y30<-c(y30,ana$y)
#llik30<-c(llik30,analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0))
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wtmat
}
pbound00<-cbind(pbound00,y00)
pbound01<-cbind(pbound01,y01)
pbound02<-cbind(pbound02,y02)
pbound03<-cbind(pbound03,y03)
pbound10<-cbind(pbound10,y10)
pbound11<-cbind(pbound11,y11)
pbound12<-cbind(pbound12,y12)
pbound20<-cbind(pbound20,y20)
pbound21<-cbind(pbound21,y21)
pbound30<-cbind(pbound30,y30)
m1<-rbind(llik00,llik01,llik02,llik03,llik10,llik11,llik12,llik20,llik21,llik30)
m2<-apply(m1,1,sum)
m3<-rbind(m2[1:4],c(m2[5:7],0),c(m2[c(8,9)],0,0),c(m2[10],rep(0,3)))
p12<-predlik.test(llik00,llik10)
p13<-predlik.test(llik00,llik20)
p14<-predlik.test(llik00,llik30)
p21<-predlik.test(llik01,llik11)
p22<-predlik.test(llik01,llik21)
p31<-predlik.test(llik02,llik12)
ptmat<-cbind(c(p12[1],p13[1],p14[1]),c(p21[1],p22[1],0),c(p31[1],0,0))
#pwmat<-cbind(c(p12[2],p13[2],p14[2]),c(p21[2],p22[2],0),c(p31[2],0,0))
plist<-list(pbound4=list(pbound00,pbound10,pbound20,pbound30),pbound3=list(pbound01,pbound11,pbound21),pbound2=list(pbound02,pbound12),pbound1=list(pbound03))


list(likarray=m1,pval=ptmat,m3,pbound=plist)
}
predlik.test1 <-
function(v1,v2){
v32<-v2-v1
#print(rbind(v1,v2))
v32acf<-acf(v32,plot=F)$acf
naa<-ceiling(sqrt(length(v32)))
vv32a<-((var((v32))*(length(v32)-1)*c(1,2*cumsum(v32acf[-1][c(1:naa)]))))
tv32<-sum(v32)/sqrt(max(vv32a))
pv32<-2*(min(pt(tv32,length(v32)-1),1-pt(tv32,length(v32)-1)))
#pv32a<-wilcox.test(v32,alt="g")$p.val
c(pv32)
}
predlik.sd1 <-
function(v1,v2){
v32<-v2-v1
#print(rbind(v1,v2))
v32acf<-acf(v32,plot=F)$acf
naa<-ceiling(sqrt(length(v32)))
vv32a<-((var((v32))*(length(v32)-1)*c(1,2*cumsum(v32acf[-1][c(1:naa)]))))
sd32<-sqrt(max(vv32a))
c(sd32)
}
analog.llik.ecdf <-
function(x,dat,wt){
cdf<-ecdf.wt(dat,wt)
x1<-cdf$x
y1<-cdf$y
#
#Calculating posterior confidence bounds
#
qval<-c(.001,.25,.5,.75,.999)
cb<-approx(y1,x1,qval)$y
#print(cb)
#print(qval)
o1<-order(abs(x1-x))
n1<-length(dat)
win1<-c(1:ceiling(3*n1^(2/5)))
#print(length(unique(x1[o1[win1]])))

#Identify delay maps corresponding to increased Weights

den1<-log(lsfit(x1[o1[win1]],y1[o1[win1]])$coef[2])
if(is.inf(-den1)){
den0<-density(dat,weight=wt)
den1<-analog.llik(x,den0)
}
list(llik=den1, con=cb,y=x)

}
predlik.test <-
function(v1,v2){
v32<-v2-v1
#print(rbind(v1,v2))
v32acf<-acf(v32,plot=F)$acf
naa<-ceiling(sqrt(length(v32)))
vv32a<-((var((v32))*(length(v32)-1)*c(1,2*cumsum(v32acf[-1][c(1:naa)]))))
tv32<-sum(v32)/sqrt(max(vv32a))
pv32<-1-pt(tv32,length(v32)-1)
pv32a<-wilcox.test(v32,alt="g")$p.val
c(pv32,sqrt(max(vv32a)),sum(v32))
}
likelihood.compare.back.by.season.ecdf.rep <-
function(data=psuedo.history.trial.127.rep,Fresno=T,xvar=3,xcvar=c(1:3)){
Spring.thread<-likelihood.compare.back.ecdf(data,season=1,Fresno=Fresno,variable=xvar,condvar=xcvar)
Summer.thread<-likelihood.compare.back.ecdf(data,season=2,Fresno=Fresno,variable=xvar,condvar=xcvar)
Fall.thread<-likelihood.compare.back.ecdf(data,season=3,Fresno=Fresno,variable=xvar,condvar=xcvar)
Winter.thread<-likelihood.compare.back.ecdf(data,season=4,Fresno=Fresno,variable=xvar,condvar=xcvar)
#
#ADD IN AN sd vec, lik the likvecs for each season  That gets added in to the variability from resampling for the proper bounds, but fix bootstrapvariablility
#
subvec<-c(8,11,12,14:16,24,27,28,30:32,40,43,44,46:48,56,59,60,62:64)
Spring.lik1<-cbind(Spring.thread[[1]][,1],Summer.thread[[1]][,2],Fall.thread[[1]][,3],Winter.thread[[1]][,4])
Spring.pbound<-list(Spring.thread$plist$pbound4,Summer.thread$plist$pbound3,Fall.thread$plist$pbound2,Winter.thread$plist$pbound1)
Spring.sd1<-cbind(Spring.thread[[3]][,1],Summer.thread[[3]][,2],Fall.thread[[3]][,3],Winter.thread[[3]][,4])
Spring.p<-cbind(Spring.thread[[2]][,1],Summer.thread[[2]][,2],Fall.thread[[2]][,3])
Spring.sd2<-cbind(Spring.thread[[4]][,1],Summer.thread[[4]][,2],Fall.thread[[4]][,3])
Spring.ld<-cbind(Spring.thread[[5]][,1],Summer.thread[[5]][,2],Fall.thread[[5]][,3])
Summer.lik1<-cbind(Summer.thread[[1]][,1],Fall.thread[[1]][,2],Winter.thread[[1]][,3],Spring.thread[[1]][,4])
Summer.pbound<-list(Summer.thread$plist$pbound4,Fall.thread$plist$pbound3,Winter.thread$plist$pbound2,Spring.thread$plist$pbound1)
Summer.sd1<-cbind(Summer.thread[[3]][,1],Fall.thread[[3]][,2],Winter.thread[[3]][,3],Spring.thread[[3]][,4])
Summer.p<-cbind(Summer.thread[[2]][,1],Fall.thread[[2]][,2],Winter.thread[[2]][,3])
Summer.sd2<-cbind(Summer.thread[[4]][,1],Fall.thread[[4]][,2],Winter.thread[[4]][,3])
Summer.ld<-cbind(Summer.thread[[5]][,1],Fall.thread[[5]][,2],Winter.thread[[5]][,3])
Fall.lik1<-cbind(Fall.thread[[1]][,1],Winter.thread[[1]][,2],Spring.thread[[1]][,3],Summer.thread[[1]][,4])
Fall.pbound<-list(Fall.thread$plist$pbound4,Winter.thread$plist$pbound3,Spring.thread$plist$pbound2,Summer.thread$plist$pbound1)
Fall.sd1<-cbind(Fall.thread[[3]][,1],Winter.thread[[3]][,2],Spring.thread[[3]][,3],Summer.thread[[3]][,4])
Fall.p<-cbind(Fall.thread[[2]][,1],Winter.thread[[2]][,2],Spring.thread[[2]][,3])
Fall.sd2<-cbind(Fall.thread[[4]][,1],Winter.thread[[4]][,2],Spring.thread[[4]][,3])
Fall.ld<-cbind(Fall.thread[[5]][,1],Winter.thread[[5]][,2],Spring.thread[[5]][,3])
Winter.lik1<-cbind(Winter.thread[[1]][,1],Spring.thread[[1]][,2],Summer.thread[[1]][,3],Fall.thread[[1]][,4])
Winter.pbound<-list(Winter.thread$plist$pbound4,Spring.thread$plist$pbound3,Summer.thread$plist$pbound2,Fall.thread$plist$pbound1)
Winter.sd1<-cbind(Winter.thread[[3]][,1],Spring.thread[[3]][,2],Summer.thread[[3]][,3],Fall.thread[[3]][,4])
Winter.p<-cbind(Winter.thread[[2]][,1],Spring.thread[[2]][,2],Summer.thread[[2]][,3])
Winter.sd2<-cbind(Winter.thread[[4]][,1],Spring.thread[[4]][,2],Summer.thread[[4]][,3])
Winter.ld<-cbind(Winter.thread[[5]][,1],Spring.thread[[5]][,2],Summer.thread[[5]][,3])
Spring.pvec<-c(Spring.p[,1],Spring.p[1:2,2],Spring.p[1,3])
Summer.pvec<-c(Summer.p[,1],Summer.p[1:2,2],Summer.p[1,3])
Fall.pvec<-c(Fall.p[,1],Fall.p[1:2,2],Fall.p[1,3])
Winter.pvec<-c(Winter.p[,1],Winter.p[1:2,2],Winter.p[1,3])
Spring.sd2vec<-c(Spring.sd2[,1],Spring.sd2[1:2,2],Spring.sd2[1,3])
Summer.sd2vec<-c(Summer.sd2[,1],Summer.sd2[1:2,2],Summer.sd2[1,3])
Fall.sd2vec<-c(Fall.sd2[,1],Fall.sd2[1:2,2],Fall.sd2[1,3])
Winter.sd2vec<-c(Winter.sd2[,1],Winter.sd2[1:2,2],Winter.sd2[1,3])
Spring.ld2vec<-c(Spring.ld[,1],Spring.ld[1:2,2],Spring.ld[1,3])
Summer.ld2vec<-c(Summer.ld[,1],Summer.ld[1:2,2],Summer.ld[1,3])
Fall.ld2vec<-c(Fall.ld[,1],Fall.ld[1:2,2],Fall.ld[1,3])
Winter.ld2vec<-c(Winter.ld[,1],Winter.ld[1:2,2],Winter.ld[1,3])

par(mfcol=c(1,1))
#fdr(Spring.pvec,.1,ind=F,stringmain="Spring")
#fdr(Summer.pvec,.1,ind=F,stringmain="Summer")
#fdr(Fall.pvec,.1,ind=F,stringmain="Fall")
#fdr(Winter.pvec,.1,ind=F,stringmain="Winter")
fdr.out<-fdr(c(Spring.pvec,Summer.pvec,Fall.pvec,Winter.pvec),.1,ind=F,stringmain="All seasons, solar")
ld2vec<-c(Spring.ld2vec,Summer.ld2vec,Fall.ld2vec,Winter.ld2vec)
sd2vec<-c(Spring.sd2vec,Summer.sd2vec,Fall.sd2vec,Winter.sd2vec)

list(likvec=c(Spring.lik1,Summer.lik1,Fall.lik1,Winter.lik1)[-subvec],sdvec=c(Spring.sd1,Summer.sd1,Fall.sd1,Winter.sd1)[-subvec],likdif=ld2vec,sddif=sd2vec,fdr.out=fdr.out,pvec=c(Spring.pvec,Summer.pvec,Fall.pvec,Winter.pvec),
Springbounds=Spring.pbound,Summerbounds=Summer.pbound,Fallbounds=Fall.pbound,Winterbounds=Winter.pbound)
}
likelihood.compare.back.ecdf <-
function(data=psuedo.history.trial.128,season=1,Fresno=T,variable=1,condvar=c(1:3),h1=Hsp.nat0full0plus,f1=Fsp.nat0full0plus){
# try higher dimensional comparisons to get distance
#and consider dirichlet cutoff
#[[1]]=season,[[i]][[2]][[Fresno,Hawaii]],[[i]][[2]][[place]][[Yvariable]]$Y,modres1,modres2,modres3,modres4(working backward)
#loop through density for each i
#1 FOR EACH MODRES CALCULATE PREDICTIONS FOR CORRESPONDING YS
#2 ALSO INCLUDE MULTIDIMENSIONAL REWEIGING GOING FORWARD!!!
#dnorm or dnorm?

#incorporate Delmap into calculations so reweighting identifies likelhoods that increase
# eachthread should get its delaymap
data1<-data[[season]][[2]]
par(mfrow=c(3,3))
data3cond<-list()
kcond<-length(condvar)
if(Fresno){
data2<-data1$Fresno[[variable]]
for(k in 1:kcond){
data3cond[[k]]<-data1$Fresno[[condvar[k]]]
tercile<-quantile(f1[,variable],c(1/3,2/3))
}
}else{
data2<-data1$Hawaii[[variable]]
for(k in 1:kcond){
data3cond[[k]]<-data1$Hawaii[[condvar[k]]]
tercile<-quantile(h1[,variable],c(1/3,2/3))
}
#Add in analog.llik.weight.inverter
#figure out for all learning
}
numpred<-length(data2$Y[,1])
llik00<-NULL
llik01<-NULL
llik02<-NULL
llik03<-NULL
pbound00<-NULL
pbound01<-NULL
pbound02<-NULL
pbound03<-NULL
y00<-NULL
y01<-NULL
y02<-NULL
y03<-NULL
#
#FIX ALL LLIK CALCS TO MATCH LLIK PBOUND CALCS AND CREATE OUTPUTS FOR PBOUNDS!!!
#
nlen<-length(data2$modres1[,1])
wt0<-rep(1/nlen,nlen)
wtlist<-list()
for(i in 1:numpred){
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound00<-rbind(pbound00,ana$con)
llik00<-c(llik00,ana$llik)
y00<-c(y00,ana$y)
###FINISH Y FROM HERE ON DOWN CBIND IN Y
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres2[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0)
pbound01<-rbind(pbound01,ana$con)
llik01<-c(llik01,ana$llik)
y01<-c(y01,ana$y)
#plot(den1)
#lines(c(data2$Y[i,2],data2$Y[i,2]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres3[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,3],data2$modres3[,i],wt=wt0)
pbound02<-rbind(pbound02,ana$con)
llik02<-c(llik02,ana$llik)
y02<-c(y02,ana$y)
#plot(den1)
#lines(c(data2$Y[i,3],data2$Y[i,3]),c(0,max(den1$y)),col=2)
#wtlist[[i]]<-wt0
#den1<-density(data2$modres4[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,4],data2$modres4[,i],wt=wt0)
pbound03<-rbind(pbound03,ana$con)
llik03<-c(llik03,ana$llik)
y03<-c(y03,ana$y)

#plot(den1)
#lines(c(data2$Y[i,4],data2$Y[i,4]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wt0

}
llik10<-NULL
llik11<-NULL
llik12<-NULL
pbound10<-NULL
pbound11<-NULL
pbound12<-NULL
y10<-NULL
y11<-NULL
y12<-NULL
for(i in 1:numpred){
wt1<-1
for(k in 1:kcond){
wt1<-wt1*dnorm(data3cond[[k]]$modres4[,i]-data3cond[[k]]$Y[i,4])
}
wt1<-wt1/sum(wt1)
wtmat<-cbind(wtlist[[i]],wt1)
wt0<-apply(wtmat,1,sum)
wt0<-wt0/sum(wt0)
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound10<-rbind(pbound10,ana$con)
llik10<-c(llik10,ana$llik)
y10<-c(y10,ana$y)
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres2[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0)
pbound11<-rbind(pbound11,ana$con)
llik11<-c(llik11,ana$llik)
y11<-c(y11,ana$y)
#plot(den1)
#lines(c(data2$Y[i,2],data2$Y[i,2]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres3[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,3],data2$modres3[,i],wt=wt0)
pbound12<-rbind(pbound12,ana$con)
llik12<-c(llik12,ana$llik)
y12<-c(y12,ana$y)
#plot(den1)
#lines(c(data2$Y[i,3],data2$Y[i,3]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wtmat
}
#
#START HERE
#

llik20<-NULL
llik21<-NULL
pbound20<-NULL
pbound21<-NULL
y20<-NULL
y21<-NULL
for(i in 1:numpred){
wt1<-1
for(k in 1:kcond){
wt1<-wt1*dnorm(data3cond[[k]]$modres3[,i]-data3cond[[k]]$Y[i,3])
}
wt1<-wt1/sum(wt1)
wtmat<-cbind(wtlist[[i]],wt1)
wt0<-apply(wtmat,1,sum)
wt0<-wt0/sum(wt0)
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound20<-rbind(pbound20,ana$con)
llik20<-c(llik10,ana$llik)
y20<-c(y20,ana$y)
#llik20<-c(llik20,analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0))
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
#den1<-density(data2$modres2[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0)
pbound21<-rbind(pbound21,ana$con)
llik21<-c(llik21,ana$llik)
y21<-c(y21,ana$y)
#llik21<-c(llik21,analog.llik.ecdf(data2$Y[i,2],data2$modres2[,i],wt=wt0))
#plot(den1)
#lines(c(data2$Y[i,2],data2$Y[i,2]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wtmat
}
llik30<-NULL
pbound30<-NULL
y30<-NULL
for(i in 1:numpred){
wt1<-1
for(k in 1:kcond){
wt1<-wt1*dnorm(data3cond[[k]]$modres2[,i]-data3cond[[k]]$Y[i,2])
}
wt1<-wt1/sum(wt1)
wtmat<-cbind(wtlist[[i]],wt1)
wt0<-apply(wtmat,1,sum)
wt0<-wt0/sum(wt0)
#den1<-density(data2$modres1[,i],weight=wt0)
ana<-analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0)
pbound30<-rbind(pbound30,ana$con)
llik30<-c(llik30,ana$llik)
y30<-c(y30,ana$y)
#llik30<-c(llik30,analog.llik.ecdf(data2$Y[i,1],data2$modres1[,i],wt=wt0))
#plot(den1)
#lines(c(data2$Y[i,1],data2$Y[i,1]),c(0,max(den1$y)),col=2)
wtlist[[i]]<-wtmat
}
pbound00<-cbind(pbound00,y00)
pbound01<-cbind(pbound01,y01)
pbound02<-cbind(pbound02,y02)
pbound03<-cbind(pbound03,y03)
pbound10<-cbind(pbound10,y10)
pbound11<-cbind(pbound11,y11)
pbound12<-cbind(pbound12,y12)
pbound20<-cbind(pbound20,y20)
pbound21<-cbind(pbound21,y21)
pbound30<-cbind(pbound30,y30)
m1<-rbind(llik00,llik01,llik02,llik03,llik10,llik11,llik12,llik20,llik21,llik30)
m2<-apply(m1,1,sum)
m3<-rbind(m2[1:4],c(m2[5:7],0),c(m2[c(8,9)],0,0),c(m2[10],rep(0,3)))
p12<-predlik.test(llik00,llik10)
p13<-predlik.test(llik00,llik20)
p14<-predlik.test(llik00,llik30)
p21<-predlik.test(llik01,llik11)
p22<-predlik.test(llik01,llik21)
p31<-predlik.test(llik02,llik12)
sd00<-predlik.sd(llik00)
sd10<-predlik.sd(llik10)
sd20<-predlik.sd(llik20)
sd30<-predlik.sd(llik30)
sd01<-predlik.sd(llik01)
sd11<-predlik.sd(llik11)
sd21<-predlik.sd(llik21)
sd02<-predlik.sd(llik02)
sd12<-predlik.sd(llik12)
sd03<-predlik.sd(llik03)
sdm<-rbind(c(sd00,sd01,sd02,sd03),c(sd10,sd11,sd12,0),c(sd20,sd21,0,0),c(sd30,0,0,0))
ptmat<-cbind(c(p12[1],p13[1],p14[1]),c(p21[1],p22[1],0),c(p31[1],0,0))
sdm2<-cbind(c(p12[2],p13[2],p14[2]),c(p21[2],p22[2],0),c(p31[2],0,0))
ldm2<-cbind(c(p12[3],p13[3],p14[3]),c(p21[3],p22[3],0),c(p31[3],0,0))
plist<-list(pbound4=list(pbound00,pbound10,pbound20,pbound30),pbound3=list(pbound01,pbound11,pbound21),pbound2=list(pbound02,pbound12),pbound1=list(pbound03))

#plist<-list(pbound4=list(pbound00,pbound01,pbound02,pbound03),pbound3=list(pbound10,pbound11,pbound12),pbound2=list(pbound20,pbound21),pbound1=list(pbound30))
#pwmat<-cbind(c(p12[2],p13[2],p14[2]),c(p21[2],p22[2],0),c(p31[2],0,0))

list(likarray=m3,pval=ptmat,sdarray=sdm,sdtestarray=sdm2,likdifarray=ldm2,plist=plist)
}
analog.llik <-
function(x,dens){
log(approx(dens$x,dens$y,x,yleft=1e-50,yright=1e-50,rule=2)$y)
}
ecdf.wt <-
function(x,wt)
{
o1<-order(x)
x1<-x[o1]
w1<-wt[o1]
yt1<-cumsum(w1)
y1<-yt1/max(yt1)
list(x=x1,y=y1)
}
my.pair.loop.toty <-
function(nat.mat,ycola=1,vecsel,npred1,npred2,ysel=1,season.number){
library(e1071)
m1<-NULL
m0<-NULL
vec<-c(1:160)
par(mfrow=c(4,4))
#for(i in 1:16){
i<-1
k1<-0
k1npred<-npred1
print(paste("ycola=",ycola))
print(vecsel)
print(nat.mat[c(1:2),])
print(nat.mat[c(1,2),vecsel])
#
m0<-my.test.chaos.reg4nn.measure.orig.augH.movie.percseas.clean.toty((nat.mat)[,vecsel],vec,,meas=36,ncol=60,npred=k1npred,npred2=npred2,ycol=ycola,orth=T,season.number=season.number)
m0
}
my.uberloop.totyL <-
function(fresno.loop1=c(1,3:8),npred1=4,npred2=1){
puppy<-list()
predcol1<-1
yselvec<-3
npredcol<-length(predcol1)
puppy<-list()
for(ix in 1:4){
	puppy[[(ix)]]<-list(season=ix,output=my.overloopHF.totyL(predcol1,npred1,npred2,yselvec,fresno.loop1,season.number=ix))
}
puppy
}
my.overloopHF.totyL <-
function(predcol,npred1=1,npred2,ysel0=4,fresno.model1,season.number){
ysel0=4
##function(nat.mat,ycola=1,vecsel,npred1,npred2,ysel=1,season.number)
#Fresno1a<-my.pair.loop.toty(LorenzPLUSERRORS1A,predcol,fresno.model1,npred1=npred1,npred2,ysel=ysel0,season.number=season.number)
Fresno1a<-c(1)
Hawaii1a<-my.pair.loop.toty(LorenzPLUSERRORS1A1,predcol,fresno.model1,npred1=npred1,npred2,ysel=ysel0,season.number=season.number)
list(Fresno=Fresno1a,Hawaii=Hawaii1a)
}
predlik.sd <-
function(v1){
v32<-v1
#print(rbind(v1,v2))
v32acf<-acf(v32,plot=F)$acf
naa<-ceiling(sqrt(length(v32)))
vv32a<-((var((v32))*(length(v32)-1)*c(1,2*cumsum(v32acf[-1][c(1:naa)]))))
sdv32<-sqrt(max(vv32a))
sdv32
}
